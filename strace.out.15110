00:05:28 read(4, "ON ::=\n                  value(VALUE NotificationName)\n\n    ObjectsPart ::=\n                  \"OBJECTS\" \"{\" Objects \"}\"\n                | empty\n    Objects ::=\n                  Object\n\n                | Objects \",\" Object\n    Object ::=\n                  value(ObjectName)\n\n    Status ::=\n                  \"current\"\n                | \"deprecated\"\n                | \"obsolete\"\n\n    ReferPart ::=\n                  \"REFERENCE\" Text\n                | empty\n\n    -- a character string as defined in section 3.1.1\n    Text ::= value(IA5String)\nEND\n\n-- definitions of administrative identifiers\n\nzeroDotZero    OBJECT-IDENTITY\n    STATUS     current\n    DESCRIPTION\n            \"A value used for null identifiers.\"\n    ::= { 0 0 }\n\nEND\n", 4096) = 732
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SNMPv2-TC.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267977, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=80, st_size=38034, st_atime=2017/03/22-11:45:21, st_mtime=2017/03/22-11:45:21, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "SNMPv2-TC DEFINITIONS ::= BEGIN\n\nIMPORTS\n    TimeTicks         FROM SNMPv2-SMI;\n\n-- definition of textual conventions\n\nTEXTUAL-CONVENTION MACRO ::=\n\nBEGIN\n    TYPE NOTATION ::=\n                  DisplayPart\n                  \"STATUS\" Status\n                  \"DESCRIPTION\" Text\n                  ReferPart\n                  \"SYNTAX\" Syntax\n\n    VALUE NOTATION ::=\n                   value(VALUE Syntax)      -- adapted ASN.1\n\n    DisplayPart ::=\n                  \"DISPLAY-HINT\" Text\n                | empty\n\n    Status ::=\n                  \"current\"\n                | \"deprecated\"\n                | \"obsolete\"\n\n    ReferPart ::=\n                  \"REFERENCE\" Text\n                | empty\n\n    -- a character string as defined in [2]\n    Text ::= value(IA5String)\n\n    Syntax ::=   -- Must be one of the following:\n                       -- a base type (or its refinement), or\n                       -- a BITS pseudo-type\n                  type\n                | \"BITS\" \"{\" NamedBits \"}\"\n\n    NamedB"..., 4096) = 4096
00:05:28 read(4, "eeds, the variable-\n            binding in the request and response PDUs are identical.)\n\n            The value of the ACCESS clause for objects having this\n            syntax is either `read-write' or `read-create'.  When an\n            instance of a columnar object having this syntax is created,\n            any value may be supplied via the management protocol.\n\n            When the network management portion of the system is re-\n            initialized, the value of every object instance having this\n            syntax must either be incremented from its value prior to\n            the re-initialization, or (if the value prior to the re-\n            initialization is unknown) be set to a pseudo-randomly\n            generated value.\"\n    SYNTAX       INTEGER (0..2147483647)\n\nAutonomousType ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n            \"Represents an independently extensible type identification\n            value.  It may, for example, indicate a particular "..., 4096) = 4096
00:05:28 read(4, "   station wishing to create a new instance of a\n                 conceptual row (but not make it available for use by\n                 the managed device); and,\n                 - `destroy', which is supplied by a management station\n                 wishing to delete all of the instances associated with\n                 an existing conceptual row.\n\n            Whereas five of the six values (all except `notReady') may\n            be specified in a management protocol set operation, only\n            three values will be returned in response to a management\n            protocol retrieval operation:  `notReady', `notInService' or\n            `active'.  That is, when queried, an existing conceptual row\n            has only three states:  it is either available for use by\n            the managed device (the status column has value `active');\n            it is not available for use by the managed device, though\n            the agent has sufficient information to attempt to make it\n         "..., 4096) = 4096
00:05:28 read(4, "         |     or    |             |\n              |              |           |             |\n              |              |see 2   ->D|see 8     ->D|          ->D\n--------------+--------------+-----------+-------------+-------------\nset status    |inconsistent- |inconsist- |noError      |noError   ->C\ncolumn to     |         Value|   entValue|             |\nnotInService  |              |           |             |\n              |              |     or    |             |      or\n              |              |           |             |\n              |              |see 3   ->C|          ->C|see 6\n--------------+--------------+-----------+-------------+-------------\nset status    |noError       |noError    |noError      |noError   ->A\ncolumn to     |              |           |             |      or\ndestroy       |           ->A|        ->A|          ->A|see 7\n--------------+--------------+-----------+-------------+-------------\nset any other |see 4         |noError    |noError      |see 5"..., 4096) = 4096
00:05:28 read(4, "r which the agent does not supply a default; and,\n            making the conceptual row available for use by the managed\n            device.\n\n            Interaction 1: Selecting an Instance-Identifier\n\n            The algorithm used to select an instance-identifier varies\n            for each conceptual row.  In some cases, the instance-\n            identifier is semantically significant, e.g., the\n            destination address of a route, and a management station\n            selects the instance-identifier according to the semantics.\n\n            In other cases, the instance-identifier is used solely to\n            distinguish conceptual rows, and a management station\n            without specific knowledge of the conceptual row might\n            examine the instances present in order to determine an\n            unused instance-identifier.  (This approach may be used, but\n            it is often highly sub-optimal; however, it is also a\n            questionable practice for a naive "..., 4096) = 4096
00:05:28 read(4, "            least one conceptual row would be accessible in the MIB\n                 view used by the retrieval were it to exist. For those\n                 columns to which the agent provides read-create access,\n                 the `noSuchInstance' exception tells the management\n                 station that it should supply a value for this column\n                 when the conceptual row is to be created.\n\n                 - the exception `noSuchObject' is returned, indicating\n                 that the agent does not implement the object-type\n                 associated with this column or that there is no\n                 conceptual row for which this column would be\n                 accessible in the MIB view used by the retrieval.  As\n                 such, the management station can not issue any\n                 management protocol set operations to create an\n                 instance of this column.\n\n            Once the column requirements have been determined, a\n            "..., 4096) = 4096
00:05:28 read(4, "  If the agent is unwilling to\n            process a request of this sort, the set operation fails with\n            an error of `wrongValue'.  (As a consequence, such an agent\n            must be prepared to accept a single management protocol set\n            operation, i.e., interaction 2a above, containing all of the\n            columns indicated by its column requirements.)  Otherwise,\n            the conceptual row is created, a `noError' response is\n            returned, and the status column is immediately set to either\n            `notInService' or `notReady', depending on whether it has\n            sufficient information to (attempt to) make the conceptual\n            row available for use by the managed device.  If there is\n            sufficient information available, then the status column is\n            set to `notInService'; otherwise, if there is insufficient\n            information, then the status column is set to `notReady'.\n            Regardless, we proceed to intera"..., 4096) = 4096
00:05:28 read(4, "           make the conceptual row available for use by the managed\n            device, the management protocol set operation succeeds (a\n            `noError' response is returned).  Otherwise, the management\n            protocol set operation fails with an error of\n            `inconsistentValue'.\n\n                                     NOTE WELL\n\n                 A conceptual row having a status column with value\n                 `notInService' or `notReady' is unavailable to the\n                 managed device.  As such, it is possible for the\n                 managed device to create its own instances during the\n                 time between the management protocol set operation\n                 which sets the status column to `createAndWait' and the\n                 management protocol set operation which sets the status\n                 column to `active'.  In this case, when the management\n                 protocol set operation is issued to set the status\n                 column"..., 4096) = 4096
00:05:28 read(4, "-- this value may be read, but not written\n                     notReady(3),\n                     -- the following three values are\n                     -- actions: these values may be written,\n                     --   but are never read\n                     createAndGo(4),\n                     createAndWait(5),\n                     destroy(6)\n                 }\n\nTimeStamp ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n            \"The value of the sysUpTime object at which a specific\n            occurrence happened.  The specific occurrence must be\n\n            defined in the description of any object defined using this\n            type.\n\n            If sysUpTime is reset to zero as a result of a re-\n            initialization of the network management (sub)system, then\n            the values of all TimeStamp objects are also reset.\n            However, after approximately 497 days without a re-\n            initialization, the sysUpTime object will reach 2^^32-1 and\n"..., 4096) = 4096
00:05:28 read(4, "readOnly(5)     -- e.g., completely in ROM\n                 }\n\nTDomain ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n          \"Denotes a kind of transport service.\n\n          Some possible values, such as snmpUDPDomain, are defined in\n          the SNMPv2-TM MIB module.  Other possible values are defined\n          in other MIB modules.\"\n    REFERENCE    \"The SNMPv2-TM MIB module is defined in RFC 1906.\"\n    SYNTAX       OBJECT IDENTIFIER\n\nTAddress ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n          \"Denotes a transport service address.\n\n          A TAddress value is always interpreted within the context of a\n          TDomain value.  Thus, each definition of a TDomain value must\n          be accompanied by a definition of a textual convention for use\n          with that TDomain.  Some possible textual conventions, such as\n          SnmpUDPAddress for snmpUDPDomain, are defined in the SNMPv2-TM\n          MIB module.  Other possible textual conven"..., 4096) = 1170
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/IF-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267899, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=144, st_size=71691, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "IF-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Counter32, Gauge32, Counter64,\n    Integer32, TimeTicks, mib-2,\n    NOTIFICATION-TYPE                        FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION, DisplayString,\n    PhysAddress, TruthValue, RowStatus,\n    TimeStamp, AutonomousType, TestAndIncr   FROM SNMPv2-TC\n    MODULE-COMPLIANCE, OBJECT-GROUP,\n    NOTIFICATION-GROUP                       FROM SNMPv2-CONF\n    snmpTraps                                FROM SNMPv2-MIB\n    IANAifType                               FROM IANAifType-MIB;\n\nifMIB MODULE-IDENTITY\n    LAST-UPDATED \"200006140000Z\"\n    ORGANIZATION \"IETF Interfaces MIB Working Group\"\n    CONTACT-INFO\n            \"   Keith McCloghrie\n                Cisco Systems, Inc.\n                170 West Tasman Drive\n                San Jose, CA  95134-1706\n                US\n\n                408-526-5260\n                kzm@cisco.com\"\n    DESCRIPTION\n            \"The MIB module to describe generic objects for network\n"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/SNMPv2-MIB.txt", O_RDONLY) = 5
00:05:28 fstat(5, {st_dev=makedev(145, 128), st_ino=108267973, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=29305, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e202000
00:05:28 read(5, "SNMPv2-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,\n    TimeTicks, Counter32, snmpModules, mib-2\n        FROM SNMPv2-SMI\n    DisplayString, TestAndIncr, TimeStamp\n\n        FROM SNMPv2-TC\n    MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP\n        FROM SNMPv2-CONF;\n\nsnmpMIB MODULE-IDENTITY\n    LAST-UPDATED \"200210160000Z\"\n    ORGANIZATION \"IETF SNMPv3 Working Group\"\n    CONTACT-INFO\n            \"WG-EMail:   snmpv3@lists.tislabs.com\n             Subscribe:  snmpv3-request@lists.tislabs.com\n\n             Co-Chair:   Russ Mundy\n                         Network Associates Laboratories\n             postal:     15204 Omega Drive, Suite 300\n                         Rockville, MD 20850-4601\n                         USA\n             EMail:      mundy@tislabs.com\n             phone:      +1 301 947-7107\n\n             Co-Chair:   David Harrington\n                         Enterasys Networks\n             postal:     35 Industrial Way\n                   "..., 4096) = 4096
00:05:28 read(5, "son for\n            this managed node, together with information on how\n            to contact this person.  If no contact information is\n            known, the value is the zero-length string.\"\n    ::= { system 4 }\n\nsysName OBJECT-TYPE\n    SYNTAX      DisplayString (SIZE (0..255))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n            \"An administratively-assigned name for this managed\n            node.  By convention, this is the node's fully-qualified\n            domain name.  If the name is unknown, the value is\n            the zero-length string.\"\n    ::= { system 5 }\n\nsysLocation OBJECT-TYPE\n    SYNTAX      DisplayString (SIZE (0..255))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n            \"The physical location of this node (e.g., 'telephone\n            closet, 3rd floor').  If the location is unknown, the\n            value is the zero-length string.\"\n    ::= { system 6 }\n\nsysServices OBJECT-TYPE\n    SYNTAX      INTEGER (0..127)\n "..., 4096) = 4096
00:05:28 read(5, "o various MIB modules supported\n            by the local SNMP application acting as a command\n            responder.\"\n    ::= { sysOREntry 2 }\n\nsysORDescr OBJECT-TYPE\n    SYNTAX     DisplayString\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"A textual description of the capabilities identified\n            by the corresponding instance of sysORID.\"\n    ::= { sysOREntry 3 }\n\nsysORUpTime OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The value of sysUpTime at the time this conceptual\n            row was last instantiated.\"\n    ::= { sysOREntry 4 }\n\n-- the SNMP group\n--\n-- a collection of objects providing basic instrumentation and\n-- control of an SNMP entity.\n\nsnmp     OBJECT IDENTIFIER ::= { mib-2 11 }\n\nsnmpInPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The total number of messages delivered to the SNMP\n            en"..., 4096) = 4096
00:05:28 read(5, "ory so that it remains\n            constant across re-initializations of the network\n            management system.\"\n    ::= { snmp 30 }\n\nsnmpSilentDrops OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of Confirmed Class PDUs (such as\n           GetRequest-PDUs, GetNextRequest-PDUs,\n           GetBulkRequest-PDUs, SetRequest-PDUs, and\n           InformRequest-PDUs) delivered to the SNMP entity which\n           were silently dropped because the size of a reply\n           containing an alternate Response Class PDU (such as a\n           Response-PDU) with an empty variable-bindings field\n           was greater than either a local constraint or the\n           maximum message size associated with the originator of\n           the request.\"\n    ::= { snmp 31 }\n\nsnmpProxyDrops OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The total number of Conf"..., 4096) = 4096
00:05:28 read(5, " group\n--\n-- a collection of objects which allow several cooperating\n-- command generator applications to coordinate their use of the\n-- set operation.\n\nsnmpSet        OBJECT IDENTIFIER ::= { snmpMIBObjects 6 }\n\nsnmpSetSerialNo OBJECT-TYPE\n    SYNTAX     TestAndIncr\n    MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n            \"An advisory lock used to allow several cooperating\n            command generator applications to coordinate their\n            use of the SNMP set operation.\n\n            This object is used for coarse-grain coordination.\n            To achieve fine-grain coordination, one or more similar\n            objects might be defined within each MIB group, as\n            appropriate.\"\n    ::= { snmpSet 1 }\n\n-- conformance information\n\nsnmpMIBConformance\n               OBJECT IDENTIFIER ::= { snmpMIB 2 }\n\nsnmpMIBCompliances\n               OBJECT IDENTIFIER ::= { snmpMIBConformance 1 }\nsnmpMIBGroups  OBJECT IDENTIFIER ::= { snmpMIBConformance 2 }\n\n-- complian"..., 4096) = 4096
00:05:28 read(5, " defines objects which are common to all\n            managed systems.\"\n    ::= { snmpMIBGroups 6 }\n\nsnmpBasicNotificationsGroup NOTIFICATION-GROUP\n    NOTIFICATIONS { coldStart, authenticationFailure }\n    STATUS        current\n    DESCRIPTION\n       \"The basic notifications implemented by an SNMP entity\n        supporting command responder applications.\"\n    ::= { snmpMIBGroups 7 }\n\nsnmpWarmStartNotificationGroup NOTIFICATION-GROUP\n   NOTIFICATIONS { warmStart }\n   STATUS        current\n   DESCRIPTION\n     \"An additional notification for an SNMP entity supporting\n     command responder applications, if it is able to reinitialize\n     itself such that its configuration is unaltered.\"\n  ::= { snmpMIBGroups 11 }\n\nsnmpNotificationGroup OBJECT-GROUP\n    OBJECTS { snmpTrapOID, snmpTrapEnterprise }\n    STATUS  current\n    DESCRIPTION\n            \"These objects are required for entities\n            which support notification originator applications.\"\n    ::= { snmpMIBGroups 12 }\n\n-- definitio"..., 4096) = 4096
00:05:28 read(5, "ounter32\n    MAX-ACCESS  read-only\n    STATUS      obsolete\n    DESCRIPTION\n            \"The total number of SNMP Get-Request PDUs which\n            have been accepted and processed by the SNMP\n            protocol entity.\"\n    ::= { snmp 15 }\n\nsnmpInGetNexts OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      obsolete\n    DESCRIPTION\n            \"The total number of SNMP Get-Next PDUs which have been\n            accepted and processed by the SNMP protocol entity.\"\n    ::= { snmp 16 }\n\nsnmpInSetRequests OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      obsolete\n    DESCRIPTION\n            \"The total number of SNMP Set-Request PDUs which\n            have been accepted and processed by the SNMP protocol\n            entity.\"\n    ::= { snmp 17 }\n\nsnmpInGetResponses OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      obsolete\n    DESCRIPTION\n            \"The total number of SNMP Get-Response PDUs which\n   "..., 4096) = 4096
00:05:28 read(5, "NoSuchNames,\n              snmpInBadValues, snmpInReadOnlys, snmpInGenErrs,\n              snmpInTotalReqVars, snmpInTotalSetVars,\n              snmpInGetRequests, snmpInGetNexts, snmpInSetRequests,\n              snmpInGetResponses, snmpInTraps, snmpOutTooBigs,\n              snmpOutNoSuchNames, snmpOutBadValues,\n              snmpOutGenErrs, snmpOutGetRequests, snmpOutGetNexts,\n              snmpOutSetRequests, snmpOutGetResponses, snmpOutTraps\n              }\n    STATUS  obsolete\n    DESCRIPTION\n            \"A collection of objects from RFC 1213 made obsolete\n            by this MIB module.\"\n    ::= { snmpMIBGroups 10 }\n\nEND\n", 4096) = 633
00:05:28 read(5, "", 4096)              = 0
00:05:28 close(5)                       = 0
00:05:28 munmap(0x7fe60e202000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/IANAifType-MIB.txt", O_RDONLY) = 5
00:05:28 fstat(5, {st_dev=makedev(145, 128), st_ino=108267895, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=29665, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e202000
00:05:28 read(5, "   IANAifType-MIB DEFINITIONS ::= BEGIN\n\n   IMPORTS\n       MODULE-IDENTITY, mib-2      FROM SNMPv2-SMI\n       TEXTUAL-CONVENTION          FROM SNMPv2-TC;\n\n   ianaifType MODULE-IDENTITY\n       LAST-UPDATED \"200905060000Z\"  -- May 06, 2009\n       ORGANIZATION \"IANA\"\n       CONTACT-INFO \"        Internet Assigned Numbers Authority\n\n                     Postal: ICANN\n                             4676 Admiralty Way, Suite 330\n                             Marina del Rey, CA 90292\n\n                     Tel:    +1 310 823 9358\n                     E-Mail: iana&iana.org\"\n       DESCRIPTION  \"This MIB module defines the IANAifType Textual\n                     Convention, and thus the enumerated values of\n                     the ifType object defined in MIB-II's ifTable.\"\n\n       REVISION     \"200905060000Z\"  -- May 06, 2009\n       DESCRIPTION  \"Registration of new IANAifType 251.\"\n\n       REVISION     \"200902060000Z\"  -- February 06, 2009\n       DESCRIPTION  \"Registration of new IANAtunnelType "..., 4096) = 4096
00:05:28 read(5, "ifType 226.\"\n\n       REVISION     \"200405120000Z\"  -- May 12, 2004\n       DESCRIPTION  \"Added description for IANAifType 6, and \n\t                 changed the descriptions for IANAifTypes\n                     180, 181, and 182.\"\n\n       REVISION     \"200405070000Z\"  -- May 7, 2004\n       DESCRIPTION  \"Registration of new IANAifType 225.\"\n\n       REVISION     \"200308250000Z\"  -- Aug 25, 2003\n       DESCRIPTION  \"Deprecated IANAifTypes 7 and 11. Obsoleted\n                     IANAifTypes 62, 69, and 117.  ethernetCsmacd (6)\n                     should be used instead of these values\"\n\n       REVISION     \"200308180000Z\"  -- Aug 18, 2003\n       DESCRIPTION  \"Registration of new IANAifType\n                     224.\"\n\n       REVISION     \"200308070000Z\"  -- Aug 7, 2003\n       DESCRIPTION  \"Registration of new IANAifTypes\n                     222 and 223.\"\n\n       REVISION     \"200303180000Z\"  -- Mar 18, 2003\n       DESCRIPTION  \"Registration of new IANAifType\n                     221.\"\n\n   "..., 4096) = 4096
00:05:28 read(5, "\"Registration of new IANAifTypes 170,\n                     171, 172 and 173.\"\n\n       REVISION     \"200004250000Z\"  -- Apr 25, 2000\n       DESCRIPTION  \"Registration of new IANAifTypes 168 and 169.\"       \n\n       REVISION     \"200003060000Z\"  -- Mar 6, 2000\n       DESCRIPTION  \"Fixed a missing semi-colon in the IMPORT.\n                     Also cleaned up the REVISION log a bit.\n                     It is not complete, but from now on it will\n                     be maintained and kept up to date with each\n                     change to this MIB module.\"\n\n       REVISION     \"199910081430Z\"  -- Oct 08, 1999\n       DESCRIPTION  \"Include new name assignments up to cnr(85).\n                     This is the first version available via the WWW\n                     at: ftp://ftp.isi.edu/mib/ianaiftype.mib\"\n\n       REVISION     \"199401310000Z\"  -- Jan 31, 1994\n       DESCRIPTION  \"Initial version of this MIB as published in\n                     RFC 1573.\"\n       ::= { mib-2 30 }\n\n   IANAifTy"..., 4096) = 4096
00:05:28 read(5, "(29),          -- ULTRA technologies\n                   ds3(30),            -- DS3-MIB\n                   sip(31),            -- SMDS, coffee\n                   frameRelay(32),     -- DTE only. \n                   rs232(33),\n                   para(34),           -- parallel-port\n                   arcnet(35),         -- arcnet\n                   arcnetPlus(36),     -- arcnet plus\n                   atm(37),            -- ATM cells\n                   miox25(38),\n                   sonet(39),          -- SONET or SDH \n                   x25ple(40),\n                   iso88022llc(41),\n                   localTalk(42),\n                   smdsDxi(43),\n                   frameRelayService(44),  -- FRNETSERV-MIB\n                   v35(45),\n                   hssi(46),\n                   hippi(47),\n                   modem(48),          -- Generic modem\n                   aal5(49),           -- AAL5 over ATM\n                   sonetPath(50),\n                   sonetVT(51),\n                   "..., 4096) = 4096
00:05:28 read(5, "94),           -- Asymmetric Digital Subscriber Loop\n                   radsl(95),          -- Rate-Adapt. Digital Subscriber Loop\n                   sdsl(96),           -- Symmetric Digital Subscriber Loop\n                   vdsl(97),           -- Very H-Speed Digital Subscrib. Loop\n                   iso88025CRFPInt(98), -- ISO 802.5 CRFP\n                   myrinet(99),        -- Myricom Myrinet\n                   voiceEM(100),       -- voice recEive and transMit\n                   voiceFXO(101),      -- voice Foreign Exchange Office\n                   voiceFXS(102),      -- voice Foreign Exchange Station\n                   voiceEncap(103),    -- voice encapsulation\n                   voiceOverIp(104),   -- voice over IP encapsulation\n                   atmDxi(105),        -- ATM DXI\n                   atmFuni(106),       -- ATM FUNI\n                   atmIma (107),       -- ATM IMA\t\t   \n                   pppMultilinkBundle(108), -- PPP Multilink Bundle\n                   ipOverCdlc"..., 4096) = 4096
00:05:28 read(5, " Interface\n                   ss7SigLink (156),     -- SS7 Signaling Link \n                   propWirelessP2P (157),  --  Prop. P2P wireless interface\n                   frForward (158),    -- Frame Forward Interface\n                   rfc1483 (159),\t-- Multiprotocol over ATM AAL5\n                   usb (160),\t\t-- USB Interface\n                   ieee8023adLag (161),  -- IEEE 802.3ad Link Aggregate\n                   bgppolicyaccounting (162), -- BGP Policy Accounting\n                   frf16MfrBundle (163), -- FRF .16 Multilink Frame Relay \n                   h323Gatekeeper (164), -- H323 Gatekeeper\n                   h323Proxy (165), -- H323 Voice and Video Proxy\n                   mpls (166), -- MPLS                   \n                   mfSigLink (167), -- Multi-frequency signaling link\n                   hdsl2 (168), -- High Bit-Rate DSL - 2nd generation\n                   shdsl (169), -- Multirate HDSL2\n                   ds1FDL (170), -- Facility Data Link 4Kbps on a DS1\n       "..., 4096) = 4096
00:05:28 read(5, "-- GTP (GPRS Tunneling Protocol)\n                   pdnEtherLoop1 (217), -- Paradyne EtherLoop 1\n                   pdnEtherLoop2 (218), -- Paradyne EtherLoop 2\n                   opticalChannelGroup (219), -- Optical Channel Group\n                   homepna (220), -- HomePNA ITU-T G.989\t\t\t\t   \n                   gfp (221), -- Generic Framing Procedure (GFP)\n                   ciscoISLvlan (222), -- Layer 2 Virtual LAN using Cisco ISL\n                   actelisMetaLOOP (223), -- Acteleis proprietary MetaLOOP High Speed Link \n                   fcipLink (224), -- FCIP Link \n                   rpr (225), -- Resilient Packet Ring Interface Type\n                   qam (226), -- RF Qam Interface\n                   lmp (227), -- Link Management Protocol\n                   cblVectaStar (228), -- Cambridge Broadband Networks Limited VectaStar\n                   docsCableMCmtsDownstream (229), -- CATV Modular CMTS Downstream Interface\n                   adsl2 (230), -- Asymmetric Digital Subscr"..., 4096) = 4096
00:05:28 read(5, " identical to the policy for assigning IANAifType\n            values.\"\n    SYNTAX     INTEGER {\n                   other(1),        -- none of the following\n                   direct(2),       -- no intermediate header\n                   gre(3),          -- GRE encapsulation\n                   minimal(4),      -- Minimal encapsulation\n                   l2tp(5),         -- L2TP encapsulation\n                   pptp(6),         -- PPTP encapsulation\n                   l2f(7),          -- L2F encapsulation\n                   udp(8),          -- UDP encapsulation\n                   atmp(9),         -- ATMP encapsulation\n                   msdp(10),        -- MSDP encapsulation\n                   sixToFour(11),   -- 6to4 encapsulation\n                   sixOverFour(12), -- 6over4 encapsulation\n                   isatap(13),      -- ISATAP encapsulation\n                   teredo(14),      -- Teredo encapsulation\n                   ipHttps(15)      -- IPHTTPS\n               }\n\n   END\n", 4096) = 993
00:05:28 read(5, "", 4096)              = 0
00:05:28 close(5)                       = 0
00:05:28 munmap(0x7fe60e202000, 4096)   = 0
00:05:28 read(4, "    SYNTAX      Integer32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The number of network interfaces (regardless of their\n            current state) present on this system.\"\n    ::= { interfaces 1 }\n\nifTableLastChange  OBJECT-TYPE\n    SYNTAX      TimeTicks\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The value of sysUpTime at the time of the last creation or\n            deletion of an entry in the ifTable.  If the number of\n            entries has been unchanged since the last re-initialization\n            of the local network management subsystem, then this object\n            contains a zero value.\"\n    ::= { ifMIBObjects 5 }\n\n-- the Interfaces table\n\n-- The Interfaces table contains information on the entity's\n\n-- interfaces.  Each sub-layer below the internetwork-layer\n-- of a network interface is considered to be an interface.\n\nifTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF IfEntry\n    MAX-ACCESS  not-accessibl"..., 4096) = 4096
00:05:28 brk(0x1925000)                 = 0x1925000
00:05:28 brk(0x1924000)                 = 0x1924000
00:05:28 read(4, "he\n            size of the largest network datagram that can be sent on the\n            interface.\"\n    ::= { ifEntry 4 }\n\nifSpeed OBJECT-TYPE\n    SYNTAX      Gauge32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"An estimate of the interface's current bandwidth in bits\n            per second.  For interfaces which do not vary in bandwidth\n            or for those where no accurate estimation can be made, this\n            object should contain the nominal bandwidth.  If the\n            bandwidth of the interface is greater than the maximum value\n            reportable by this object then this object should report its\n            maximum value (4,294,967,295) and ifHighSpeed must be used\n            to report the interace's speed.  For a sub-layer which has\n            no concept of bandwidth, this object should be zero.\"\n    ::= { ifEntry 5 }\n\nifPhysAddress OBJECT-TYPE\n    SYNTAX      PhysAddress\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESC"..., 4096) = 4096
00:05:28 read(4, "\n            network management subsystem, then this object contains a\n            zero value.\"\n    ::= { ifEntry 9 }\n\nifInOctets OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The total number of octets received on the interface,\n            including framing characters.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.\"\n    ::= { ifEntry 10 }\n\nifInUcastPkts OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were not addressed to a multicast\n            or broadcast address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur at\n            re-initiali"..., 4096) = 4096
00:05:28 read(4, "d at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.\"\n    ::= { ifEntry 15 }\n\nifOutOctets OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The total number of octets transmitted out of the\n            interface, including framing characters.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.\"\n    ::= { ifEntry 16 }\n\nifOutUcastPkts OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The total number of packets that higher-level protocols\n            requested be transmitted, and which were not addressed to a\n            multicast or broadcast address at this sub-layer, including\n            those that were discarded or not sent.\n\n         "..., 4096) = 4096
00:05:28 read(4, "c MIB specify what value\n            ifSpecific should/can take for values of ifType.  If no MIB\n            definitions specific to the particular media are available,\n            the value should be set to the OBJECT IDENTIFIER { 0 0 }.\"\n    ::= { ifEntry 22 }\n\n--\n--   Extension to the interface table\n--\n-- This table replaces the ifExtnsTable table.\n--\n\nifXTable        OBJECT-TYPE\n    SYNTAX      SEQUENCE OF IfXEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"A list of interface entries.  The number of entries is\n            given by the value of ifNumber.  This table contains\n            additional objects for the interface table.\"\n    ::= { ifMIBObjects 1 }\n\nifXEntry        OBJECT-TYPE\n    SYNTAX      IfXEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"An entry containing additional management information\n            applicable to a particular interface.\"\n    AUGMENTS    { ifEntry }\n    ::= { ifXTabl"..., 4096) = 4096
00:05:28 read(4, "the value of\n            ifCounterDiscontinuityTime.\"\n    ::= { ifXEntry 3 }\n\nifOutMulticastPkts OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The total number of packets that higher-level protocols\n            requested be transmitted, and which were addressed to a\n            multicast address at this sub-layer, including those that\n            were discarded or not sent.  For a MAC layer protocol, this\n            includes both Group and Functional addresses.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.\"\n    ::= { ifXEntry 4 }\n\nifOutBroadcastPkts OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The total number of packets that higher-level protocols\n            reques"..., 4096) = 4096
00:05:28 read(4, "f\n            ifCounterDiscontinuityTime.\"\n    ::= { ifXEntry 9 }\n\nifHCOutOctets OBJECT-TYPE\n    SYNTAX      Counter64\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The total number of octets transmitted out of the\n            interface, including framing characters.  This object is a\n            64-bit version of ifOutOctets.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.\"\n    ::= { ifXEntry 10 }\n\nifHCOutUcastPkts OBJECT-TYPE\n    SYNTAX      Counter64\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The total number of packets that higher-level protocols\n            requested be transmitted, and which were not addressed to a\n            multicast or broadcast address at this sub-layer, including\n            those that were discarded or not sent. "..., 4096) = 4096
00:05:28 read(4, "    current\n    DESCRIPTION\n            \"This object has a value of false(2) if this interface only\n            accepts packets/frames that are addressed to this station.\n            This object has a value of true(1) when the station accepts\n            all packets/frames transmitted on the media.  The value\n            true(1) is only legal on certain types of media.  If legal,\n            setting this object to a value of true(1) may require the\n            interface to be reset before becoming effective.\n\n            The value of ifPromiscuousMode does not affect the reception\n            of broadcast and multicast packets/frames by the interface.\"\n    ::= { ifXEntry 16 }\n\nifConnectorPresent   OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"This object has the value 'true(1)' if the interface\n            sublayer has a physical connector and the value 'false(2)'\n            otherwise.\"\n    ::= { ifXEntry 17 }\n\nif"..., 4096) = 4096
00:05:28 read(4, "ackStatus.x.y=active\n\n            For each ifIndex value, I, which identifies an active\n            interface, there are always at least two instantiated rows\n            in this table associated with I.  For one of these rows, I\n            is the value of ifStackHigherLayer; for the other, I is the\n            value of ifStackLowerLayer.  (If I is not involved in\n            multiplexing, then these are the only two rows associated\n            with I.)\n\n            For example, two rows exist even for an interface which has\n            no others stacked on top or below it:\n\n              ifStackStatus.0.x=active\n              ifStackStatus.x.0=active \"\n     ::= { ifMIBObjects 2 }\n\nifStackEntry  OBJECT-TYPE\n     SYNTAX        IfStackEntry\n     MAX-ACCESS    not-accessible\n     STATUS        current\n     DESCRIPTION\n            \"Information on a particular relationship between two sub-\n            layers, specifying that one sub-layer runs on 'top' of the\n            other sub-layer.  "..., 4096) = 4096
00:05:28 read(4, "US      current\n    DESCRIPTION\n            \"This table contains an entry for each address (broadcast,\n            multicast, or uni-cast) for which the system will receive\n            packets/frames on a particular interface, except as follows:\n\n            - for an interface operating in promiscuous mode, entries\n            are only required for those addresses for which the system\n            would receive frames were it not operating in promiscuous\n            mode.\n\n            - for 802.5 functional addresses, only one entry is\n            required, for the address which has the functional address\n            bit ANDed with the bit mask of all functional addresses for\n            which the interface will accept frames.\n\n            A system is normally able to use any unicast address which\n            corresponds to an entry in this table as a source address.\"\n    ::= { ifMIBObjects 4 }\n\nifRcvAddressEntry  OBJECT-TYPE\n    SYNTAX      IfRcvAddressEntry\n    MAX-ACCESS  not-accessi"..., 4096) = 4096
00:05:28 read(4, "pliances OBJECT IDENTIFIER ::= { ifConformance 2 }\n\n-- compliance statements\n\nifCompliance3 MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n            \"The compliance statement for SNMP entities which have\n            network interfaces.\"\n\n    MODULE  -- this module\n        MANDATORY-GROUPS { ifGeneralInformationGroup,\n                           linkUpDownNotificationsGroup }\n\n-- The groups:\n--        ifFixedLengthGroup\n--        ifHCFixedLengthGroup\n--        ifPacketGroup\n--        ifHCPacketGroup\n--        ifVHCPacketGroup\n-- are mutually exclusive; at most one of these groups is implemented\n-- for a particular interface.  When any of these groups is implemented\n-- for a particular interface, then ifCounterDiscontinuityGroup must\n-- also be implemented for that interface.\n\n        GROUP       ifFixedLengthGroup\n        DESCRIPTION\n            \"This group is mandatory for those network interfaces which\n            are character-oriented or transmit data in fixed-length\n       "..., 4096) = 4096
00:05:28 read(4, "            ifTableLastChange }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects providing information applicable to\n            all network interfaces.\"\n    ::= { ifGroups 10 }\n\n-- the following five groups are mutually exclusive; at most\n-- one of these groups is implemented for any interface\n\nifFixedLengthGroup    OBJECT-GROUP\n    OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,\n              ifInErrors, ifOutErrors }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects providing information specific to\n            non-high speed (non-high speed interfaces transmit and\n            receive at speeds less than or equal to 20,000,000\n            bits/second) character-oriented or fixed-length-transmission\n            network interfaces.\"\n    ::= { ifGroups 2 }\n\nifHCFixedLengthGroup    OBJECT-GROUP\n    OBJECTS { ifHCInOctets, ifHCOutOctets,\n              ifInOctets, ifOutOctets, ifInUnknownProtos,\n              ifInErrors, ifOutErrors }\n "..., 4096) = 4096
00:05:28 read(4, " STATUS  current\n    DESCRIPTION\n            \"A collection of objects providing information specific to\n            interface counter discontinuities.\"\n    ::= { ifGroups 13 }\n\nlinkUpDownNotificationsGroup  NOTIFICATION-GROUP\n    NOTIFICATIONS { linkUp, linkDown }\n    STATUS  current\n    DESCRIPTION\n            \"The notifications which indicate specific changes in the\n            value of ifOperStatus.\"\n    ::= { ifGroups 14 }\n\n-- Deprecated Definitions - Objects\n\n--\n--    The Interface Test Table\n--\n-- This group of objects is optional.  However, a media-specific\n\n-- MIB may make implementation of this group mandatory.\n--\n-- This table replaces the ifExtnsTestTable\n--\n\nifTestTable   OBJECT-TYPE\n    SYNTAX      SEQUENCE OF IfTestEntry\n    MAX-ACCESS  not-accessible\n    STATUS      deprecated\n    DESCRIPTION\n            \"This table contains one entry per interface.  It defines\n            objects which allow a network manager to instruct an agent\n            to test an interface for var"..., 4096) = 4096
00:05:28 read(4, "incremented by the agent (per the\n            semantics of TestAndIncr).  Failure of the set operation\n            indicates that some other manager has obtained ownership of\n            the ifTestEntry.\n\n            Once ownership is obtained, any test parameters can be\n            setup, and then the test is initiated by setting ifTestType.\n            On completion of the test, the agent sets ifTestStatus to\n            'notInUse'.  Once this occurs, the manager can retrieve the\n            results.  In the (rare) event that the invocation of tests\n            by two network managers were to overlap, then there would be\n            a possibility that the first test's results might be\n            overwritten by the second test's results prior to the first\n\n            results being read.  This unlikely circumstance can be\n            detected by a network manager retrieving ifTestId at the\n            same time as retrieving the test results, and ensuring that\n            the results"..., 4096) = 4096
00:05:28 read(4, "om 'notInUse(1)' to 'inUse(2)'.\n            After completion of a test, the agent resets the value back\n            to 'notInUse(1)'.\"\n    ::= { ifTestEntry 2 }\n\nifTestType       OBJECT-TYPE\n    SYNTAX       AutonomousType\n    MAX-ACCESS   read-write\n    STATUS       deprecated\n    DESCRIPTION\n            \"A control variable used to start and stop operator-\n            initiated interface tests.  Most OBJECT IDENTIFIER values\n            assigned to tests are defined elsewhere, in association with\n            specific types of interface.  However, this document assigns\n            a value for a full-duplex loopback test, and defines the\n            special meanings of the subject identifier:\n\n                noTest  OBJECT IDENTIFIER ::= { 0 0 }\n\n            When the value noTest is written to this object, no action\n            is taken unless a test is in progress, in which case the\n            test is aborted.  Writing any other value to this object is\n\n            only valid when no"..., 4096) = 4096
00:05:28 read(4, "  STATUS  deprecated\n    DESCRIPTION\n            \"The previous collection of objects providing information on\n            the layering of MIB-II interfaces.\"\n    ::= { ifGroups 9 }\n\nifOldObjectsGroup    OBJECT-GROUP\n    OBJECTS { ifInNUcastPkts, ifOutNUcastPkts,\n              ifOutQLen, ifSpecific }\n    STATUS  deprecated\n    DESCRIPTION\n            \"The collection of objects deprecated from the original MIB-\n            II interfaces group.\"\n    ::= { ifGroups 12 }\n\n-- Deprecated Definitions - Compliance\n\nifCompliance MODULE-COMPLIANCE\n    STATUS  deprecated\n    DESCRIPTION\n            \"A compliance statement defined in a previous version of\n            this MIB module, for SNMP entities which have network\n            interfaces.\"\n\n    MODULE  -- this module\n        MANDATORY-GROUPS { ifGeneralGroup, ifStackGroup }\n\n        GROUP       ifFixedLengthGroup\n        DESCRIPTION\n            \"This group is mandatory for all network interfaces which\n            are character-oriented or tran"..., 4096) = 4096
00:05:28 read(4, "TION\n            \"This group is mandatory only for those network interfaces\n            which are character-oriented or transmit data in fixed-\n            length transmission units, and for which the value of the\n            corresponding instance of ifSpeed is greater than 20,000,000\n            bits/second.\"\n\n        GROUP       ifPacketGroup\n        DESCRIPTION\n            \"This group is mandatory for all network interfaces which\n            are packet-oriented.\"\n\n        GROUP       ifHCPacketGroup\n        DESCRIPTION\n            \"This group is mandatory only for those network interfaces\n            which are packet-oriented and for which the value of the\n            corresponding instance of ifSpeed is greater than\n            650,000,000 bits/second.\"\n\n        GROUP       ifRcvAddressGroup\n        DESCRIPTION\n            \"The applicability of this group MUST be defined by the\n            media-specific MIBs.  Media-specific MIBs must define the\n            exact meaning, use, an"..., 4096) = 2059
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "BJECT IDENTIFIER ::= { host 7 }\n\n-- textual conventions\n\nKBytes ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n        \"Storage size, expressed in units of 1024 bytes.\"\n    SYNTAX Integer32 (0..2147483647)\n\nProductID ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n        \"This textual convention is intended to identify the\n\n        manufacturer, model, and version of a specific\n        hardware or software product.  It is suggested that\n        these OBJECT IDENTIFIERs are allocated such that all\n        products from a particular manufacturer are registered\n        under a subtree distinct to that manufacturer.  In\n        addition, all versions of a product should be\n        registered under a subtree distinct to that product.\n        With this strategy, a management station may uniquely\n        determine the manufacturer and/or model of a product\n        whose productID is unknown to the management station.\n        Objects of this type may be useful for invento"..., 4096) = 4096
00:05:28 read(3, "X     Gauge32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of user sessions for which this host is\n        storing state information.  A session is a collection\n        of processes requiring a single act of user\n        authentication and possibly subject to collective job\n        control.\"\n    ::= { hrSystem 5 }\n\nhrSystemProcesses OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of process contexts currently loaded or\n        running on this system.\"\n    ::= { hrSystem 6 }\n\nhrSystemMaxProcesses OBJECT-TYPE\n    SYNTAX     Integer32 (0..2147483647)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The maximum number of process contexts this system\n        can support.  If there is no fixed maximum, the value\n        should be zero.  On systems that have a fixed maximum,\n        this object can help diagnose failures that occur when\n        this maximum is "..., 4096) = 4096
00:05:28 read(3, "T-TYPE\n    SYNTAX     AutonomousType\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The type of storage represented by this entry.\"\n    ::= { hrStorageEntry 2 }\n\nhrStorageDescr OBJECT-TYPE\n    SYNTAX     DisplayString\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"A description of the type and instance of the storage\n        described by this entry.\"\n    ::= { hrStorageEntry 3 }\n\nhrStorageAllocationUnits OBJECT-TYPE\n    SYNTAX     Integer32 (1..2147483647)\n    UNITS      \"Bytes\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The size, in bytes, of the data objects allocated\n        from this pool.  If this entry is monitoring sectors,\n        blocks, buffers, or packets, for example, this number\n        will commonly be greater than one.  Otherwise this\n        number will typically be one.\"\n    ::= { hrStorageEntry 4 }\n\nhrStorageSize OBJECT-TYPE\n    SYNTAX     Integer32 (0..2147483647)\n    MAX-ACCESS read-wr"..., 4096) = 4096
00:05:28 read(3, "     The value for each device must remain constant at\n        least from one re-initialization of the agent to the\n        next re-initialization.\"\n    ::= { hrDeviceEntry 1 }\n\nhrDeviceType OBJECT-TYPE\n    SYNTAX     AutonomousType\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"An indication of the type of device.\n\n        If this value is\n        `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry\n        exists in the hrProcessorTable which corresponds to\n        this device.\n\n        If this value is\n        `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry\n        exists in the hrNetworkTable which corresponds to this\n        device.\n\n        If this value is\n        `hrDevicePrinter { hrDeviceTypes 5 }', then an entry\n        exists in the hrPrinterTable which corresponds to this\n        device.\n\n        If this value is\n        `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an\n        entry exists in the hrDiskStorageTable which\n        correspond"..., 4096) = 4096
00:05:28 read(3, "D object might be\n        named hrProcessorFrwID.3\"\n    INDEX { hrDeviceIndex }\n    ::= { hrProcessorTable 1 }\n\nHrProcessorEntry ::= SEQUENCE {\n        hrProcessorFrwID            ProductID,\n        hrProcessorLoad             Integer32\n    }\n\nhrProcessorFrwID OBJECT-TYPE\n    SYNTAX     ProductID\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The product ID of the firmware associated with the\n        processor.\"\n    ::= { hrProcessorEntry 1 }\n\nhrProcessorLoad OBJECT-TYPE\n    SYNTAX     Integer32 (0..100)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The average, over the last minute, of the percentage\n        of time that this processor was not idle.\n        Implementations may approximate this one minute\n        smoothing period if necessary.\"\n    ::= { hrProcessorEntry 2 }\n\nhrNetworkTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HrNetworkEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"The (conceptu"..., 4096) = 4096
00:05:28 read(3, "\n             noPaper               1\n             lowToner              2\n             noToner               3\n             doorOpen              4\n             jammed                5\n             offline               6\n             serviceRequested      7\n             inputTrayMissing      8\n             outputTrayMissing     9\n             markerSupplyMissing  10\n             outputNearFull       11\n             outputFull           12\n             inputTrayEmpty       13\n             overduePreventMaint  14\n\n        Bits are numbered starting with the most significant\n        bit of the first byte being bit 0, the least\n        significant bit of the first byte being bit 7, the\n        most significant bit of the second byte being bit 8,\n        and so on.  A one bit encodes that the condition was\n        detected, while a zero bit encodes that the condition\n        was not detected.\n\n        This object is useful for alerting an operator to\n        specific warning or error cond"..., 4096) = 4096
00:05:28 read(3, " SYNTAX     SEQUENCE OF HrPartitionEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"The (conceptual) table of partitions for long-term\n        storage devices contained by the host.  In particular,\n        partitions accessed remotely over a network are not\n        included here.\"\n    ::= { hrDevice 7 }\n\nhrPartitionEntry OBJECT-TYPE\n    SYNTAX     HrPartitionEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A (conceptual) entry for one partition.  The\n        hrDeviceIndex in the index represents the entry in the\n        hrDeviceTable that corresponds to the\n        hrPartitionEntry.\n\n        As an example of how objects in this table are named,\n        an instance of the hrPartitionSize object might be\n        named hrPartitionSize.3.1\"\n    INDEX { hrDeviceIndex, hrPartitionIndex }\n    ::= { hrPartitionTable 1 }\n\nHrPartitionEntry ::= SEQUENCE {\n        hrPartitionIndex                Integer32,\n        hrPartitionLab"..., 4096) = 4096
00:05:28 read(3, "FSIndex }\n    ::= { hrFSTable 1 }\n\nHrFSEntry ::= SEQUENCE {\n        hrFSIndex                   Integer32,\n        hrFSMountPoint              InternationalDisplayString,\n        hrFSRemoteMountPoint        InternationalDisplayString,\n        hrFSType                    AutonomousType,\n        hrFSAccess                  INTEGER,\n        hrFSBootable                TruthValue,\n        hrFSStorageIndex            Integer32,\n        hrFSLastFullBackupDate      DateAndTime,\n        hrFSLastPartialBackupDate   DateAndTime\n    }\n\nhrFSIndex OBJECT-TYPE\n    SYNTAX     Integer32 (1..2147483647)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"A unique value for each file system local to this\n        host.  The value for each file system must remain\n        constant at least from one re-initialization of the\n        agent to the next re-initialization.\"\n    ::= { hrFSEntry 1 }\n\nhrFSMountPoint OBJECT-TYPE\n    SYNTAX     InternationalDisplayString (SIZE(0..128))\n    MAX-AC"..., 4096) = 4096
00:05:28 read(3, " have the value corresponding to January 1, year\n        0000, 00:00:00.0, which is encoded as\n        (hex)'00 00 01 01 00 00 00 00'.\"\n    ::= { hrFSEntry 9 }\n\n-- The Host Resources Running Software Group\n--\n-- The hrSWRunTable contains an entry for each distinct piece of\n-- software that is running or loaded into physical or virtual\n-- memory in preparation for running.  This includes the host's\n-- operating system, device drivers, and applications.\n\nhrSWOSIndex OBJECT-TYPE\n    SYNTAX     Integer32 (1..2147483647)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The value of the hrSWRunIndex for the hrSWRunEntry\n        that represents the primary operating system running\n        on this host.  This object is useful for quickly and\n        uniquely identifying that primary operating system.\"\n    ::= { hrSWRun 1 }\n\nhrSWRunTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HrSWRunEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"The ("..., 4096) = 4096
00:05:28 read(3, "of this software.\"\n    ::= { hrSWRunEntry 6 }\n\nhrSWRunStatus OBJECT-TYPE\n    SYNTAX     INTEGER {\n                   running(1),\n                   runnable(2),    -- waiting for resource\n                                   -- (i.e., CPU, memory, IO)\n                   notRunnable(3), -- loaded but waiting for event\n                   invalid(4)      -- not loaded\n               }\n    MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n        \"The status of this running piece of software.\n        Setting this value to invalid(4) shall cause this\n        software to stop running and to be unloaded. Sets to\n        other values are not valid.\"\n    ::= { hrSWRunEntry 7 }\n\n-- The Host Resources Running Software Performance Group\n--\n-- The hrSWRunPerfTable contains an entry corresponding to\n-- each entry in the hrSWRunTable.\n\nhrSWRunPerfTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HrSWRunPerfEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"The (co"..., 4096) = 4096
00:05:28 read(3, "at no data in this table is\n        older than the indicated time.\"\n    ::= { hrSWInstalled 2 }\n\nhrSWInstalledTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HrSWInstalledEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"The (conceptual) table of software installed on this\n        host.\"\n    ::= { hrSWInstalled 3 }\n\nhrSWInstalledEntry OBJECT-TYPE\n    SYNTAX     HrSWInstalledEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A (conceptual) entry for a piece of software\n        installed on this host.\n\n        As an example of how objects in this table are named,\n        an instance of the hrSWInstalledName object might be\n        named hrSWInstalledName.96\"\n    INDEX { hrSWInstalledIndex }\n    ::= { hrSWInstalledTable 1 }\n\nHrSWInstalledEntry ::= SEQUENCE {\n        hrSWInstalledIndex       Integer32,\n        hrSWInstalledName        InternationalDisplayString,\n        hrSWInstalledID          ProductID,\n        hrSWInstalled"..., 4096) = 4096
00:05:28 read(3, " required.\"\n\n      GROUP hrSWRunGroup\n          DESCRIPTION\n              \"The Running Software Group. Implementation\n              of this group is mandatory only when the\n              hrSWRunPerfGroup is implemented.\"\n\n      OBJECT hrSWRunStatus\n          MIN-ACCESS read-only\n          DESCRIPTION\n              \"Write access is not required.\"\n\n      GROUP hrSWRunPerfGroup\n          DESCRIPTION\n              \"The Running Software Performance Group.\n              Implementation of this group is at the discretion\n              of the implementor.\"\n\n      GROUP hrSWInstalledGroup\n          DESCRIPTION\n              \"The Installed Software Group.\n              Implementation of this group is at the discretion\n              of the implementor.\"\n    ::= { hrMIBCompliances 1 }\n\n    hrSystemGroup OBJECT-GROUP\n        OBJECTS {\n            hrSystemUptime, hrSystemDate,\n            hrSystemInitialLoadDevice,\n            hrSystemInitialLoadParameters,\n            hrSystemNumUsers, hrSystemProce"..., 4096) = 3392
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/HOST-RESOURCES-TYPES.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267887, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=10583, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "HOST-RESOURCES-TYPES DEFINITIONS ::= BEGIN\n\nIMPORTS\n  MODULE-IDENTITY, OBJECT-IDENTITY        FROM SNMPv2-SMI\n  hrMIBAdminInfo, hrStorage, hrDevice     FROM HOST-RESOURCES-MIB;\n\nhostResourcesTypesModule MODULE-IDENTITY\n  LAST-UPDATED \"200003060000Z\"    -- 6 March, 2000\n  ORGANIZATION \"IETF Host Resources MIB Working Group\"\n  CONTACT-INFO\n      \"Steve Waldbusser\n      Postal: Lucent Technologies, Inc.\n              1213 Innsbruck Dr.\n              Sunnyvale, CA 94089\n              USA\n      Phone: 650-318-1251\n      Fax:   650-318-1633\n      Email: waldbusser@ins.com\n\n      In addition, the Host Resources MIB mailing list is dedicated\n      to discussion of this MIB. To join the mailing list, send a\n      request message to hostmib-request@andrew.cmu.edu. The mailing\n      list address is hostmib@andrew.cmu.edu.\"\n  DESCRIPTION\n      \"This MIB module registers type definitions for\n      storage types, device types, and file system types.\n\n      After the initial revision, this module wil"..., 4096) = 4096
00:05:28 read(3, "rent\n    DESCRIPTION\n        \"The device type identifier used for a printer.\"\n    ::= { hrDeviceTypes 5 }\n\nhrDeviceDiskStorage OBJECT-IDENTITY\n    STATUS current\n    DESCRIPTION\n        \"The device type identifier used for a disk drive.\"\n    ::= { hrDeviceTypes 6 }\n\nhrDeviceVideo OBJECT-IDENTITY\n    STATUS current\n    DESCRIPTION\n        \"The device type identifier used for a video device.\"\n    ::= { hrDeviceTypes 10 }\n\nhrDeviceAudio OBJECT-IDENTITY\n    STATUS current\n    DESCRIPTION\n        \"The device type identifier used for an audio device.\"\n    ::= { hrDeviceTypes 11 }\n\nhrDeviceCoprocessor OBJECT-IDENTITY\n    STATUS current\n    DESCRIPTION\n        \"The device type identifier used for a co-processor.\"\n    ::= { hrDeviceTypes 12 }\n\nhrDeviceKeyboard OBJECT-IDENTITY\n    STATUS current\n    DESCRIPTION\n        \"The device type identifier used for a keyboard device.\"\n    ::= { hrDeviceTypes 13 }\n\nhrDeviceModem OBJECT-IDENTITY\n    STATUS current\n    DESCRIPTION\n        \"The device type id"..., 4096) = 4096
00:05:28 read(3, " \"The file system type identifier used for the\n        VNode File System.\"\n    ::= { hrFSTypes 10 }\n\nhrFSJournaled OBJECT-IDENTITY\n    STATUS  current\n    DESCRIPTION\n        \"The file system type identifier used for the\n        Journaled File System.\"\n    ::= { hrFSTypes 11 }\n\nhrFSiso9660 OBJECT-IDENTITY\n    STATUS  current\n    DESCRIPTION\n        \"The file system type identifier used for the\n        ISO 9660 File System for CD's.\"\n    ::= { hrFSTypes 12 }\n\nhrFSRockRidge OBJECT-IDENTITY\n    STATUS  current\n    DESCRIPTION\n        \"The file system type identifier used for the\n        RockRidge File System for CD's.\"\n    ::= { hrFSTypes 13 }\n\nhrFSNFS OBJECT-IDENTITY\n    STATUS  current\n    DESCRIPTION\n        \"The file system type identifier used for the\n        NFS File System.\"\n    ::= { hrFSTypes 14 }\n\nhrFSNetware OBJECT-IDENTITY\n    STATUS  current\n    DESCRIPTION\n        \"The file system type identifier used for the\n        Netware File System.\"\n    ::= { hrFSTypes 15 }\n\nhrFSAFS OB"..., 4096) = 2391
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/UCD-DISKIO-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267987, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4402, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "UCD-DISKIO-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Derived from the original VEST-INTERNETT-MIB. Open issues:\n--\n-- (a) where to register this MIB?\n-- (b) use not-accessible for diskIOIndex?\n--\n\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32, Counter32, Counter64\n        FROM SNMPv2-SMI\n    DisplayString\n        FROM SNMPv2-TC\n    ucdExperimental\n        FROM UCD-SNMP-MIB;\n\nucdDiskIOMIB MODULE-IDENTITY\n    LAST-UPDATED \"200001260000Z\"\n    ORGANIZATION \"University of California, Davis\"\n    CONTACT-INFO    \n\t\"This mib is no longer being maintained by the University of\n\t California and is now in life-support-mode and being\n\t maintained by the net-snmp project.  The best place to write\n\t for public questions about the net-snmp-coders mailing list\n\t at net-snmp-coders@lists.sourceforge.net.\n\n         postal:   Wes Hardaker\n                   P.O. Box 382\n                   Davis CA  95617\n\n         email:    net-snmp-coders@lists.sourceforge.net\n        \"\n    DESCRIPTION\n        \"This MIB mo"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/UCD-SNMP-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267993, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=96, st_size=46150, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "UCD-SNMP-MIB DEFINITIONS ::= BEGIN\n\n-- Design notes:\n--\n-- The design of this mib may seem unusual in parts, as it was\n-- designed for ease of numerical management routines.\n-- \n-- In that light, most sub-sections of this mib have four common\n-- numerical oid consistencies:\n--\n-- 2021.ID.1   : an integer index value.  In scalers, this is always\n--               of value 1.  In tables it is a row index.\n-- 2021.ID.2   : a name of the script, process, etc. that this row represents.\n-- 2021.ID.100 : An error flag indicating if an error is present on\n--               that row (a threshold value was crossed, etc).\n-- 2021.ID.101 : An error string describing why the error flag is non-0.\n--\n-- These conventions enable managers to easy examine portions of the\n-- mib by setting the ID to the sub-section they are interested in\n-- monitoring, and then scanning the .100 value to check for an\n-- error(s), and get a more specific error message from .101 for the\n-- named check found in .2.\n--\n-- Row "..., 4096) = 4096
00:05:28 read(4, "gned in the ucdExperimental branch:\n--   ucdIpFwAccMIB    OBJECT IDENTIFIER ::= { ucdExperimental  1 } - UCD-IPFWACC-MIB\n--   ucdIpFilter      OBJECT IDENTIFIER ::= { ucdExperimental  2 } - UCD-IPFILTER-MIB\n--   wavelan          OBJECT IDENTIFIER ::= { ucdExperimental  3 } - WL-MIB\n--   ucdDlmodMIB      OBJECT IDENTIFIER ::= { ucdExperimental 14 } - UCD-DLMOD-MIB\n--   ucdDiskIOMIB     OBJECT IDENTIFIER ::= { ucdExperimental 15 } - UCD-DISKIO-MIB\n--   lmSensors        OBJECT IDENTIFIER ::= { ucdExperimental 16 } - LM-SENSORS-MIB\n\n\n-- These are the returned values of the agent type.\n-- returned to:  .iso.org.dod.internet.mgmt.mib-2.system.sysObjectID.0 \n\nucdSnmpAgent      OBJECT IDENTIFIER ::= { ucdavis 250 }\nhpux9             OBJECT IDENTIFIER ::= { ucdSnmpAgent 1 }\nsunos4            OBJECT IDENTIFIER ::= { ucdSnmpAgent 2 }\nsolaris           OBJECT IDENTIFIER ::= { ucdSnmpAgent 3 }\nosf               OBJECT IDENTIFIER ::= { ucdSnmpAgent 4 }\nultrix            OBJECT IDENTIFIER ::= { ucdSn"..., 4096) = 4096
00:05:28 read(4, "\tDisplayString\n}\n\nprIndex OBJECT-TYPE\n    SYNTAX\tInteger32 (0..65535)\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Reference Index for each observed process.\"\n    ::= { prEntry 1 }\n\nprNames OBJECT-TYPE\n    SYNTAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The process name we're counting/checking on.\"\n    ::= { prEntry 2 }\n\nprMin OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The minimum number of processes that should be\n\t running.  An error flag is generated if the number of\n\t running processes is < the minimum.\"\n    ::= { prEntry 3 }\n\nprMax OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The maximum number of processes that should be\n\t running.  An error flag is generated if the number of\n\t running processes is > the maximum.\"\n    ::= { prEntry 4 }\n\nprCount OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESC"..., 4096) = 4096
00:05:28 read(4, "TAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The command that gets run when the extErrFix column is \n\t set to 1.\"\n    ::= { extEntry 103 }\n\n--\n-- Memory usage/watch reporting.\n-- Not supported on all systems!\n-- See agent/mibgroup/ucd_snmp.h to see if its loaded for your architecture.\n--\nmemory OBJECT IDENTIFIER ::= { ucdavis 4 }\n\nmemIndex OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION  \n\t\"Bogus Index.  This should always return the integer 0.\"\n    ::= { memory 1 } \n\nmemErrorName OBJECT-TYPE\n    SYNTAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION  \n\t\"Bogus Name. This should always return the string 'swap'.\"\n    ::= { memory 2 } \n\nmemTotalSwap OBJECT-TYPE\n    SYNTAX\tInteger32\n    UNITS       \"kB\"\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The total amount of swap space configured for this host.\"\n    ::= { memory 3 }\n\nmemAvailSwap OBJECT-TYPE\n    SYNTAX\tInteger"..., 4096) = 4096
00:05:28 read(4, "     and swap space or virtual memory.\"\n    ::= { memory 11 }\n\nmemMinimumSwap OBJECT-TYPE\n    SYNTAX\tInteger32\n    UNITS       \"kB\"\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The minimum amount of swap space expected to be kept\n         free or available during normal operation of this host.\n\n         If this value (as reported by 'memAvailSwap(4)') falls\n         below the specified level, then 'memSwapError(100)' will\n         be set to 1 and an error message made available via\n         'memSwapErrorMsg(101)'.\"\n    ::= { memory 12 }\n\nmemShared OBJECT-TYPE\n    SYNTAX\tInteger32\n    UNITS       \"kB\"\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n        \"The total amount of real or virtual memory currently\n         allocated for use as shared memory.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not explicitly identify\n         memory as specifically reserved for this purpose.\"\n    ::= { memory "..., 4096) = 4096
00:05:28 read(4, "dskUsed\t\tInteger32,\n    dskPercent\t\tInteger32,\n    dskPercentNode\tInteger32,\n    dskErrorFlag\tUCDErrorFlag,\n    dskErrorMsg\t\tDisplayString,\n    dskTotalLow\t\tUnsigned32,\n    dskTotalHigh\tUnsigned32,\n    dskAvailLow\t\tUnsigned32,\n    dskAvailHigh\tUnsigned32,\n    dskUsedLow\t\tUnsigned32,\n    dskUsedHigh\t\tUnsigned32\n}\n\ndskIndex OBJECT-TYPE\n    SYNTAX\tInteger32 (0..65535)\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Integer reference number (row number) for the disk mib.\"\n    ::= { dskEntry 1 }\n\t\ndskPath OBJECT-TYPE\n    SYNTAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION  \n\t\"Path where the disk is mounted.\"\n    ::= { dskEntry 2 } \n\ndskDevice OBJECT-TYPE\n    SYNTAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION  \n\t\"Path of the device for the partition\"\n    ::= { dskEntry 3 } \n\ndskMinimum OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION  \n\t\"Minimum space required on the disk (in "..., 4096) = 4096
00:05:28 read(4, "skEntry 101 } \n     \nlaTable OBJECT-TYPE\n    SYNTAX\tSEQUENCE OF LaEntry\n    MAX-ACCESS\tnot-accessible\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Load average information.\"\n    ::= { ucdavis 10 }\n\nlaEntry OBJECT-TYPE\n    SYNTAX\tLaEntry\n    MAX-ACCESS\tnot-accessible\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"An entry containing a load average and its values.\"\n    INDEX\t{ laIndex }\n    ::= { laTable  1 }\n\nLaEntry ::= SEQUENCE {\n    laIndex\t\tInteger32,\n    laNames\t\tDisplayString,\n    laLoad\t\tDisplayString,\n    laConfig\t\tDisplayString,\n    laLoadInt\t\tInteger32,\n    laLoadFloat\t\tFloat,\n    laErrorFlag\t\tUCDErrorFlag,\n    laErrMessage\tDisplayString\n}\n\nlaIndex OBJECT-TYPE\n    SYNTAX\tInteger32 (0..3)\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"reference index/row number for each observed loadave.\"\n    ::= { laEntry 1 }\n\nlaNames OBJECT-TYPE\n    SYNTAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The list of loadave names we're watching.\"\n    ::= { laEntry 2 }\n"..., 4096) = 4096
00:05:28 read(4, "t.\"\n    ::= { version 12 } \n\nversionSavePersistentData OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-write\n    STATUS\tcurrent\n    DESCRIPTION  \n\t\"Set to 1 to force the agent to save it's persistent data immediately.\"\n    ::= { version 13 } \n\nversionDoDebugging OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-write\n    STATUS\tcurrent\n    DESCRIPTION  \n\t\"Set to 1 to turn debugging statements on in the agent or 0\n\t to turn it off.\"\n    ::= { version 20 } \n\n\nsnmperrs OBJECT IDENTIFIER ::= { ucdavis 101 }\n\nsnmperrIndex OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Bogus Index for snmperrs (always 0).\"\n    ::= { snmperrs 1 }\n\nsnmperrNames OBJECT-TYPE\n    SYNTAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"snmp\"\n    ::= { snmperrs 2 }\n\nsnmperrErrorFlag OBJECT-TYPE\n    SYNTAX\tUCDErrorFlag\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"A Error flag to indicate trouble with the agent.  It\n\t "..., 4096) = 4096
00:05:28 read(4, "BJECT-TYPE\n    SYNTAX\tInteger32\n    UNITS       \"interrupts/s\"\n    MAX-ACCESS\tread-only\n    STATUS\tdeprecated\n    DESCRIPTION\n\t\"The average rate of interrupts processed (including\n         the clock) calculated over the last minute.\n       \n\t This object has been deprecated in favour of\n         'ssRawInterrupts(59)', which can be used to calculate\n         the same metric, but over any desired time period.\"\n    ::= { systemStats 7 }\n\nssSysContext OBJECT-TYPE\n    SYNTAX\tInteger32\n    UNITS       \"switches/s\"\n    MAX-ACCESS\tread-only\n    STATUS\tdeprecated\n    DESCRIPTION\n\t\"The average rate of context switches,\n         calculated over the last minute.\n       \n\t This object has been deprecated in favour of\n         'ssRawContext(60)', which can be used to calculate\n         the same metric, but over any desired time period.\"\n    ::= { systemStats 8 }\n\nssCpuUser OBJECT-TYPE\n    SYNTAX\tInteger32\n    MAX-ACCESS\tread-only\n    STATUS\tdeprecated\n    DESCRIPTION\n\t\"The percentage of CPU time spe"..., 4096) = 4096
00:05:28 read(4, "ulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).\"\n    ::= { systemStats 53 }\n\nssCpuRawWait OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The number of 'ticks' (typically 1/100s) spent\n         waiting for IO.\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.  This time may also be\n         included within the 'ssCpuRawSystem(52)' counter.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).\"\n    ::= { systemStats 54 }\n\nssCpuRawKernel OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The number of 'ticks' (typically 1/100s) spent\n         processing kernel-level code.\n\n         This object will not be "..., 4096) = 4096
00:05:28 read(4, "g condition.\"\n--     ::= { systemStats 101 } \n\n\nucdTraps OBJECT IDENTIFIER ::= { ucdavis 251 }\n\nucdStart NOTIFICATION-TYPE\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"This trap could in principle be sent when the agent start\"\n    ::= { ucdTraps 1 }\n    \nucdShutdown\tNOTIFICATION-TYPE\n    STATUS current\n    DESCRIPTION\n\t\"This trap is sent when the agent terminates\"\n    ::= { ucdTraps 2 }\n\n--\n-- File Table:  monitor a list of files to check for a maximum size.\n-- \n\nfileTable OBJECT-TYPE\n    SYNTAX\tSEQUENCE OF FileEntry\n    MAX-ACCESS\tnot-accessible\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Table of monitored files.\"\n    ::= { ucdavis 15 }\n    \nfileEntry OBJECT-TYPE\n    SYNTAX\tFileEntry\n    MAX-ACCESS\tnot-accessible\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Entry of file\"\n    INDEX\t{ fileIndex }\n    ::= { fileTable 1 }\n\nFileEntry ::= SEQUENCE {\n    fileIndex\t\tInteger32,\n    fileName\t\tDisplayString,\n    fileSize\t\tInteger32,\n    fileMax\t\tInteger32,\n    fileErrorFlag\tUCDErrorFlag,\n    fileErrorMsg\tDisplayStri"..., 4096) = 4096
00:05:28 read(4, " This counter will\n\t\tbe reset with each logfile rotation.\"\n\t::= { logMatchEntry 7 }\n\nlogMatchCurrentCount OBJECT-TYPE\n\tSYNTAX Integer32\n\tMAX-ACCESS read-only\n\tSTATUS current\n\tDESCRIPTION\n\t\t\"Description.\"\n\t::= { logMatchEntry 8 }\n\nlogMatchCounter OBJECT-TYPE\n\tSYNTAX Counter32\n\tMAX-ACCESS read-only\n\tSTATUS current\n\tDESCRIPTION\n\t\t\"Regex match counter. This counter will\n\t\tbe reset with each read\"\n\t::= { logMatchEntry 9 }\n\nlogMatchCount OBJECT-TYPE\n\tSYNTAX Integer32\n\tMAX-ACCESS read-only\n\tSTATUS current\n\tDESCRIPTION\n\t\t\"Description.\"\n\t::= { logMatchEntry 10 }\n\nlogMatchCycle OBJECT-TYPE\n\tSYNTAX Integer32\n\tMAX-ACCESS read-only\n\tSTATUS current\n\tDESCRIPTION\n\t\t\"time between updates (if not queried) in seconds\"\n\t::= { logMatchEntry 11 }\n\nlogMatchErrorFlag OBJECT-TYPE\n\tSYNTAX UCDErrorFlag\n\tMAX-ACCESS read-only\n\tSTATUS current\n\tDESCRIPTION\n\t\t\"errorflag: is this line configured correctly?\"\n\t::= { logMatchEntry 100 }\n\nlogMatchRegExCompilation OBJECT-TYPE\n\tSYNTAX DisplayString\n\tMAX-ACCESS read-only\n\tST"..., 4096) = 1094
00:05:28 brk(0x1945000)                 = 0x1945000
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "     \"The number of bytes read from this device since boot.\"\n    ::= { diskIOEntry 12 }\n\ndiskIONWrittenX OBJECT-TYPE\n    SYNTAX      Counter64\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The number of bytes written to this device since boot.\"\n    ::= { diskIOEntry 13 }\n\nEND\n", 4096) = 306
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/TCP-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267981, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=28564, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "TCP-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32, Unsigned32,\n    Gauge32, Counter32, Counter64, IpAddress, mib-2\n                                       FROM SNMPv2-SMI\n    MODULE-COMPLIANCE, OBJECT-GROUP    FROM SNMPv2-CONF\n    InetAddress, InetAddressType,\n    InetPortNumber                     FROM INET-ADDRESS-MIB;\n\ntcpMIB MODULE-IDENTITY\n    LAST-UPDATED \"200502180000Z\"  -- 18 February 2005\n    ORGANIZATION\n           \"IETF IPv6 MIB Revision Team\n            http://www.ietf.org/html.charters/ipv6-charter.html\"\n    CONTACT-INFO\n           \"Rajiv Raghunarayan (editor)\n\n            Cisco Systems Inc.\n            170 West Tasman Drive\n            San Jose, CA 95134\n\n            Phone: +1 408 853 9612\n            Email: <raraghun@cisco.com>\n\n            Send comments to <ipv6@ietf.org>\"\n    DESCRIPTION\n           \"The MIB module for managing TCP implementations.\n\n            Copyright (C) The Internet Society (2005). This version\n            of this MI"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/INET-ADDRESS-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267901, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=16782, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "INET-ADDRESS-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, mib-2, Unsigned32 FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION                 FROM SNMPv2-TC;\n\ninetAddressMIB MODULE-IDENTITY\n    LAST-UPDATED \"200502040000Z\"\n    ORGANIZATION\n        \"IETF Operations and Management Area\"\n    CONTACT-INFO\n        \"Juergen Schoenwaelder (Editor)\n         International University Bremen\n         P.O. Box 750 561\n         28725 Bremen, Germany\n\n         Phone: +49 421 200-3587\n         EMail: j.schoenwaelder@iu-bremen.de\n\n         Send comments to <ietfmibs@ops.ietf.org>.\"\n    DESCRIPTION\n        \"This MIB module defines textual conventions for\n         representing Internet addresses.  An Internet\n         address can be an IPv4 address, an IPv6 address,\n         or a DNS domain name.  This module also defines\n         textual conventions for Internet port numbers,\n         autonomous system numbers, and the length of an\n         Internet address prefix.\n\n         Copyright (C) The Internet "..., 4096) = 4096
00:05:28 read(4, "),\n                     ipv6z(4),\n                     dns(16)\n                 }\n\nInetAddress ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Denotes a generic Internet address.\n\n         An InetAddress value is always interpreted within the context\n         of an InetAddressType value.  Every usage of the InetAddress\n         textual convention is required to specify the InetAddressType\n         object that provides the context.  It is suggested that the\n         InetAddressType object be logically registered before the\n         object(s) that use the InetAddress textual convention, if\n         they appear in the same logical row.\n\n         The value of an InetAddress object must always be\n         consistent with the value of the associated InetAddressType\n         object.  Attempts to set an InetAddress object to a value\n         inconsistent with the associated InetAddressType\n         must fail with an inconsistentValue error.\n\n         When this textual c"..., 4096) = 4096
00:05:28 read(4, "         with its zone index:\n\n           Octets   Contents         Encoding\n            1-16    IPv6 address     network-byte order\n           17-20    zone index       network-byte order\n\n         The corresponding InetAddressType value is ipv6z(4).\n\n         The zone index (bytes 17-20) is used to disambiguate\n         identical address values on nodes that have interfaces\n         attached to different zones of the same scope.  The zone index\n         may contain the special value 0, which refers to the default\n         zone for each scope.\n\n         This textual convention SHOULD NOT be used directly in object\n         definitions, as it restricts addresses to a specific format.\n         However, if it is used, it MAY be used either on its own or in\n         conjunction with InetAddressType, as a pair.\"\n    SYNTAX       OCTET STRING (SIZE (20))\n\nInetAddressDNS ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"255a\"\n    STATUS       current\n    DESCRIPTION\n        \"Represents a DNS domain n"..., 4096) = 4096
00:05:28 read(4, "must be defined as\n         part of the description of any object that uses this\n         syntax.  Examples of the usage of zero might include\n         situations where a port number is unknown, or when the\n         value zero is used as a wildcard in a filter.\"\n    REFERENCE   \"STD 6 (RFC 768), STD 7 (RFC 793) and RFC 2960\"\n    SYNTAX       Unsigned32 (0..65535)\n\nInetAutonomousSystemNumber ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS       current\n    DESCRIPTION\n        \"Represents an autonomous system number that identifies an\n         Autonomous System (AS).  An AS is a set of routers under a\n         single technical administration, using an interior gateway\n         protocol and common metrics to route packets within the AS,\n         and using an exterior gateway protocol to route packets to\n         other ASes'.  IANA maintains the AS number space and has\n         delegated large parts to the regional registries.\n\n         Autonomous system numbers are currently limite"..., 4096) = 4096
00:05:28 read(4, "0.\n\n         Note that this textual convention SHOULD NOT be used to\n         distinguish different address types associated with IP\n         protocols.  The InetAddressType has been designed for this\n         purpose.\"\n    REFERENCE   \"RFC 791, RFC 2460\"\n    SYNTAX       INTEGER {\n                     unknown(0),\n                     ipv4(1),\n                     ipv6(2)\n                 }\nEND\n", 4096) = 398
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "ns OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of times TCP connections have made a direct\n            transition to the SYN-RCVD state from the LISTEN state.\n\n            Discontinuities in the value of this counter are\n            indicated via discontinuities in the value of sysUpTime.\"\n    ::= { tcp 6 }\n\ntcpAttemptFails OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of times that TCP connections have made a direct\n            transition to the CLOSED state from either the SYN-SENT\n            state or the SYN-RCVD state, plus the number of times that\n            TCP connections have made a direct transition to the\n            LISTEN state from the SYN-RCVD state.\n\n            Discontinuities in the value of this counter are\n            indicated via discontinuities in the value of sysUpTime.\"\n    ::= { tcp 7 }\n\ntcpEstabResets O"..., 4096) = 4096
00:05:28 read(3, "         on currently established connections.  This object is\n            the 64-bit equivalent of tcpInSegs.\n\n            Discontinuities in the value of this counter are\n            indicated via discontinuities in the value of sysUpTime.\"\n    ::= { tcp 17 }\n\ntcpHCOutSegs OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of segments sent, including those on\n            current connections but excluding those containing only\n            retransmitted octets.  This object is the 64-bit\n            equivalent of tcpOutSegs.\n\n            Discontinuities in the value of this counter are\n            indicated via discontinuities in the value of sysUpTime.\"\n    ::= { tcp 18 }\n\n-- The TCP Connection table\n\ntcpConnectionTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF TcpConnectionEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"A table containing information about existing TCP\n "..., 4096) = 4096
00:05:28 read(3, "mplementors should be\n            careful not to create entries that would result in OIDs\n            with more than 128 subidentifiers; otherwise the information\n            cannot be accessed by using SNMPv1, SNMPv2c, or SNMPv3.\"\n    ::= { tcpConnectionEntry 5 }\n\ntcpConnectionRemPort OBJECT-TYPE\n    SYNTAX     InetPortNumber\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The remote port number for this TCP connection.\"\n    ::= { tcpConnectionEntry 6 }\n\ntcpConnectionState OBJECT-TYPE\n    SYNTAX     INTEGER {\n                    closed(1),\n                    listen(2),\n                    synSent(3),\n                    synReceived(4),\n                    established(5),\n                    finWait1(6),\n                    finWait2(7),\n                    closeWait(8),\n                    lastAck(9),\n                    closing(10),\n                    timeWait(11),\n                    deleteTCB(12)\n                }\n    MAX-ACCESS read-write\n    STAT"..., 4096) = 4096
00:05:28 read(3, ".0.0.2 would\n            use InetAddressType ipv4(1)).\"\n    ::= { tcp 20 }\n\ntcpListenerEntry OBJECT-TYPE\n    SYNTAX     TcpListenerEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"A conceptual row of the tcpListenerTable containing\n            information about a particular TCP listener.\"\n    INDEX   { tcpListenerLocalAddressType,\n              tcpListenerLocalAddress,\n              tcpListenerLocalPort }\n    ::= { tcpListenerTable 1 }\n\nTcpListenerEntry ::= SEQUENCE {\n        tcpListenerLocalAddressType       InetAddressType,\n        tcpListenerLocalAddress           InetAddress,\n        tcpListenerLocalPort              InetPortNumber,\n        tcpListenerProcess                Unsigned32\n    }\n\ntcpListenerLocalAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The address type of tcpListenerLocalAddress.  The value\n            should be unknown (0) if connection i"..., 4096) = 4096
00:05:28 read(3, "transient in that it ceases to exist when\n            (or soon after) the connection makes the transition to the\n            CLOSED state.\"\n    INDEX   { tcpConnLocalAddress,\n              tcpConnLocalPort,\n              tcpConnRemAddress,\n              tcpConnRemPort }\n    ::= { tcpConnTable 1 }\n\nTcpConnEntry ::= SEQUENCE {\n        tcpConnState         INTEGER,\n        tcpConnLocalAddress  IpAddress,\n        tcpConnLocalPort     Integer32,\n        tcpConnRemAddress    IpAddress,\n        tcpConnRemPort       Integer32\n\n    }\n\ntcpConnState OBJECT-TYPE\n    SYNTAX     INTEGER {\n                    closed(1),\n                    listen(2),\n                    synSent(3),\n                    synReceived(4),\n                    established(5),\n                    finWait1(6),\n                    finWait2(7),\n                    closeWait(8),\n                    lastAck(9),\n                    closing(10),\n                    timeWait(11),\n                    deleteTCB(12)\n                }\n "..., 4096) = 4096
00:05:28 read(3, " and IPv6 address types.\n            --\n            -- OBJECT      tcpListenerLocalAddressType\n            -- SYNTAX      InetAddressType { unknown(0), ipv4(1),\n            --                               ipv6(2) }\n            -- DESCRIPTION\n            --     This MIB requires support for only global IPv4\n            --     and IPv6 address types.  The type unknown also\n            --     needs to be supported to identify a special\n            --     case in the listener table: a listen using\n            --     both IPv4 and IPv6 addresses on the device.\n            --\n           \"\n    MODULE  -- this module\n        MANDATORY-GROUPS { tcpBaseGroup, tcpConnectionGroup,\n                           tcpListenerGroup }\n        GROUP       tcpHCGroup\n        DESCRIPTION\n           \"This group is mandatory for systems that are capable\n            of receiving or transmitting more than 1 million TCP\n            segments per second.  1 million segments per second will\n            cause a Count"..., 4096) = 3988
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/UDP-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267995, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=20882, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "UDP-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32, Counter32, Counter64,\n    Unsigned32, IpAddress, mib-2       FROM SNMPv2-SMI\n    MODULE-COMPLIANCE, OBJECT-GROUP    FROM SNMPv2-CONF\n    InetAddress, InetAddressType,\n    InetPortNumber                     FROM INET-ADDRESS-MIB;\n\nudpMIB MODULE-IDENTITY\n    LAST-UPDATED \"200505200000Z\"  -- May 20, 2005\n    ORGANIZATION\n           \"IETF IPv6 Working Group\n            http://www.ietf.org/html.charters/ipv6-charter.html\"\n    CONTACT-INFO\n           \"Bill Fenner (editor)\n\n            AT&T Labs -- Research\n            75 Willow Rd.\n            Menlo Park, CA 94025\n\n            Phone: +1 650 330-7893\n            Email: <fenner@research.att.com>\n\n            John Flick (editor)\n\n            Hewlett-Packard Company\n            8000 Foothills Blvd. M/S 5557\n            Roseville, CA 95747\n\n            Phone: +1 916 785 4018\n            Email: <john.flick@hp.com>\n\n            Send comments to <ipv6@ietf.org>\"\n    "..., 4096) = 4096
00:05:28 read(3, "nd at\n            other times as indicated by discontinuities in the\n            value of sysUpTime.\"\n    ::= { udp 3 }\n\nudpOutDatagrams OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of UDP datagrams sent from this\n            entity.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by discontinuities in the\n            value of sysUpTime.\"\n    ::= { udp 4 }\n\nudpHCInDatagrams OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of UDP datagrams delivered to UDP\n            users, for devices that can receive more than 1\n            million UDP datagrams per second.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n           "..., 4096) = 4096
00:05:28 read(3, "ecifying a default remote\n            address and port, the udpEndpointRemote* values should\n            be used to reflect this.\"\n    ::= { udp 7 }\n\nudpEndpointEntry OBJECT-TYPE\n    SYNTAX     UdpEndpointEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"Information about a particular current UDP endpoint.\n\n            Implementers need to be aware that if the total number\n            of elements (octets or sub-identifiers) in\n            udpEndpointLocalAddress and udpEndpointRemoteAddress\n            exceeds 111, then OIDs of column instances in this table\n            will have more than 128 sub-identifiers and cannot be\n            accessed using SNMPv1, SNMPv2c, or SNMPv3.\"\n    INDEX   { udpEndpointLocalAddressType,\n              udpEndpointLocalAddress,\n              udpEndpointLocalPort,\n              udpEndpointRemoteAddressType,\n              udpEndpointRemoteAddress,\n              udpEndpointRemotePort,\n              udpEndpointInstance }\n "..., 4096) = 4096
00:05:28 read(3, " Only\n            IPv4, IPv4z, IPv6, and IPv6z addresses are expected, or\n            unknown(0) if datagrams for all remote IP addresses are\n            accepted.  Also, note that some combinations of\n\n            udpEndpointLocalAdressType and\n            udpEndpointRemoteAddressType are not supported.  In\n            particular, if the value of this object is not\n            unknown(0), it is expected to always refer to the\n            same IP version as udpEndpointLocalAddressType.\"\n    ::= { udpEndpointEntry 4 }\n\nudpEndpointRemoteAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The remote IP address for this UDP endpoint.  If\n            datagrams from any remote system are to be accepted,\n            this value is ''h (a zero-length octet-string).\n            Otherwise, it has the type described by\n            udpEndpointRemoteAddressType and is the address of the\n            remote system from which d"..., 4096) = 4096
00:05:28 read(3, "            case of a UDP listener that is willing to accept\n            datagrams for any IP interface associated with the\n            node, the value 0.0.0.0 is used.\"\n    ::= { udpEntry 1 }\n\nudpLocalPort OBJECT-TYPE\n    SYNTAX     Integer32 (0..65535)\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The local port number for this UDP listener.\"\n    ::= { udpEntry 2 }\n\n-- conformance information\n\nudpMIBConformance OBJECT IDENTIFIER ::= { udpMIB 2 }\nudpMIBCompliances OBJECT IDENTIFIER ::= { udpMIBConformance 1 }\nudpMIBGroups      OBJECT IDENTIFIER ::= { udpMIBConformance 2 }\n\n-- compliance statements\n\nudpMIBCompliance2 MODULE-COMPLIANCE\n    STATUS     current\n    DESCRIPTION\n           \"The compliance statement for systems that implement\n            UDP.\n\n            There are a number of INDEX objects that cannot be\n            represented in the form of OBJECT clauses in SMIv2, but\n            for which we have the following compliance\n            requi"..., 4096) = 4096
00:05:28 read(3, " DESCRIPTION\n           \"The group of objects providing for counters of high\n            speed UDP implementations.\"\n    ::= { udpMIBGroups 3 }\n\nudpEndpointGroup OBJECT-GROUP\n    OBJECTS    { udpEndpointProcess }\n    STATUS     current\n    DESCRIPTION\n           \"The group of objects providing for the IP version\n            independent management of UDP 'endpoints'.\"\n    ::= { udpMIBGroups 4 }\n\nEND\n", 4096) = 402
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/MTA-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267919, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=88, st_size=42375, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "MTA-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n   OBJECT-TYPE, Counter32, Gauge32, MODULE-IDENTITY, mib-2\n     FROM SNMPv2-SMI\n   TimeInterval\n     FROM SNMPv2-TC\n   MODULE-COMPLIANCE, OBJECT-GROUP\n     FROM SNMPv2-CONF\n   SnmpAdminString\n       FROM SNMP-FRAMEWORK-MIB\n   applIndex, URLString\n     FROM NETWORK-SERVICES-MIB;\n\nmta MODULE-IDENTITY\n   LAST-UPDATED \"200003030000Z\"\n   ORGANIZATION \"IETF Mail and Directory Management Working Group\"\n   CONTACT-INFO\n     \"        Ned Freed\n\n      Postal: Innosoft International, Inc.\n              1050 Lakes Drive\n              West Covina, CA 91790\n              US\n\n      Tel: +1 626 919 3600\n      Fax: +1 626 919 3614\n\n      E-Mail: ned.freed@innosoft.com\"\n   DESCRIPTION\n     \"The MIB module describing Message Transfer Agents (MTAs)\"\n   REVISION \"200003030000Z\"\n   DESCRIPTION\n     \"This revision, published in RFC 2789, changes a number of\n      DisplayStrings to SnmpAdminStrings. Note that this change\n\n      is not strictly supported by SMIv2.  Howeve"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/SNMP-FRAMEWORK-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267953, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=22342, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "SNMP-FRAMEWORK-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    OBJECT-IDENTITY,\n    snmpModules                           FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION                    FROM SNMPv2-TC\n    MODULE-COMPLIANCE, OBJECT-GROUP       FROM SNMPv2-CONF;\n\nsnmpFrameworkMIB MODULE-IDENTITY\n    LAST-UPDATED \"200210140000Z\"\n    ORGANIZATION \"SNMPv3 Working Group\"\n    CONTACT-INFO \"WG-EMail:   snmpv3@lists.tislabs.com\n                  Subscribe:  snmpv3-request@lists.tislabs.com\n\n                  Co-Chair:   Russ Mundy\n                              Network Associates Laboratories\n                  postal:     15204 Omega Drive, Suite 300\n                              Rockville, MD 20850-4601\n                              USA\n                  EMail:      mundy@tislabs.com\n                  phone:      +1 301-947-7107\n\n                  Co-Chair &\n                  Co-editor:  David Harrington\n                              Enterasys Networks\n                  posta"..., 4096) = 4096
00:05:28 read(4, "hat an\n                 address may have been used in the generation of\n                 a specific value.\n\n                 The value for this object may not be all zeros or\n                 all 'ff'H or the empty (zero length) string.\n\n                 The initial value for this object may be configured\n                 via an operator console entry or via an algorithmic\n                 function.  In the latter case, the following\n                 example algorithm is recommended.\n\n                 In cases where there are multiple engines on the\n                 same system, the use of this algorithm is NOT\n                 appropriate, as it would result in all of those\n                 engines ending up with the same ID value.\n\n                 1) The very first bit is used to indicate how the\n                    rest of the data is composed.\n\n                    0 - as defined by enterprise using former methods\n                        that existed before SNMPv3. See item 2 below"..., 4096) = 4096
00:05:28 read(4, "ngth 27\n\n                      6-127 - reserved, unused\n\n                    128-255 - as defined by the enterprise\n                              Maximum remaining length 27\n                \"\n    SYNTAX       OCTET STRING (SIZE(5..32))\n\nSnmpSecurityModel ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION \"An identifier that uniquely identifies a\n                 Security Model of the Security Subsystem within\n                 this SNMP Management Architecture.\n\n                 The values for securityModel are allocated as\n                 follows:\n\n                 - The zero value does not identify any particular\n                   security model.\n\n                 - Values between 1 and 255, inclusive, are reserved\n                   for standards-track Security Models and are\n                   managed by the Internet Assigned Numbers Authority\n                   (IANA).\n                 - Values greater than 255 are allocated to\n                   enterprise-specific "..., 4096) = 4096
00:05:28 read(4, "      - Values greater than 255 are allocated to\n                   enterprise-specific Message Processing Models.\n                   An enterprise messageProcessingModel value is\n                   defined to be:\n\n                   enterpriseID * 256 +\n                        messageProcessingModel within enterprise\n\n                   For example, the fourth Message Processing Model\n                   defined by the enterprise whose enterpriseID\n\n                   is 1 would be 259.\n\n                 This scheme for allocating messageProcessingModel\n                 values allows for a maximum of 255 standards-\n                 based Message Processing Models, and for a\n                 maximum of 256 Message Processing Models per\n                 enterprise.\n\n                 It is believed that the assignment of new\n                 messageProcessingModel values will be rare\n                 in practice because the larger the number of\n                 simultaneously utilized Mes"..., 4096) = 4096
00:05:28 read(4, "d by\n                 amendments to the 10646 standard from time\n                 to time, implementations must be prepared to\n                 encounter any code point from 0x00000000 to\n                 0x7fffffff.  Byte sequences that do not\n                 correspond to the valid UTF-8 encoding of a\n                 code point or are outside this range are\n                 prohibited.\n\n                 The use of control codes should be avoided.\n\n                 When it is necessary to represent a newline,\n                 the control code sequence CR LF should be used.\n\n                 The use of leading or trailing white space should\n                 be avoided.\n\n                 For code points not directly supported by user\n                 interface hardware or software, an alternative\n                 means of entry and display, such as hexadecimal,\n                 may be provided.\n\n                 For information encoded in 7-bit US-ASCII,\n                 the UTF-8 enc"..., 4096) = 4096
00:05:28 read(4, "um of the maximum\n                 message size values supported among all of the\n                 transports available to and supported by the engine.\n                \"\n    ::= { snmpEngine 4 }\n\n-- Registration Points for Authentication and Privacy Protocols **\n\nsnmpAuthProtocols OBJECT-IDENTITY\n    STATUS        current\n    DESCRIPTION  \"Registration point for standards-track\n                  authentication protocols used in SNMP Management\n                  Frameworks.\n                 \"\n    ::= { snmpFrameworkAdmin 1 }\n\nsnmpPrivProtocols OBJECT-IDENTITY\n    STATUS        current\n    DESCRIPTION  \"Registration point for standards-track privacy\n                  protocols used in SNMP Management Frameworks.\n                 \"\n    ::= { snmpFrameworkAdmin 2 }\n\n-- Conformance information ******************************************\n\nsnmpFrameworkMIBCompliances\n               OBJECT IDENTIFIER ::= {snmpFrameworkMIBConformance 1}\nsnmpFrameworkMIBGroups\n               OBJECT IDENTIFIER ::="..., 4096) = 1862
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/NETWORK-SERVICES-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267935, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=21006, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "NETWORK-SERVICES-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    OBJECT-TYPE, Counter32, Gauge32, MODULE-IDENTITY, mib-2\n      FROM SNMPv2-SMI\n    TimeStamp, TEXTUAL-CONVENTION\n      FROM SNMPv2-TC\n    MODULE-COMPLIANCE, OBJECT-GROUP\n      FROM SNMPv2-CONF\n    SnmpAdminString\n        FROM SNMP-FRAMEWORK-MIB;\n\napplication MODULE-IDENTITY\n    LAST-UPDATED \"200003030000Z\"\n    ORGANIZATION \"IETF Mail and Directory Management Working Group\"\n\n    CONTACT-INFO\n      \"        Ned Freed\n\n       Postal: Innosoft International, Inc.\n               1050 Lakes Drive\n               West Covina, CA 91790\n               US\n\n          Tel: +1 626 919 3600\n          Fax: +1 626 919 3614\n\n       E-Mail: ned.freed@innosoft.com\"\n    DESCRIPTION\n      \"The MIB module describing network service applications\"\n    REVISION \"200003030000Z\"\n    DESCRIPTION\n      \"This revision, published in RFC 2788, changes a number of\n       DisplayStrings to SnmpAdminStrings. Note that this change\n       is not strictly supported by S"..., 4096) = 4096
00:05:28 read(4, "pplRejectedInboundAssociations\n        Counter32,\n    applFailedOutboundAssociations\n        Counter32,\n    applDescription\n        SnmpAdminString,\n    applURL\n        URLString\n}\n\napplIndex OBJECT-TYPE\n    SYNTAX INTEGER (1..2147483647)\n    MAX-ACCESS not-accessible\n    STATUS current\n    DESCRIPTION\n      \"An index to uniquely identify the network service\n       application. This attribute is the index used for\n       lexicographic ordering of the table.\"\n    ::= {applEntry 1}\n\napplName OBJECT-TYPE\n    SYNTAX SnmpAdminString\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n      \"The name the network service application chooses to be\n       known by.\"\n    ::= {applEntry 2}\n\napplDirectoryName OBJECT-TYPE\n    SYNTAX DistinguishedName\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n      \"The Distinguished Name of the directory entry where\n       static information about this application is stored.\n       An empty string indicates that no information about\n      "..., 4096) = 4096
00:05:28 read(4, "mber of associations to the application entity\n       since application initialization, where it was the responder.\"\n    ::= {applEntry 10}\n\napplAccumulatedOutboundAssociations OBJECT-TYPE\n    SYNTAX Counter32\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n      \"The total number of associations to the application entity\n       since application initialization, where it was the initiator.\"\n    ::= {applEntry 11}\n\napplLastInboundActivity OBJECT-TYPE\n    SYNTAX TimeStamp\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n      \"The value of sysUpTime at the time this application last\n       had an inbound association.  If the last association\n       occurred prior to the last initialization of the network\n       subsystem, then this object contains a zero value.\"\n    ::= {applEntry 12}\n\napplLastOutboundActivity OBJECT-TYPE\n    SYNTAX TimeStamp\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n      \"The value of sysUpTime at the time this application last\n"..., 4096) = 4096
00:05:28 read(4, "able.  Note that the\n       table is also indexed by the applIndex.\"\n    ::= {assocEntry 1}\n\nassocRemoteApplication OBJECT-TYPE\n    SYNTAX SnmpAdminString\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n      \"The name of the system running remote network service\n       application.  For an IP-based application this should be\n       either a domain name or IP address.  For an OSI application\n       it should be the string encoded distinguished name of the\n       managed object.  For X.400(1984) MTAs which do not have a\n       Distinguished Name, the RFC 2156 syntax 'mta in\n\n       globalid' used in X400-Received: fields can be used. Note,\n       however, that not all connections an MTA makes are\n       necessarily to another MTA.\"\n    ::= {assocEntry 2}\n\nassocApplicationProtocol OBJECT-TYPE\n    SYNTAX OBJECT IDENTIFIER\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n      \"An identification of the protocol being used for the\n       application.  For an OSI Appli"..., 4096) = 4096
00:05:28 read(4, "ns and\n       their associations.\"\n    MODULE\n      MANDATORY-GROUPS {applRFC2248Group, assocRFC2248Group}\n    ::= {applCompliances 4}\n\napplRFC2788Compliance MODULE-COMPLIANCE\n    STATUS current\n    DESCRIPTION\n      \"The compliance statement for RFC 2788 implementations\n       which support the Network Services Monitoring MIB\n       for basic monitoring of network service applications.\"\n    MODULE\n      MANDATORY-GROUPS {applRFC2788Group}\n    ::= {applCompliances 5}\n\nassocRFC2788Compliance MODULE-COMPLIANCE\n    STATUS current\n    DESCRIPTION\n      \"The compliance statement for RFC 2788 implementations\n       which support the Network Services Monitoring MIB for\n       basic monitoring of network service applications and\n       their associations.\"\n    MODULE\n      MANDATORY-GROUPS {applRFC2788Group, assocRFC2788Group}\n    ::= {applCompliances 6}\n\n-- Units of conformance\n\napplRFC1565Group OBJECT-GROUP\n    OBJECTS {\n      applName, applVersion, applUptime, applOperStatus,\n      applLast"..., 4096) = 4096
00:05:28 read(4, "sed protocols that don't have OIDs assigned by other\n-- means. {applUDPProtoID port} serves the same purpose for\n-- UDP-based protocols. In either case 'port' corresponds to\n-- the primary port number being used by the protocol. For example,\n-- assuming no other OID is assigned for SMTP, an OID of\n-- {applTCPProtoID 25} could be used, since SMTP is a TCP-based\n-- protocol that uses port 25 as its primary port.\n\napplTCPProtoID OBJECT IDENTIFIER ::= {application 4}\napplUDPProtoID OBJECT IDENTIFIER ::= {application 5}\n\nEND\n", 4096) = 526
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "mtaEntry 2}\n\nmtaTransmittedMessages OBJECT-TYPE\n   SYNTAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The number of messages transmitted since MTA initialization.\n      This includes messages that were transmitted to some other\n      MTA or are waiting for delivery to an end-user or\n      application.\"\n   ::= {mtaEntry 3}\n\nmtaReceivedVolume OBJECT-TYPE\n   SYNTAX Counter32\n   UNITS \"K-octets\"\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The total volume of messages received since MTA\n      initialization, measured in kilo-octets.  This volume should\n      include all transferred data that is logically above the mail\n      transport protocol level.  For example, an SMTP-based MTA\n      should use the number of kilo-octets in the message header\n      and body, while an X.400-based MTA should use the number of\n      kilo-octets of P2 data.  This includes messages transmitted\n      to this MTA from other MTAs as well as messages that have\n     "..., 4096) = 4096
00:05:28 read(3, " to some other MTA or are waiting for\n      delivery to an end-user or application.\"\n   ::= {mtaEntry 9}\n\nmtaSuccessfulConvertedMessages OBJECT-TYPE\n   SYNTAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The number of messages that have been successfully\n      converted from one form to another since MTA\n      initialization.\"\n   ::= {mtaEntry 10}\n\nmtaFailedConvertedMessages OBJECT-TYPE\n   SYNTAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The number of messages for which an unsuccessful\n      attempt was made to convert them from one form to\n      another since MTA initialization.\"\n   ::= {mtaEntry 11}\n\nmtaLoopsDetected OBJECT-TYPE\n   SYNTAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"A message loop is defined as a situation where the MTA\n      decides that a given message will never be delivered to\n      one or more recipients and instead will continue to\n      loop endlessly through one or more MTA"..., 4096) = 4096
00:05:28 read(3, "nnel\" is often used in MTA implementations; channels\n-- are usually, but not always, equivalent to a group. However,\n-- this MIB does not use the term \"channel\" because there is no\n-- requirement that an MTA supporting this MIB has to map its\n-- \"channel\" abstraction one-to-one onto the MIB's group abstraction.\n\n-- An MTA may create a group or group of groups at any time. Once\n-- created, however, an MTA cannot delete an entry for a group from\n-- the group table.  Deletion is only allowed when the MTA is\n-- reinitialized, and is not required even then.  This restriction\n-- is imposed so that monitoring agents can rely on group\n-- assignments being consistent across multiple query operations.\n\n-- Groups may be laid out so as to form a hierarchical arrangement,\n-- with some groups acting as subgroups for other groups.\n-- Alternately, disjoint groups of groups may be used to provide\n-- different sorts of \"snapshots\" of MTA operation.  The\n-- mtaGroupHierarchy variable provides an indicati"..., 4096) = 4096
00:05:28 read(3, "essages currently stored in this\n      group's queue.\"\n   ::= {mtaGroupEntry 4}\n\nmtaGroupTransmittedMessages OBJECT-TYPE\n   SYNTAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The number of messages transmitted by this group since\n      group creation.\"\n   ::= {mtaGroupEntry 5}\n\nmtaGroupReceivedVolume OBJECT-TYPE\n   SYNTAX Counter32\n   UNITS \"K-octets\"\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The total volume of messages received to this group since\n      group creation, measured in kilo-octets.  This volume\n      should include all transferred data that is logically above\n      the mail transport protocol level.  For example, an\n      SMTP-based MTA should use the number of kilo-octets in the\n      message header and body, while an X.400-based MTA should use\n      the number of kilo-octets of P2 data.\"\n   ::= {mtaGroupEntry 6}\n\nmtaGroupStoredVolume OBJECT-TYPE\n   SYNTAX Gauge32\n   UNITS \"K-octets\"\n   MAX-ACCESS read-only\n   STATUS curr"..., 4096) = 4096
00:05:28 read(3, "TAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The total number of associations from the group since\n      group creation, where the MTA was the initiator.\"\n   ::= {mtaGroupEntry 16}\n\nmtaGroupLastInboundActivity OBJECT-TYPE\n   SYNTAX TimeInterval\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"Time since the last time that this group had an active\n     inbound association for purposes of message reception.\"\n   ::= {mtaGroupEntry 17}\n\nmtaGroupLastOutboundActivity OBJECT-TYPE\n   SYNTAX TimeInterval\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"Time since the last time that this group had a\n      successful outbound association for purposes of\n      message delivery.\"\n   ::= {mtaGroupEntry 18}\n\nmtaGroupLastOutboundAssociationAttempt OBJECT-TYPE\n   SYNTAX TimeInterval\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"Time since the last time that this group attempted\n      to make an outbound association for purpose"..., 4096) = 4096
00:05:28 read(3, "     used.\"\n   ::= {mtaGroupEntry 25}\n\nmtaGroupSuccessfulConvertedMessages OBJECT-TYPE\n   SYNTAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The number of messages that have been successfully\n      converted from one form to another in this group\n      since group creation.\"\n   ::= {mtaGroupEntry 26}\n\nmtaGroupFailedConvertedMessages OBJECT-TYPE\n   SYNTAX Counter32\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"The number of messages for which an unsuccessful\n      attempt was made to convert them from one form to\n      another in this group since group creation.\"\n   ::= {mtaGroupEntry 27}\n\nmtaGroupDescription OBJECT-TYPE\n   SYNTAX SnmpAdminString\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"A description of the group's purpose.  This information is\n      intended to identify the group in a status display.\"\n   ::= {mtaGroupEntry 28}\n\nmtaGroupURL OBJECT-TYPE\n   SYNTAX URLString\n   MAX-ACCESS read-only\n   STATUS current\n   DES"..., 4096) = 4096
00:05:28 read(3, ":= {mta 3}\n\nmtaGroupAssociationEntry OBJECT-TYPE\n   SYNTAX MtaGroupAssociationEntry\n   MAX-ACCESS not-accessible\n   STATUS current\n   DESCRIPTION\n     \"The entry holding information regarding the associations\n      for each MTA group.\"\n   INDEX {applIndex, mtaGroupIndex, mtaGroupAssociationIndex}\n   ::= {mtaGroupAssociationTable 1}\n\nMtaGroupAssociationEntry ::= SEQUENCE {\n   mtaGroupAssociationIndex\n       INTEGER\n}\n\nmtaGroupAssociationIndex OBJECT-TYPE\n   SYNTAX INTEGER (1..2147483647)\n   MAX-ACCESS read-only\n   STATUS current\n   DESCRIPTION\n     \"Reference into association table to allow correlation of\n      this group's active associations with the association table.\"\n   ::= {mtaGroupAssociationEntry 1}\n\n-- The mtaGroupErrorTable gives each group a way of tallying\n-- the specific errors it has encountered.  The mechanism\n-- defined here uses RFC 1893 status codes to identify\n-- various specific errors.  There are also classes for generic\n-- errors of various sorts, and the entire me"..., 4096) = 4096
00:05:28 read(3, "stem\n      encounters in a generic yet detailed way.\"\n   ::= {mtaGroupErrorEntry 4}\n\n-- Conformance information\n\nmtaConformance OBJECT IDENTIFIER ::= {mta 4}\n\nmtaGroups      OBJECT IDENTIFIER ::= {mtaConformance 1}\nmtaCompliances OBJECT IDENTIFIER ::= {mtaConformance 2}\n\n-- Compliance statements\n\nmtaCompliance MODULE-COMPLIANCE\n   STATUS current\n   DESCRIPTION\n     \"The compliance statement for RFC 1566 implementations\n      which support the Mail Monitoring MIB for basic\n      monitoring of MTAs.\"\n   MODULE  -- this module\n     MANDATORY-GROUPS {mtaRFC1566Group}\n   ::= {mtaCompliances 1}\n\nmtaAssocCompliance MODULE-COMPLIANCE\n   STATUS current\n   DESCRIPTION\n     \"The compliance statement for RFC 1566 implementations\n      which support the Mail Monitoring MIB for monitoring\n      of MTAs and their associations.\"\n   MODULE  -- this module\n     MANDATORY-GROUPS {mtaRFC1566Group, mtaRFC1566AssocGroup}\n   ::= {mtaCompliances 2}\n\nmtaRFC2249Compliance MODULE-COMPLIANCE\n   STATUS current\n   "..., 4096) = 4096
00:05:28 read(3, "edMessages,\n     mtaGroupStoredMessages, mtaGroupTransmittedMessages,\n     mtaGroupReceivedVolume, mtaGroupStoredVolume,\n     mtaGroupTransmittedVolume, mtaGroupReceivedRecipients,\n     mtaGroupStoredRecipients, mtaGroupTransmittedRecipients,\n     mtaGroupOldestMessageStored, mtaGroupInboundAssociations,\n     mtaGroupOutboundAssociations,\n     mtaGroupAccumulatedInboundAssociations,\n     mtaGroupAccumulatedOutboundAssociations,\n     mtaGroupLastInboundActivity, mtaGroupLastOutboundActivity,\n     mtaGroupRejectedInboundAssociations,\n     mtaGroupFailedOutboundAssociations,\n     mtaGroupInboundRejectionReason,\n     mtaGroupOutboundConnectFailureReason,\n     mtaGroupScheduledRetry, mtaGroupMailProtocol, mtaGroupName}\n   STATUS current\n   DESCRIPTION\n     \"A collection of objects providing basic monitoring of MTAs.\n      This is the original set of such objects defined in RFC\n      1566.\"\n   ::= {mtaGroups 10}\n\nmtaRFC1566AssocGroup OBJECT-GROUP\n   OBJECTS {\n     mtaGroupAssociationIndex}\n "..., 4096) = 4096
00:05:28 read(3, "ociations,\n     mtaGroupAccumulatedOutboundAssociations,\n     mtaGroupLastInboundActivity, mtaGroupLastOutboundActivity,\n     mtaGroupLastOutboundAssociationAttempt,\n     mtaGroupRejectedInboundAssociations,\n     mtaGroupFailedOutboundAssociations,\n     mtaGroupInboundRejectionReason,\n     mtaGroupOutboundConnectFailureReason,\n     mtaGroupScheduledRetry, mtaGroupMailProtocol, mtaGroupName,\n     mtaGroupSuccessfulConvertedMessages,\n     mtaGroupFailedConvertedMessages, mtaGroupDescription,\n     mtaGroupURL, mtaGroupCreationTime, mtaGroupHierarchy,\n     mtaGroupOldestMessageId, mtaGroupLoopsDetected}\n   STATUS current\n   DESCRIPTION\n     \"A collection of objects providing basic monitoring of MTAs.\n\n      This is the appropriate group for RFC 2789.\"\n   ::= {mtaGroups 7}\n\nmtaRFC2789AssocGroup OBJECT-GROUP\n   OBJECTS {\n     mtaGroupAssociationIndex}\n   STATUS current\n   DESCRIPTION\n     \"A collection of objects providing monitoring of MTA\n      associations.  This is the appropriate group "..., 4096) = 1415
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SCTP-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267947, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=96, st_size=45323, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "SCTP-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n  MODULE-IDENTITY, OBJECT-TYPE, Integer32, Unsigned32, Gauge32,\n  Counter32, Counter64, mib-2\n       FROM SNMPv2-SMI                        -- [RFC2578]\n  TimeStamp, TruthValue\n       FROM SNMPv2-TC                         -- [RFC2579]\n  MODULE-COMPLIANCE, OBJECT-GROUP\n       FROM SNMPv2-CONF                       -- [RFC2580]\n  InetAddressType, InetAddress, InetPortNumber\n       FROM INET-ADDRESS-MIB;                 -- [RFC3291]\n\nsctpMIB MODULE-IDENTITY\n  LAST-UPDATED \"200409020000Z\"       -- 2nd September 2004\n  ORGANIZATION \"IETF SIGTRAN Working Group\"\n  CONTACT-INFO\n       \"\n        WG EMail: sigtran@ietf.org\n\n        Web Page:\n              http://www.ietf.org/html.charters/sigtran-charter.html\n\n        Chair:     Lyndon Ong\n                   Ciena Corporation\n                   0480 Ridgeview Drive\n                   Cupertino, CA  95014\n                   USA\n                   Tel:\n                   Email: lyong@ciena.com\n\n        Edit"..., 4096) = 4096
00:05:28 read(3, " STATUS         current\n  DESCRIPTION\n       \"The number of times that associations have made a direct\n       transition to the CLOSED state from either the SHUTDOWN-SENT\n       state or the SHUTDOWN-ACK-SENT state. Graceful termination of\n       the association.\"\n  REFERENCE\n       \"Section 4 in RFC2960 covers the SCTP   Association state\n       diagram.\"\n  ::= { sctpStats  5 }\n\n-- OTHER LAYER STATISTICS\n\nsctpOutOfBlues OBJECT-TYPE\n  SYNTAX         Counter32\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The number of out of the blue packets received by the host.\n       An out of the blue packet is an SCTP packet correctly formed,\n       including the proper checksum, but for which the receiver was\n       unable to identify an appropriate association.\"\n  REFERENCE\n       \"Section 8.4 in RFC2960 deals with the Out-Of-The-Blue\n        (OOTB) packet definition and procedures.\"\n  ::= { sctpStats  6 }\n\nsctpChecksumErrors OBJECT-TYPE\n  SYNTAX         Counter32\n  M"..., 4096) = 4096
00:05:28 read(3, "FC2960 includes a description of the\n       reassembly process.\"\n  ::= { sctpStats  15 }\n\nsctpOutSCTPPacks OBJECT-TYPE\n  SYNTAX         Counter64\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The number of SCTP packets sent. Retransmitted DATA chunks\n       are included.\"\n  ::= { sctpStats  16 }\n\nsctpInSCTPPacks OBJECT-TYPE\n  SYNTAX         Counter64\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The number of SCTP packets received. Duplicates are\n       included.\"\n  ::= { sctpStats  17 }\n\nsctpDiscontinuityTime OBJECT-TYPE\n  SYNTAX         TimeStamp\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The value of sysUpTime on the most recent occasion at which\n       any one or more of this general statistics counters suffered a\n       discontinuity.  The relevant counters are the specific\n       instances associated with this interface of any Counter32 or\n       Counter64 object contained in the SCTP layer sta"..., 4096) = 4096
00:05:28 read(3, "TUS         current\n  DESCRIPTION\n       \"Valid cookie life in the 4-way start-up handshake procedure.\"\n  REFERENCE\n       \"Section 5.1.3 in RFC2960 explains the cookie generation\n       process. Recommended value is per section 14 in RFC2960.\"\n  DEFVAL {60000} -- milliseconds\n  ::= { sctpParams 6 }\n\nsctpMaxInitRetr OBJECT-TYPE\n  SYNTAX         Unsigned32\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The maximum number of retransmissions at the start-up phase\n       (INIT and COOKIE ECHO chunks). \"\n  REFERENCE\n       \"Section 5.1.4, 5.1.6 in RFC2960 refers to Max.Init.Retransmit\n       parameter. Recommended value is per section 14 in RFC2960.\"\n  DEFVAL {8} -- number of attempts\n  ::= { sctpParams 7 }\n\n-- TABLES\n-- ******\n\n-- the SCTP Association TABLE\n\n-- The SCTP association table contains information about each\n-- association in which the local endpoint is involved.\n\nsctpAssocTable OBJECT-TYPE\n  SYNTAX         SEQUENCE OF SctpAssocEntry\n  MAX-ACCESS     n"..., 4096) = 4096
00:05:28 read(3, "ddress\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The primary remote IP address. The type of this address is\n       determined by the value of sctpAssocRemPrimAddrType.\n\n       The client side will know this value after INIT_ACK message\n       reception, the server side will know this value when sending\n       INIT_ACK message. However, values will be filled in at\n       established(4) state.\"\n  ::= { sctpAssocEntry 6 }\n\nsctpAssocHeartBeatInterval OBJECT-TYPE\n  SYNTAX         Unsigned32\n  UNITS          \"milliseconds\"\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The current heartbeat interval..\n\n       Zero value means no HeartBeat, even when the concerned\n       sctpAssocRemAddrHBFlag object is true.\"\n  DEFVAL {30000} -- milliseconds\n  ::= { sctpAssocEntry 7 }\n\nsctpAssocState OBJECT-TYPE\n  SYNTAX         INTEGER {\n                      closed(1),\n                      cookieWait(2),\n                      cookieEchoed(3),\n    "..., 4096) = 4096
00:05:28 read(3, "ect can be used as a pointer\n       into the swRunTable of the HOST-RESOURCES-MIB(if the value is\n       smaller than 2147483647) or into the sysApplElmtRunTable of\n       the SYSAPPL-MIB.\"\n  ::= { sctpAssocEntry 12 }\n\n-- Association Statistics\n\nsctpAssocT1expireds OBJECT-TYPE\n  SYNTAX         Counter32\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The T1 timer determines how long to wait for an\n       acknowledgement after sending an INIT or COOKIE-ECHO chunk.\n       This object reflects the number of times the T1 timer expires\n       without having received the acknowledgement.\n\n       Discontinuities in the value of this counter can occur at re-\n       initialization of the management system, and at other times as\n       indicated by the value of sctpAssocDiscontinuityTime.\"\n  REFERENCE\n       \"Section 5 in RFC2960.\"\n  ::= { sctpAssocEntry 13 }\n\nsctpAssocT2expireds OBJECT-TYPE\n  SYNTAX         Counter32\n  MAX-ACCESS     read-only\n  STATUS         current\n"..., 4096) = 4096
00:05:28 read(3, "ocalAddrEntry OBJECT-TYPE\n  SYNTAX         SctpAssocLocalAddrEntry\n  MAX-ACCESS     not-accessible\n  STATUS         current\n  DESCRIPTION\n       \"Local information about the available addresses. There will\n       be an entry for every local IP address defined for this\n\n       association.\n       Implementors need to be aware that if the size of\n       sctpAssocLocalAddr exceeds 114 octets then OIDs of column\n       instances in this table will have more than 128 sub-\n       identifiers and cannot be accessed using SNMPv1, SNMPv2c, or\n       SNMPv3.\"\n  INDEX     {    sctpAssocId,   -- shared index\n                 sctpAssocLocalAddrType,\n                 sctpAssocLocalAddr }\n  ::= { sctpAssocLocalAddrTable 1 }\n\nSctpAssocLocalAddrEntry ::= SEQUENCE {\n  sctpAssocLocalAddrType        InetAddressType,\n  sctpAssocLocalAddr            InetAddress,\n  sctpAssocLocalAddrStartTime   TimeStamp\n  }\n\nsctpAssocLocalAddrType OBJECT-TYPE\n  SYNTAX         InetAddressType\n  MAX-ACCESS     not-accessible\n"..., 4096) = 4096
00:05:28 read(3, "chability of this\n       specific remote IP address.\n\n       When the object is set to 'true' (1), the remote IP address is\n       understood as Active. Active means that the threshold of no\n       answers received from this IP address has not been reached.\n\n       When the object is set to 'false' (2), the remote IP address\n       is understood as Inactive. Inactive means that either no\n       heartbeat or any other message was received from this address,\n       reaching the threshold defined by the protocol.\"\n  REFERENCE\n       \"The remote transport states are defined as Active and\n       Inactive in the SCTP, RFC2960.\"\n  ::= { sctpAssocRemAddrEntry 3 }\n\nsctpAssocRemAddrHBActive OBJECT-TYPE\n  SYNTAX         TruthValue\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"This object indicates whether the optional Heartbeat check\n       associated to one destination transport address is activated\n       or not (value equal to true or false, respectively). \"\n  ::= {"..., 4096) = 4096
00:05:28 read(3, "o the sctpAssocStartTime\n       object from the main table.\"\n  ::= { sctpLookupLocalPortEntry 1 }\n\n-- BY REMOTE PORT\n\nsctpLookupRemPortTable OBJECT-TYPE\n  SYNTAX         SEQUENCE OF SctpLookupRemPortEntry\n  MAX-ACCESS     not-accessible\n  STATUS         current\n  DESCRIPTION\n       \"With the use of this table, a list of associations which are\n       using the specified remote port can be got\"\n  ::= { sctpObjects  7 }\n\nsctpLookupRemPortEntry OBJECT-TYPE\n  SYNTAX         SctpLookupRemPortEntry\n  MAX-ACCESS     not-accessible\n  STATUS         current\n  DESCRIPTION\n       \"This table is indexed by remote port and association ID.\n       Specifying a remote port we would get a list of the\n       associations whose local port is the one specified \"\n  INDEX         { sctpAssocRemPort,\n                 sctpAssocId }\n  ::= { sctpLookupRemPortTable 1 }\n\nSctpLookupRemPortEntry::= SEQUENCE {\n  sctpLookupRemPortStartTime              TimeStamp\n  }\n\nsctpLookupRemPortStartTime OBJECT-TYPE\n  SYNTAX    "..., 4096) = 4096
00:05:28 read(3, ":= { sctpLookupRemPrimIPAddrTable 1 }\n\nSctpLookupRemPrimIPAddrEntry::= SEQUENCE {\n  sctpLookupRemPrimIPAddrStartTime             TimeStamp\n  }\n\nsctpLookupRemPrimIPAddrStartTime OBJECT-TYPE\n  SYNTAX         TimeStamp\n  MAX-ACCESS     read-only\n  STATUS         current\n  DESCRIPTION\n       \"The value of SysUpTime at the time that this row was created.\n\n       As the table will be created after the sctpAssocTable\n       creation, this value could be equal to the sctpAssocStartTime\n       object from the main table.\"\n  ::= { sctpLookupRemPrimIPAddrEntry 1 }\n\n-- BY REMOTE IP ADDRESS\n\nsctpLookupRemIPAddrTable OBJECT-TYPE\n  SYNTAX         SEQUENCE OF SctpLookupRemIPAddrEntry\n  MAX-ACCESS     not-accessible\n  STATUS         current\n  DESCRIPTION\n       \"With the use of this table, a list of associations that have\n       the specified IP address as one of the remote ones can be\n       retrieved. \"\n  ::= { sctpObjects  10 }\n\nsctpLookupRemIPAddrEntry OBJECT-TYPE\n  SYNTAX         SctpLookupRemIPAd"..., 4096) = 4096
00:05:28 read(3, "     sctpAssocPrimProcess,\n              sctpAssocStartTime,\n              sctpAssocDiscontinuityTime,\n              sctpAssocLocalAddrStartTime,\n              sctpAssocRemAddrActive,\n              sctpAssocRemAddrHBActive,\n              sctpAssocRemAddrRTO,\n              sctpAssocRemAddrMaxPathRtx,\n              sctpAssocRemAddrStartTime\n            }\n  STATUS    current\n  DESCRIPTION\n       \"The SCTP group of objects to manage per-association\n       parameters. These variables include all the SCTP basic\n       features.\"\n  ::= { sctpMibGroups 3 }\n\nsctpPerAssocStatsGroup OBJECT-GROUP\n              OBJECTS\n            { sctpAssocT1expireds,\n              sctpAssocT2expireds,\n              sctpAssocRtxChunks,\n              sctpAssocRemAddrRtx\n            }\n  STATUS    current\n  DESCRIPTION\n       \"Per Association Statistics group. It includes the objects to\n       collect flow control statistics per association.\"\n  ::= { sctpMibGroups 4 }\n\nsctpInverseGroup OBJECT-GROUP\n  OBJECTS   { sct"..., 4096) = 4096
00:05:28 read(3, "GROUP sctpInverseGroup\n       DESCRIPTION\n            \"Objects used in inverse lookup tables. This should be\n            implemented, at the discretion of the implementers, for\n            easier lookups in the association tables\"\n  ::= { sctpMibCompliances 1 }\n\nEND\n", 4096) = 267
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/RMON-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267945, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=296, st_size=147822, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "RMON-MIB DEFINITIONS ::= BEGIN\n\n    IMPORTS\n        MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY,\n        NOTIFICATION-TYPE, mib-2, Counter32,\n        Integer32, TimeTicks                   FROM SNMPv2-SMI\n\n        TEXTUAL-CONVENTION, DisplayString      FROM SNMPv2-TC\n\n        MODULE-COMPLIANCE, OBJECT-GROUP,\n        NOTIFICATION-GROUP                     FROM SNMPv2-CONF;\n\n--  Remote Network Monitoring MIB\n\nrmonMibModule MODULE-IDENTITY\n    LAST-UPDATED \"200005110000Z\"  -- 11 May, 2000\n    ORGANIZATION \"IETF RMON MIB Working Group\"\n    CONTACT-INFO\n        \"Steve Waldbusser\n        Phone: +1-650-948-6500\n        Fax:   +1-650-745-0671\n        Email: waldbusser@nextbeacon.com\"\n    DESCRIPTION\n        \"Remote network monitoring devices, often called\n        monitors or probes, are instruments that exist for\n        the purpose of managing a network. This MIB defines\n        objects for managing remote network monitoring devices.\"\n\n    REVISION \"200005110000Z\"    -- 11 May, 2000\n    DES"..., 4096) = 4096
00:05:28 read(3, "       of the contents of MIB views; access to a particular\n        SNMP object instance depends only upon its presence\n        or absence in a particular MIB view and never upon\n        its value or the value of related object instances.\n        Thus, objects of this type afford resolution of\n        resource contention only among cooperating\n        managers; they realize no access control function\n        with respect to uncooperative parties.\"\n    SYNTAX OCTET STRING (SIZE (0..127))\n\nEntryStatus ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n        \"The status of a table entry.\n\n        Setting this object to the value invalid(4) has the\n        effect of invalidating the corresponding entry.\n        That is, it effectively disassociates the mapping\n        identified with said entry.\n        It is an implementation-specific matter as to whether\n        the agent removes an invalidated entry from the table.\n        Accordingly, management stations must be prepared to\n  "..., 4096) = 4096
00:05:28 read(3, "riable does not exist at all.\n\n        An agent may allow an entryStatus variable to change state in\n        additional ways, so long as the semantics of the states are\n        followed.  This allowance is made to ease the implementation of\n        the agent and is made despite the fact that managers should\n        never exercise these additional state transitions.\"\n    SYNTAX INTEGER {\n               valid(1),\n               createRequest(2),\n               underCreation(3),\n               invalid(4)\n           }\n\n    statistics        OBJECT IDENTIFIER ::= { rmon 1 }\n    history           OBJECT IDENTIFIER ::= { rmon 2 }\n    alarm             OBJECT IDENTIFIER ::= { rmon 3 }\n    hosts             OBJECT IDENTIFIER ::= { rmon 4 }\n    hostTopN          OBJECT IDENTIFIER ::= { rmon 5 }\n    matrix            OBJECT IDENTIFIER ::= { rmon 6 }\n    filter            OBJECT IDENTIFIER ::= { rmon 7 }\n    capture           OBJECT IDENTIFIER ::= { rmon 8 }\n    event             OBJECT IDENTIFIER"..., 4096) = 4096
00:05:28 read(3, "l identify the instance of the ifIndex object,\n        defined in RFC 2233 [17], for the desired interface.\n        For example, if an entry were to receive data from\n        interface #1, this object would be set to ifIndex.1.\n\n        The statistics in this group reflect all packets\n        on the local network segment attached to the identified\n        interface.\n\n        An agent may or may not be able to tell if fundamental\n        changes to the media of the interface have occurred and\n        necessitate an invalidation of this entry.  For example, a\n        hot-pluggable ethernet card could be pulled out and replaced\n        by a token-ring card.  In such a case, if the agent has such\n        knowledge of the change, it is recommended that it\n        invalidate this entry.\n\n        This object may not be modified if the associated\n        etherStatsStatus object is equal to valid(1).\"\n    ::= { etherStatsEntry 2 }\n\netherStatsDropEvents OBJECT-TYPE\n    SYNTAX     Counter32\n    M"..., 4096) = 4096
00:05:28 read(3, "tsEntry 8 }\n\netherStatsUndersizePkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number of packets received that were\n        less than 64 octets long (excluding framing bits,\n        but including FCS octets) and were otherwise well\n        formed.\"\n    ::= { etherStatsEntry 9 }\n\netherStatsOversizePkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number of packets received that were\n        longer than 1518 octets (excluding framing bits,\n        but including FCS octets) and were otherwise\n        well formed.\"\n    ::= { etherStatsEntry 10 }\n\netherStatsFragments OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number of packets received that were less than\n        64 octets in length (excludi"..., 4096) = 4096
00:05:28 read(3, "ent\n    DESCRIPTION\n        \"The total number of packets (including bad\n        packets) received that were 64 octets in length\n        (excluding framing bits but including FCS octets).\"\n    ::= { etherStatsEntry 14 }\n\netherStatsPkts65to127Octets OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number of packets (including bad\n        packets) received that were between\n        65 and 127 octets in length inclusive\n        (excluding framing bits but including FCS octets).\"\n    ::= { etherStatsEntry 15 }\n\netherStatsPkts128to255Octets OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number of packets (including bad\n        packets) received that were between\n        128 and 255 octets in length inclusive\n        (excluding framing bits but including FCS octets).\"\n    ::= { etherStatsEntry 16 }\n\net"..., 4096) = 4096
00:05:28 read(3, "eriod and 30 minutes for\n-- the long term period.\n\nhistoryControlTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HistoryControlEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of history control entries.\"\n    ::= { history 1 }\n\nhistoryControlEntry OBJECT-TYPE\n    SYNTAX     HistoryControlEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of parameters that set up a periodic sampling of\n        statistics.  As an example, an instance of the\n        historyControlInterval object might be named\n        historyControlInterval.2\"\n    INDEX { historyControlIndex }\n    ::= { historyControlTable 1 }\n\nHistoryControlEntry ::= SEQUENCE {\n    historyControlIndex             Integer32,\n    historyControlDataSource        OBJECT IDENTIFIER,\n    historyControlBucketsRequested  Integer32,\n    historyControlBucketsGranted    Integer32,\n    historyControlInterval          Integer32,\n    historyControlOwner             OwnerSt"..., 4096) = 4096
00:05:28 read(3, "er this value except as a result\n        of a modification to the associated\n        historyControlBucketsRequested object.\n\n        There will be times when the actual number of\n        buckets associated with this entry is less than\n        the value of this object.  In this case, at the\n        end of each sampling interval, a new bucket will\n        be added to the media-specific table.\n\n        When the number of buckets reaches the value of\n        this object and a new bucket is to be added to the\n        media-specific table, the oldest bucket associated\n        with this historyControlEntry shall be deleted by\n        the agent so that the new bucket can be added.\n\n        When the value of this object changes to a value less\n        than the current value, entries are deleted\n        from the media-specific table associated with this\n        historyControlEntry.  Enough of the oldest of these\n        entries shall be deleted by the agent so that their\n        number remains l"..., 4096) = 4096
00:05:28 read(3, "HistoryEntry OBJECT-TYPE\n    SYNTAX     EtherHistoryEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"An historical sample of Ethernet statistics on a particular\n        Ethernet interface.  This sample is associated with the\n        historyControlEntry which set up the parameters for\n        a regular collection of these samples.  As an example, an\n        instance of the etherHistoryPkts object might be named\n        etherHistoryPkts.2.89\"\n    INDEX { etherHistoryIndex , etherHistorySampleIndex }\n    ::= { etherHistoryTable 1 }\n\nEtherHistoryEntry ::= SEQUENCE {\n    etherHistoryIndex                 Integer32,\n    etherHistorySampleIndex           Integer32,\n    etherHistoryIntervalStart         TimeTicks,\n    etherHistoryDropEvents            Counter32,\n    etherHistoryOctets                Counter32,\n    etherHistoryPkts                  Counter32,\n    etherHistoryBroadcastPkts         Counter32,\n    etherHistoryMulticastPkts         Counter32,\n    "..., 4096) = 4096
00:05:28 read(3, "    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of good packets received during this\n        sampling interval that were directed to the\n        broadcast address.\"\n    ::= { etherHistoryEntry 7 }\n\netherHistoryMulticastPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of good packets received during this\n        sampling interval that were directed to a\n        multicast address.  Note that this number does not\n        include packets addressed to the broadcast address.\"\n    ::= { etherHistoryEntry 8 }\n\netherHistoryCRCAlignErrors OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of packets received during this\n        sampling interval that had a length (excluding\n        framing bits but including FCS octet"..., 4096) = 4096
00:05:28 read(3, "-5) and section\n        10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a\n        station must detect a collision, in the receive mode, if\n        three or more stations are transmitting simultaneously.  A\n        repeater port must detect a collision when two or more\n\n        stations are transmitting simultaneously.  Thus a probe\n        placed on a repeater port could record more collisions\n        than a probe connected to a station on the same segment\n        would.\n\n        Probe location plays a much smaller role when considering\n        10BASE-T.  14.2.1.4 (10BASE-T) of IEEE standard 802.3\n        defines a collision as the simultaneous presence of signals\n        on the DO and RD circuits (transmitting and receiving\n        at the same time).  A 10BASE-T station can only detect\n        collisions when it is transmitting.  Thus probes placed on\n        a station and a repeater, should report the same number of\n        collisions.\n\n        Note also that an RMON probe ins"..., 4096) = 4096
00:05:28 read(3, "gEventIndex         Integer32,\n    alarmFallingEventIndex        Integer32,\n    alarmOwner                    OwnerString,\n    alarmStatus                   EntryStatus\n}\n\nalarmIndex OBJECT-TYPE\n    SYNTAX     Integer32 (1..65535)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"An index that uniquely identifies an entry in the\n        alarm table.  Each such entry defines a\n        diagnostic sample at a particular interval\n        for an object on the device.\"\n    ::= { alarmEntry 1 }\n\nalarmInterval OBJECT-TYPE\n    SYNTAX     Integer32\n    UNITS      \"Seconds\"\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The interval in seconds over which the data is\n        sampled and compared with the rising and falling\n        thresholds.  When setting this variable, care\n        should be taken in the case of deltaValue\n        sampling - the interval should be set short enough\n        that the sampled variable is very unlikely to\n        inc"..., 4096) = 4096
00:05:28 read(3, "     The value during the current sampling period is not\n        made available until the period is completed and will\n        remain available until the next period completes.\"\n    ::= { alarmEntry 5 }\n\nalarmStartupAlarm OBJECT-TYPE\n    SYNTAX     INTEGER {\n                 risingAlarm(1),\n                 fallingAlarm(2),\n                 risingOrFallingAlarm(3)\n               }\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The alarm that may be sent when this entry is first\n        set to valid.  If the first sample after this entry\n        becomes valid is greater than or equal to the\n        risingThreshold and alarmStartupAlarm is equal to\n        risingAlarm(1) or risingOrFallingAlarm(3), then a single\n        rising alarm will be generated.  If the first sample\n        after this entry becomes valid is less than or equal\n        to the fallingThreshold and alarmStartupAlarm is equal\n        to fallingAlarm(2) or risingOrFallingAlarm(3), then a\n     "..., 4096) = 4096
00:05:28 read(3, "threshold is crossed.  The\n        eventEntry identified by a particular value of\n        this index is the same as identified by the same value\n        of the eventIndex object.  If there is no\n        corresponding entry in the eventTable, then\n        no association exists.  In particular, if this value\n        is zero, no associated event will be generated, as\n        zero is not a valid event index.\n\n        This object may not be modified if the associated\n        alarmStatus object is equal to valid(1).\"\n    ::= { alarmEntry 10 }\n\nalarmOwner OBJECT-TYPE\n    SYNTAX     OwnerString\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The entity that configured this entry and is therefore\n        using the resources assigned to it.\"\n    ::= { alarmEntry 11 }\n\nalarmStatus OBJECT-TYPE\n    SYNTAX     EntryStatus\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The status of this alarm entry.\"\n    ::= { alarmEntry 12 }\n\n-- The Host Group\n"..., 4096) = 4096
00:05:28 read(3, "it may continue to refer to a particular host by its\n-- creationOrder while unwittingly retrieving the data associated\n-- with another host entirely.  If this happens while downloading\n-- the host table, the management station may fail to download\n-- all of the entries in the table.\n\nhostControlTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HostControlEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of host table control entries.\"\n    ::= { hosts 1 }\n\nhostControlEntry OBJECT-TYPE\n    SYNTAX     HostControlEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of parameters that set up the discovery of hosts\n        on a particular interface and the collection of statistics\n        about these hosts.  For example, an instance of the\n        hostControlTableSize object might be named\n        hostControlTableSize.1\"\n    INDEX { hostControlIndex }\n    ::= { hostControlTable 1 }\n\nHostControlEntry ::= SEQUENCE {\n\n   "..., 4096) = 4096
00:05:28 read(3, "e status of this hostControl entry.\n\n        If this object is not equal to valid(1), all associated\n        entries in the hostTable, hostTimeTable, and the\n        hostTopNTable shall be deleted by the agent.\"\n    ::= { hostControlEntry 6 }\n\nhostTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HostEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of host entries.\"\n    ::= { hosts 2 }\n\nhostEntry OBJECT-TYPE\n    SYNTAX     HostEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A collection of statistics for a particular host that has\n        been discovered on an interface of this device.  For example,\n        an instance of the hostOutBroadcastPkts object might be\n        named hostOutBroadcastPkts.1.6.8.0.32.27.3.176\"\n    INDEX { hostIndex, hostAddress }\n    ::= { hostTable 1 }\n\nHostEntry ::= SEQUENCE {\n    hostAddress             OCTET STRING,\n    hostCreationOrder       Integer32,\n    hostIndex               Inte"..., 4096) = 4096
00:05:28 read(3, "AX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of octets transmitted by this address since\n        it was added to the hostTable (excluding framing\n        bits but including FCS octets), including those\n        octets in bad packets.\"\n    ::= { hostEntry 7 }\n\nhostOutErrors OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of bad packets transmitted by this address\n        since this host was added to the hostTable.\"\n    ::= { hostEntry 8 }\n\nhostOutBroadcastPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of good packets transmitted by this\n        address that were directed to the broadcast address\n        since this host was added to the hostTable.\"\n    ::= { hostEntry 9 }\n\nhostOutMulticastPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n  "..., 4096) = 4096
00:05:28 read(3, "here a previous\n        association between a value of hostTimeCreationOrder\n        and a hostTimeEntry may no longer hold.\"\n    ::= { hostTimeEntry 2 }\n\nhostTimeIndex OBJECT-TYPE\n    SYNTAX     Integer32 (1..65535)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The set of collected host statistics of which\n        this entry is a part.  The set of hosts\n        identified by a particular value of this\n        index is associated with the hostControlEntry\n        as identified by the same value of hostControlIndex.\"\n    ::= { hostTimeEntry 3 }\n\nhostTimeInPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of good packets transmitted to this\n        address since it was added to the hostTimeTable.\"\n    ::= { hostTimeEntry 4 }\n\nhostTimeOutPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPT"..., 4096) = 4096
00:05:28 read(3, "eport after it has been\n-- prepared.\n\nhostTopNControlTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF HostTopNControlEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of top N host control entries.\"\n    ::= { hostTopN 1 }\n\nhostTopNControlEntry OBJECT-TYPE\n    SYNTAX     HostTopNControlEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A set of parameters that control the creation of a report\n        of the top N hosts according to several metrics.  For\n        example, an instance of the hostTopNDuration object might\n        be named hostTopNDuration.3\"\n    INDEX { hostTopNControlIndex }\n    ::= { hostTopNControlTable 1 }\n\nHostTopNControlEntry ::= SEQUENCE {\n    hostTopNControlIndex    Integer32,\n    hostTopNHostIndex       Integer32,\n    hostTopNRateBase        INTEGER,\n    hostTopNTimeRemaining   Integer32,\n    hostTopNDuration        Integer32,\n    hostTopNRequestedSize   Integer32,\n    hostTopNGrantedSize     Int"..., 4096) = 4096
00:05:28 read(3, "  report is currently being collected, the number\n        of seconds that this report is being collected\n        during this sampling interval.\n\n        When the associated hostTopNTimeRemaining object is set,\n        this object shall be set by the probe to the same value\n        and shall not be modified until the next time\n        the hostTopNTimeRemaining is set.\n\n        This value shall be zero if no reports have been\n        requested for this hostTopNControlEntry.\"\n    DEFVAL { 0 }\n    ::= { hostTopNControlEntry 5 }\n\nhostTopNRequestedSize OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The maximum number of hosts requested for the top N\n        table.\n\n        When this object is created or modified, the probe\n        should set hostTopNGrantedSize as closely to this\n        object as is possible for the particular probe\n        implementation and available resources.\"\n    DEFVAL { 10 }\n    ::= { hostTopNControlEnt"..., 4096) = 4096
00:05:28 read(3, "     current\n    DESCRIPTION\n        \"An index that uniquely identifies an entry in\n        the hostTopN table among those in the same report.\n        This index is between 1 and N, where N is the\n        number of entries in this table.  Increasing values\n        of hostTopNIndex shall be assigned to entries with\n        decreasing values of hostTopNRate until index N\n        is assigned to the entry with the lowest value of\n        hostTopNRate or there are no more hostTopNEntries.\"\n    ::= { hostTopNEntry 2 }\n\nhostTopNAddress OBJECT-TYPE\n    SYNTAX     OCTET STRING\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The physical address of this host.\"\n    ::= { hostTopNEntry 3 }\n\nhostTopNRate OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The amount of change in the selected variable\n        during this sampling interval.  The selected\n        variable is this host's instance of the object\n        se"..., 4096) = 4096
00:05:28 read(3, "ll if fundamental\n        changes to the media of the interface have occurred and\n\n        necessitate an invalidation of this entry.  For example, a\n        hot-pluggable ethernet card could be pulled out and replaced\n        by a token-ring card.  In such a case, if the agent has such\n        knowledge of the change, it is recommended that it\n        invalidate this entry.\n\n        This object may not be modified if the associated\n        matrixControlStatus object is equal to valid(1).\"\n    ::= { matrixControlEntry 2 }\n\nmatrixControlTableSize OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of matrixSDEntries in the matrixSDTable\n        for this interface.  This must also be the value of\n        the number of entries in the matrixDSTable for this\n        interface.\"\n    ::= { matrixControlEntry 3 }\n\nmatrixControlLastDeleteTime OBJECT-TYPE\n    SYNTAX     TimeTicks\n    MAX-ACCESS read-only\n    STATUS     current\n"..., 4096) = 4096
00:05:28 read(3, "\"\n    ::= { matrixSDEntry 4 }\n\nmatrixSDOctets OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Octets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of octets (excluding framing bits but\n        including FCS octets) contained in all packets\n        transmitted from the source address to the\n        destination address.\"\n    ::= { matrixSDEntry 5 }\n\nmatrixSDErrors OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS      \"Packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of bad packets transmitted from\n        the source address to the destination address.\"\n    ::= { matrixSDEntry 6 }\n\n-- Traffic matrix tables from destination to source\n\nmatrixDSTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF MatrixDSEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of traffic matrix entries indexed by\n        destination and source MAC address.\"\n    ::= { matrix 3 }\n\nmatrixDSEntry OBJEC"..., 4096) = 4096
00:05:28 read(3, "'ed with the others.\n-- Within a filter, any bits checked in the data and status are\n-- AND'ed with respect to other bits in the same filter.  The\n-- NotMask also allows for checking for inequality.  Finally,\n-- the channelAcceptType object allows for inversion of the\n-- whole equation.\n--\n-- If a management station wishes to receive a trap to alert it\n-- that new packets have been captured and are available for\n-- download, it is recommended that it set up an alarm entry that\n-- monitors the value of the relevant channelMatches instance.\n--\n-- The channel can be turned on or off, and can also\n-- generate events when packets pass through it.\n\nfilterTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF FilterEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A list of packet filter entries.\"\n    ::= { filter 1 }\n\nfilterEntry OBJECT-TYPE\n    SYNTAX     FilterEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"A set of parameters for"..., 4096) = 4096
00:05:28 read(3, "the packet will fail\n            this data match.\n\n        (3) If for every relevant bit from the packet with the\n            corresponding filterPktDataNotMask bit set to one, the\n            bit from the packet is equal to the corresponding bit\n            from the filterPktData, then the packet will fail this\n            data match.\n\n        Any packets that have not failed any of the three matches\n        above have passed this data match.  In particular, a zero\n        length filter will match any packet.\n\n        This object may not be modified if the associated\n        filterStatus object is equal to valid(1).\"\n    ::= { filterEntry 4 }\n\nfilterPktDataMask OBJECT-TYPE\n    SYNTAX     OCTET STRING\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The mask that is applied to the match process.\n        After adjusting this mask for the offset, only those\n        bits in the received packet that correspond to bits set\n        in this mask are relevant for furt"..., 4096) = 4096
00:05:28 read(3, "dependent\n        on the media type of the interface that this channel\n        is receiving packets from.\n\n        The errors defined for a packet captured off of an\n        Ethernet interface are as follows:\n\n            bit #    Error\n                0    Packet is longer than 1518 octets\n                1    Packet is shorter than 64 octets\n                2    Packet experienced a CRC or Alignment error\n\n        For example, an Ethernet fragment would have a\n        value of 6 (2^1 + 2^2).\n\n        As this MIB is expanded to new media types, this object\n        will have other media-specific errors defined.\n\n        For the purposes of this status matching algorithm, if the\n        packet status is longer than this filterPktStatus object,\n        this object is conceptually extended with '0' bits until it\n        reaches the size of the packet status.\n\n        This object may not be modified if the associated\n        filterStatus object is equal to valid(1).\"\n    ::= { filterEntry "..., 4096) = 4096
00:05:28 read(3, "\n    channelIndex                 Integer32,\n    channelIfIndex               Integer32,\n    channelAcceptType            INTEGER,\n    channelDataControl           INTEGER,\n    channelTurnOnEventIndex      Integer32,\n    channelTurnOffEventIndex     Integer32,\n    channelEventIndex            Integer32,\n    channelEventStatus           INTEGER,\n    channelMatches               Counter32,\n    channelDescription           DisplayString,\n    channelOwner                 OwnerString,\n    channelStatus                EntryStatus\n}\n\nchannelIndex OBJECT-TYPE\n    SYNTAX     Integer32 (1..65535)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"An index that uniquely identifies an entry in the channel\n        table.  Each such entry defines one channel, a logical\n        data and event stream.\n\n        It is suggested that before creating a channel, an\n        application should scan all instances of the\n        filterChannelIndex object to make sure that there are no\n   "..., 4096) = 4096
00:05:28 brk(0x1966000)                 = 0x1966000
00:05:28 read(3, " that is configured to turn the associated\n        channelDataControl from off to on when the event is\n        generated.  The event identified by a particular value\n        of this object is the same event as identified by the\n        same value of the eventIndex object.  If there is no\n        corresponding entry in the eventTable, then no\n        association exists.  In fact, if no event is intended\n        for this channel, channelTurnOnEventIndex must be\n        set to zero, a non-existent event index.\n\n        This object may not be modified if the associated\n        channelStatus object is equal to valid(1).\"\n    ::= { channelEntry 5 }\n\nchannelTurnOffEventIndex OBJECT-TYPE\n    SYNTAX     Integer32 (0..65535)\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The value of this object identifies the event\n        that is configured to turn the associated\n        channelDataControl from on to off when the event is\n        generated.  The event identified by "..., 4096) = 4096
00:05:28 read(3, "mment describing this channel.\"\n    ::= { channelEntry 10 }\n\nchannelOwner OBJECT-TYPE\n    SYNTAX     OwnerString\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The entity that configured this entry and is therefore\n        using the resources assigned to it.\"\n    ::= { channelEntry 11 }\n\nchannelStatus OBJECT-TYPE\n    SYNTAX     EntryStatus\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The status of this channel entry.\"\n    ::= { channelEntry 12 }\n\n-- The Packet Capture Group\n\n-- Implementation of the Packet Capture group is optional. The Packet\n-- Capture Group requires implementation of the Filter Group.\n-- Consult the MODULE-COMPLIANCE macro for the authoritative\n-- conformance information for this MIB.\n--\n-- The Packet Capture group allows packets to be captured\n-- upon a filter match.  The bufferControlTable controls\n-- the captured packets output from a channel that is\n-- associated with it.  The captured packets are placed\n"..., 4096) = 4096
00:05:28 read(3, " as they arrive.  Otherwise,\n        if the status is full(2) and the\n        bufferControlFullAction object is lockWhenFull,\n        then the buffer has stopped collecting packets.\n\n        When this object is set to full(2) the probe must\n        not later set it to spaceAvailable(1) except in the\n        case of a significant gain in resources such as\n        an increase of bufferControlOctetsGranted.  In\n        particular, the wrap-mode action of deleting old\n        packets to make room for newly arrived packets\n        must not affect the value of this object.\"\n    ::= { bufferControlEntry 3 }\n\nbufferControlFullAction OBJECT-TYPE\n    SYNTAX     INTEGER {\n                 lockWhenFull(1),\n                 wrapWhenFull(2)    -- FIFO\n               }\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"Controls the action of the buffer when it\n        reaches the full status.  When in the lockWhenFull(1)\n        state and a packet is added to the buffer that\n "..., 4096) = 4096
00:05:28 read(3, "created or modified, the probe\n        should set bufferControlMaxOctetsGranted as closely\n        to this object as is possible for the particular probe\n        implementation and available resources.  However, if\n        the object has the special value of -1, the probe\n        must set bufferControlMaxOctetsGranted to -1.\"\n    DEFVAL { -1 }\n    ::= { bufferControlEntry 8 }\n\nbufferControlMaxOctetsGranted OBJECT-TYPE\n    SYNTAX     Integer32\n    UNITS      \"Octets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The maximum number of octets that can be\n        saved in this captureBuffer, including overhead.\n        If this variable is -1, the capture buffer will save\n        as many octets as possible.\n\n        When the bufferControlMaxOctetsRequested object is\n        created or modified, the probe should set this object\n        as closely to the requested value as is possible for the\n        particular probe implementation and available resources.\n        H"..., 4096) = 4096
00:05:28 read(3, "SEQUENCE {\n    captureBufferControlIndex   Integer32,\n    captureBufferIndex          Integer32,\n    captureBufferPacketID       Integer32,\n    captureBufferPacketData     OCTET STRING,\n    captureBufferPacketLength   Integer32,\n    captureBufferPacketTime     Integer32,\n    captureBufferPacketStatus   Integer32\n}\n\ncaptureBufferControlIndex OBJECT-TYPE\n    SYNTAX     Integer32 (1..65535)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The index of the bufferControlEntry with which\n        this packet is associated.\"\n    ::= { captureBufferEntry 1 }\n\ncaptureBufferIndex OBJECT-TYPE\n    SYNTAX     Integer32 (1..2147483647)\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"An index that uniquely identifies an entry\n        in the captureBuffer table associated with a\n        particular bufferControlEntry.  This index will\n        start at 1 and increase by one for each new packet\n        added with the same captureBufferControlIndex.\n\n       "..., 4096) = 4096
00:05:28 read(3, "ted that some packets were\n                     not processed correctly.\n                4    Packet's order in buffer is only approximate\n                     (May only be set for packets sent from\n                     the probe)\n\n        For example, an Ethernet fragment would have a\n        value of 6 (2^1 + 2^2).\n\n        As this MIB is expanded to new media types, this object\n        will have other media-specific errors defined.\"\n    ::= { captureBufferEntry 7 }\n\n-- The Event Group\n\n-- Implementation of the Event group is optional.\n-- Consult the MODULE-COMPLIANCE macro for the authoritative\n-- conformance information for this MIB.\n--\n-- The Event group controls the generation and notification\n-- of events from this device.  Each entry in the eventTable\n-- describes the parameters of the event that can be triggered.\n-- Each event entry is fired by an associated condition located\n-- elsewhere in the MIB.  An event entry may also be associated\n-- with a function elsewhere in the MI"..., 4096) = 4096
00:05:28 read(3, "  SYNTAX     TimeTicks\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"The value of sysUpTime at the time this event\n        entry last generated an event.  If this entry has\n        not generated any events, this value will be\n        zero.\"\n    ::= { eventEntry 5 }\n\neventOwner OBJECT-TYPE\n    SYNTAX     OwnerString\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The entity that configured this entry and is therefore\n        using the resources assigned to it.\n\n        If this object contains a string starting with 'monitor'\n        and has associated entries in the log table, all connected\n        management stations should retrieve those log entries,\n        as they may have significance to all management stations\n        connected to this device\"\n    ::= { eventEntry 6 }\n\neventStatus OBJECT-TYPE\n    SYNTAX     EntryStatus\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n        \"The status of this event entry.\n\n  "..., 4096) = 4096
00:05:28 read(3, "alarmValue, alarmFallingThreshold }\n    STATUS    current\n    DESCRIPTION\n        \"The SNMP trap that is generated when an alarm\n        entry crosses its falling threshold and generates\n        an event that is configured for sending SNMP\n        traps.\"\n    ::= { rmonEventsV2 2 }\n\n-- Conformance information\n\nrmonCompliances OBJECT IDENTIFIER ::= { rmonConformance 9 }\nrmonGroups      OBJECT IDENTIFIER ::= { rmonConformance 10 }\n\n-- Compliance Statements\nrmonCompliance MODULE-COMPLIANCE\n    STATUS current\n    DESCRIPTION\n        \"The requirements for conformance to the RMON MIB. At least\n        one of the groups in this module must be implemented to\n        conform to the RMON MIB. Implementations of this MIB\n        must also implement the system group of MIB-II [16] and the\n        IF-MIB [17].\"\n    MODULE -- this module\n\n      GROUP rmonEtherStatsGroup\n          DESCRIPTION\n              \"The RMON Ethernet Statistics Group is optional.\"\n\n      GROUP rmonHistoryControlGroup\n        "..., 4096) = 4096
00:05:28 read(3, "alarmVariable,\n            alarmSampleType, alarmValue, alarmStartupAlarm,\n            alarmRisingThreshold, alarmFallingThreshold,\n            alarmRisingEventIndex, alarmFallingEventIndex,\n            alarmOwner, alarmStatus\n        }\n        STATUS current\n        DESCRIPTION\n            \"The RMON Alarm Group.\"\n        ::= { rmonGroups 4 }\n\n    rmonHostGroup OBJECT-GROUP\n        OBJECTS {\n            hostControlIndex, hostControlDataSource,\n            hostControlTableSize, hostControlLastDeleteTime,\n            hostControlOwner, hostControlStatus,\n            hostAddress, hostCreationOrder, hostIndex,\n            hostInPkts, hostOutPkts, hostInOctets,\n            hostOutOctets, hostOutErrors, hostOutBroadcastPkts,\n            hostOutMulticastPkts, hostTimeAddress,\n            hostTimeCreationOrder, hostTimeIndex,\n            hostTimeInPkts, hostTimeOutPkts, hostTimeInOctets,\n            hostTimeOutOctets, hostTimeOutErrors,\n            hostTimeOutBroadcastPkts, hostTimeOutMulticast"..., 4096) = 4096
00:05:28 read(3, "       logDescription\n        }\n        STATUS current\n        DESCRIPTION\n            \"The RMON Event Group.\"\n        ::= { rmonGroups 10 }\n\n    rmonNotificationGroup NOTIFICATION-GROUP\n        NOTIFICATIONS { risingAlarm, fallingAlarm }\n        STATUS        current\n        DESCRIPTION\n            \"The RMON Notification Group.\"\n        ::= { rmonGroups 11 }\nEND\n", 4096) = 366
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/EtherLike-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267881, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=168, st_size=84492, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "EtherLike-MIB DEFINITIONS ::= BEGIN\n\n    IMPORTS\n        MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY,\n        Integer32, Counter32, Counter64, mib-2, transmission\n            FROM SNMPv2-SMI\n        MODULE-COMPLIANCE, OBJECT-GROUP\n            FROM SNMPv2-CONF\n        TruthValue\n            FROM SNMPv2-TC\n        ifIndex, InterfaceIndex\n            FROM IF-MIB;\n\n    etherMIB MODULE-IDENTITY\n        LAST-UPDATED \"200309190000Z\"  -- September 19, 2003\n        ORGANIZATION \"IETF Ethernet Interfaces and Hub MIB\n                     Working Group\"\n        CONTACT-INFO\n            \"WG E-mail: hubmib@ietf.org\n          To subscribe: hubmib-request@ietf.org\n\n                 Chair: Dan Romascanu\n                Postal: Avaya Inc.\n                        Atidum Technology Park, Bldg. 3\n                        Tel Aviv 61131\n                        Israel\n                   Tel: +972 3 645 8414\n                E-mail: dromasca@avaya.com\n\n               Editor: John Flick\n               Postal: "..., 4096) = 4096
00:05:28 read(3, "t groups\n\n                     In addition, the dot3Tests and dot3Errors\n                     object identities have been deprecated,\n                     since there is no longer a standard method\n                     for using them.\n\n                     This version published as RFC 3635.\"\n\n        REVISION    \"199908240400Z\"  -- August 24, 1999\n        DESCRIPTION \"Updated to include support for 1000 Mb/sec\n                     interfaces and full-duplex interfaces.\n                     This version published as RFC 2665.\"\n\n        REVISION    \"199806032150Z\"  -- June 3, 1998\n        DESCRIPTION \"Updated to include support for 100 Mb/sec\n                     interfaces.\n                     This version published as RFC 2358.\"\n\n        REVISION    \"199402030400Z\"  -- February 3, 1994\n        DESCRIPTION \"Initial version, published as RFC 1650.\"\n        ::= { mib-2 35 }\n\n    etherMIBObjects OBJECT IDENTIFIER ::= { etherMIB 1 }\n\n    dot3    OBJECT IDENTIFIER ::= { transmission 7 }\n\n "..., 4096) = 4096
00:05:28 read(3, "ltiple error conditions pertain are,\n                    according to the conventions of IEEE 802.3\n                    Layer Management, counted exclusively according\n\n                    to the error status presented to the LLC.\n\n                    This counter does not increment for group\n                    encoding schemes greater than 4 bits per group.\n\n                    For interfaces operating at 10 Gb/s, this\n                    counter can roll over in less than 5 minutes if\n                    it is incrementing at its maximum rate.  Since\n                    that amount of time could be less than a\n                    management station's poll cycle time, in order\n                    to avoid a loss of information, a management\n                    station is advised to poll the\n                    dot3HCStatsAlignmentErrors object for 10 Gb/s\n                    or faster interfaces.\n\n                    Discontinuities in the value of this counter can\n                  "..., 4096) = 4096
00:05:28 read(3, ".\n\n                    This counter does not increment when the\n                    interface is operating in full-duplex mode.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n                    system, and at other times as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.3,\n                    aSingleCollisionFrames.\"\n        ::= { dot3StatsEntry 4 }\n\n    dot3StatsMultipleCollisionFrames OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION \"A count of frames that are involved in more\n\n                    than one collision and are subsequently\n                    transmitted successfully.\n\n                    A frame that is counted by an instance of this\n                    object is also counted by the corresponding\n                    instance of either t"..., 4096) = 4096
00:05:28 read(3, "                detected on a particular interface later than\n                    one slotTime into the transmission of a packet.\n\n                    A (late) collision included in a count\n                    represented by an instance of this object is\n                    also considered as a (generic) collision for\n                    purposes of other collision-related\n                    statistics.\n\n                    This counter does not increment when the\n                    interface is operating in full-duplex mode.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n                    system, and at other times as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.10,\n                    aLateCollisions.\"\n        ::= { dot3StatsEntry 8 }\n\n    dot3StatsExcessiveCollisions OBJECT-TYPE\n        SYNTAX      Counter32\n      "..., 4096) = 4096
00:05:28 read(3, "        The count represented by an instance of this\n                    object is incremented at most once per\n                    transmission attempt, even if the carrier sense\n                    condition fluctuates during a transmission\n                    attempt.\n\n                    This counter does not increment when the\n                    interface is operating in full-duplex mode.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n                    system, and at other times as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.13,\n                    aCarrierSenseErrors.\"\n        ::= { dot3StatsEntry 11 }\n\n    -- { dot3StatsEntry 12 } is not assigned\n\n    dot3StatsFrameTooLongs OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION \"A count of frames "..., 4096) = 4096
00:05:28 read(3, "advised to poll the\n                    dot3HCStatsInternalMacReceiveErrors object for\n                    10 Gb/s or faster interfaces.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n                    system, and at other times as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.15,\n                    aFramesLostDueToIntMACRcvError.\"\n        ::= { dot3StatsEntry 16 }\n\n    dot3StatsEtherChipSet OBJECT-TYPE\n        SYNTAX      OBJECT IDENTIFIER\n        MAX-ACCESS  read-only\n        STATUS      deprecated\n        DESCRIPTION \"******** THIS OBJECT IS DEPRECATED ********\n\n                    This object contains an OBJECT IDENTIFIER\n                    which identifies the chipset used to\n                    realize the interface. Ethernet-like\n                    interfaces are typically built out of\n                    sever"..., 4096) = 4096
00:05:28 read(3, "ven if multiple symbol errors occur\n                    during the carrier event.  This count does\n                    not increment if a collision is present.\n\n                    This counter does not increment when the\n                    interface is operating at 10 Mb/s.\n\n                    For interfaces operating at 10 Gb/s, this\n                    counter can roll over in less than 5 minutes if\n                    it is incrementing at its maximum rate.  Since\n                    that amount of time could be less than a\n\n                    management station's poll cycle time, in order\n                    to avoid a loss of information, a management\n                    station is advised to poll the\n                    dot3HCStatsSymbolErrors object for 10 Gb/s\n                    or faster interfaces.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n                    system, and at other"..., 4096) = 4096
00:05:28 read(3, " of this group is optional; it is appropriate\n    -- for all systems which have the necessary metering\n\n    dot3CollTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF Dot3CollEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION \"A collection of collision histograms for a\n                    particular set of interfaces.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.30,\n                    aCollisionFrames.\"\n        ::= { dot3 5 }\n\n    dot3CollEntry OBJECT-TYPE\n        SYNTAX      Dot3CollEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION \"A cell in the histogram of per-frame\n                    collisions for a particular interface.  An\n\n                    instance of this object represents the\n                    frequency of individual MAC frames for which\n                    the transmission (successful or otherwise) on a\n                    particular interface is accompanied by a\n                    part"..., 4096) = 4096
00:05:28 read(3, "ndex }\n        ::= { dot3ControlTable 1 }\n\n    Dot3ControlEntry ::=\n        SEQUENCE {\n            dot3ControlFunctionsSupported       BITS,\n            dot3ControlInUnknownOpcodes         Counter32,\n            dot3HCControlInUnknownOpcodes       Counter64\n        }\n\n    dot3ControlFunctionsSupported OBJECT-TYPE\n        SYNTAX      BITS {\n                        pause(0)   -- 802.3 flow control\n                    }\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION \"A list of the possible MAC Control functions\n                    implemented for this interface.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.3.2,\n                    aMACControlFunctionsSupported.\"\n        ::= { dot3ControlEntry 1 }\n\n    dot3ControlInUnknownOpcodes OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION \"A count of MAC Control frames received on this\n                    interface that contain an opcode that is not"..., 4096) = 4096
00:05:28 read(3, "ION \"An entry in the table, containing information\n                    about the MAC Control PAUSE function on a single\n                    ethernet-like interface.\"\n        INDEX       { dot3StatsIndex }\n        ::= { dot3PauseTable 1 }\n\n    Dot3PauseEntry ::=\n\n        SEQUENCE {\n            dot3PauseAdminMode                  INTEGER,\n            dot3PauseOperMode                   INTEGER,\n            dot3InPauseFrames                   Counter32,\n            dot3OutPauseFrames                  Counter32,\n            dot3HCInPauseFrames                 Counter64,\n            dot3HCOutPauseFrames                Counter64\n        }\n\n    dot3PauseAdminMode OBJECT-TYPE\n        SYNTAX      INTEGER {\n                        disabled(1),\n                        enabledXmit(2),\n                        enabledRcv(3),\n                        enabledXmitAndRcv(4)\n                    }\n        MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION \"This object is used to configu"..., 4096) = 4096
00:05:28 read(3, " STATUS      current\n        DESCRIPTION \"A count of MAC Control frames received on this\n                    interface with an opcode indicating the PAUSE\n                    operation.\n\n                    This counter does not increment when the\n                    interface is operating in half-duplex mode.\n\n                    For interfaces operating at 10 Gb/s, this\n                    counter can roll over in less than 5 minutes if\n                    it is incrementing at its maximum rate.  Since\n                    that amount of time could be less than a\n                    management station's poll cycle time, in order\n                    to avoid a loss of information, a management\n                    station is advised to poll the\n                    dot3HCInPauseFrames object for 10 Gb/s or\n                    faster interfaces.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n          "..., 4096) = 4096
00:05:28 read(3, "3OutPauseFrames.  It should be used on\n                    interfaces operating at 10 Gb/s or faster.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n                    system, and at other times as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.4.2,\n                    aPAUSEMACCtrlFramesTransmitted.\"\n        ::= { dot3PauseEntry 6 }\n\n    dot3HCStatsTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF Dot3HCStatsEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION \"A table containing 64-bit versions of error\n                    counters from the dot3StatsTable.  The 32-bit\n                    versions of these counters may roll over quite\n                    quickly on higher speed ethernet interfaces.\n                    The counters that have 64-bit versions in this\n                    table "..., 4096) = 4096
00:05:28 read(3, " as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.7,\n                    aAlignmentErrors\"\n        ::= { dot3HCStatsEntry 1 }\n\n    dot3HCStatsFCSErrors OBJECT-TYPE\n        SYNTAX      Counter64\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION \"A count of frames received on a particular\n                    interface that are an integral number of octets\n                    in length but do not pass the FCS check.  This\n                    count does not include frames received with\n                    frame-too-long or frame-too-short error.\n\n                    The count represented by an instance of this\n                    object is incremented when the frameCheckError\n                    status is returned by the MAC service to the\n                    LLC (or other MAC user). Received frames for\n                    which multiple error conditions pertain are,\n                  "..., 4096) = 4096
00:05:28 read(3, "r other MAC user). Received frames for\n                    which multiple error conditions pertain are,\n                    according to the conventions of IEEE 802.3\n                    Layer Management, counted exclusively according\n                    to the error status presented to the LLC.\n\n                    This counter is a 64 bit version of\n                    dot3StatsFrameTooLongs.  It should be used on\n                    interfaces operating at 10 Gb/s or faster.\n\n                    Discontinuities in the value of this counter can\n\n                    occur at re-initialization of the management\n                    system, and at other times as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.25,\n                    aFrameTooLongErrors.\"\n        ::= { dot3HCStatsEntry 4 }\n\n    dot3HCStatsInternalMacReceiveErrors OBJECT-TYPE\n        SYNTAX      Counter64\n        MAX-ACCESS  read-only\n        STATU"..., 4096) = 4096
00:05:28 read(3, "urrence of an event\n                    that causes the PHY to indicate 'Receive Error'\n                    on the XGMII.\n\n                    The count represented by an instance of this\n                    object is incremented at most once per carrier\n                    event, even if multiple symbol errors occur\n                    during the carrier event.  This count does\n                    not increment if a collision is present.\n\n                    This counter is a 64 bit version of\n                    dot3StatsSymbolErrors.  It should be used on\n                    interfaces operating at 10 Gb/s or faster.\n\n                    Discontinuities in the value of this counter can\n                    occur at re-initialization of the management\n                    system, and at other times as indicated by the\n                    value of ifCounterDiscontinuityTime.\"\n        REFERENCE   \"[IEEE 802.3 Std.], 30.3.2.1.5,\n                    aSymbolErrorDuringCarrier.\"\n        ::= "..., 4096) = 4096
00:05:28 read(3, "e is no longer a standard mechanism for\n                    initiating an interface test.  This left no\n                    standard way of using this object identity.\"\n        ::= { dot3Tests 2 }\n\n    dot3ErrorInitError OBJECT-IDENTITY\n        STATUS      deprecated\n        DESCRIPTION \"******** THIS IDENTITY IS DEPRECATED *******\n\n                    Couldn't initialize MAC chip for test.\n\n                    This object identity has been deprecated, since\n                    the ifTestTable in the IF-MIB was deprecated,\n                    and there is no longer a standard mechanism for\n                    initiating an interface test.  This left no\n                    standard way of using this object identity.\"\n        ::= { dot3Errors 1 }\n\n    dot3ErrorLoopbackError OBJECT-IDENTITY\n        STATUS      deprecated\n        DESCRIPTION \"******** THIS IDENTITY IS DEPRECATED *******\n\n                    Expected data not received (or not received\n                    correctly) in loopb"..., 4096) = 4096
00:05:28 read(3, "hly recommended for all\n                        ethernet-like network interfaces.\"\n\n            GROUP       etherStatsLowSpeedGroup\n            DESCRIPTION \"This group is mandatory for all\n                        ethernet-like network interfaces which are\n                        capable of operating at 10 Mb/s or slower in\n                        half-duplex mode.\"\n\n            GROUP       etherStatsHighSpeedGroup\n            DESCRIPTION \"This group is mandatory for all\n                        ethernet-like network interfaces which are\n                        capable of operating at 100 Mb/s or faster.\"\n\n            GROUP       etherControlGroup\n            DESCRIPTION \"This group is mandatory for all\n                        ethernet-like network interfaces that\n                        support the MAC Control sublayer.\"\n\n            GROUP       etherControlPauseGroup\n            DESCRIPTION \"This group is mandatory for all\n                        ethernet-like network interfaces that\n "..., 4096) = 4096
00:05:28 read(3, "like\n                        network interfaces which are capable of\n                        operating at 1000 Mb/s or faster.\"\n\n            GROUP       etherControlGroup\n            DESCRIPTION \"This group is mandatory for all\n                        ethernet-like network interfaces that\n                        support the MAC Control sublayer.\"\n\n            GROUP       etherHCControlGroup\n            DESCRIPTION \"This group is mandatory for all\n                        ethernet-like network interfaces that\n                        support the MAC Control sublayer and are\n                        capable of operating at 10 Gb/s or faster.\"\n\n            GROUP       etherControlPauseGroup\n            DESCRIPTION \"This group is mandatory for all\n                        ethernet-like network interfaces that\n                        support the MAC Control PAUSE function.\"\n\n            GROUP       etherHCControlPauseGroup\n            DESCRIPTION \"This group is mandatory for all\n               "..., 4096) = 4096
00:05:28 read(3, "TED **********\n\n                    A collection of objects providing information\n                    applicable to 100 Mb/sec ethernet-like network\n                    interfaces.\n\n                    This object group has been deprecated and\n                    replaced by etherStatsBaseGroup and\n                    etherStatsHighSpeedGroup.\"\n        ::= { etherGroups 3 }\n\n    etherStatsBaseGroup OBJECT-GROUP\n        OBJECTS     { dot3StatsIndex,\n                      dot3StatsAlignmentErrors,\n                      dot3StatsFCSErrors,\n                      dot3StatsSingleCollisionFrames,\n                      dot3StatsMultipleCollisionFrames,\n                      dot3StatsDeferredTransmissions,\n                      dot3StatsLateCollisions,\n                      dot3StatsExcessiveCollisions,\n                      dot3StatsInternalMacTransmitErrors,\n                      dot3StatsCarrierSenseErrors,\n                      dot3StatsFrameTooLongs,\n                      dot3StatsInternal"..., 4096) = 4096
00:05:28 read(3, "\n        DESCRIPTION \"A collection of objects providing information\n                    applicable to all ethernet-like network\n                    interfaces.\"\n        ::= { etherGroups 10 }\n\n    etherStatsHalfDuplexGroup OBJECT-GROUP\n        OBJECTS     { dot3StatsSingleCollisionFrames,\n                      dot3StatsMultipleCollisionFrames,\n                      dot3StatsDeferredTransmissions,\n                      dot3StatsLateCollisions,\n                      dot3StatsExcessiveCollisions,\n                      dot3StatsCarrierSenseErrors\n                    }\n        STATUS      current\n        DESCRIPTION \"A collection of objects providing information\n                    applicable only to half-duplex ethernet-like\n                    network interfaces.\"\n        ::= { etherGroups 11 }\n\n    etherHCStatsGroup OBJECT-GROUP\n        OBJECTS     { dot3HCStatsAlignmentErrors,\n                      dot3HCStatsFCSErrors,\n                      dot3HCStatsInternalMacTransmitErrors,\n       "..., 4096) = 2572
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/LM-SENSORS-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267917, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5931, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "LM-SENSORS-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Derived from the original VEST-INTERNETT-MIB. Open issues:\n--\n-- (a) where to register this MIB?\n-- (b) use not-accessible for diskIOIndex?\n--\n\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32, Gauge32\n        FROM SNMPv2-SMI\n    DisplayString\n        FROM SNMPv2-TC\n    ucdExperimental\n        FROM UCD-SNMP-MIB;\n\nlmSensorsMIB MODULE-IDENTITY\n    LAST-UPDATED \"200011050000Z\"\n    ORGANIZATION \"AdamsNames Ltd\"\n    CONTACT-INFO    \n        \"Primary Contact: M J Oldfield\n         email:     m@mail.tc\"\n    DESCRIPTION\n        \"This MIB module defines objects for lm_sensor derived data.\"\n    REVISION     \"200011050000Z\"\n    DESCRIPTION\n        \"Derived from DISKIO-MIB ex UCD.\"\n    ::= { lmSensors 1 }\n\nlmSensors      OBJECT IDENTIFIER ::= { ucdExperimental 16 }\n\n--\n\nlmTempSensorsTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF LMTempSensorsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Table of temperature sens"..., 4096) = 4096
00:05:28 read(3, "   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Reference index for each observed device.\"\n    ::= { lmVoltSensorsEntry 1 }\n\nlmVoltSensorsDevice OBJECT-TYPE\n    SYNTAX      DisplayString\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The name of the device we are reading.\"\n    ::= { lmVoltSensorsEntry 2 }\n\nlmVoltSensorsValue OBJECT-TYPE\n    SYNTAX      Gauge32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The voltage in mV.\"\n    ::= { lmVoltSensorsEntry 3 }\n\n--\n\nlmMiscSensorsTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF LMMiscSensorsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Table of miscellaneous sensor devices and their values.\"\n    ::= { lmSensors 5 }\n\nlmMiscSensorsEntry OBJECT-TYPE\n    SYNTAX      LMMiscSensorsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"An entry containing a device and its statistics.\"\n    INDEX     "..., 4096) = 1835
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/IP-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267905, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=368, st_size=185667, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "IP-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    Integer32, Counter32, IpAddress,\n    mib-2, Unsigned32, Counter64,\n    zeroDotZero                        FROM SNMPv2-SMI\n    PhysAddress, TruthValue,\n    TimeStamp, RowPointer,\n    TEXTUAL-CONVENTION, TestAndIncr,\n    RowStatus, StorageType             FROM SNMPv2-TC\n    MODULE-COMPLIANCE, OBJECT-GROUP    FROM SNMPv2-CONF\n    InetAddress, InetAddressType,\n    InetAddressPrefixLength,\n    InetVersion, InetZoneIndex         FROM INET-ADDRESS-MIB\n    InterfaceIndex                     FROM IF-MIB;\n\nipMIB MODULE-IDENTITY\n    LAST-UPDATED \"200602020000Z\"\n    ORGANIZATION \"IETF IPv6 MIB Revision Team\"\n    CONTACT-INFO\n           \"Editor:\n\n            Shawn A. Routhier\n            Interworking Labs\n            108 Whispering Pines Dr. Suite 235\n            Scotts Valley, CA 95066\n            USA\n            EMail: <sar@iwl.com>\"\n    DESCRIPTION\n           \"The MIB module for managing IP and ICMP implementations, but\n"..., 4096) = 4096
00:05:28 read(3, "cation and\n            should only be used to determine the uniqueness of the\n            address.\n\n            The duplicate(7) state indicates the address has been\n            determined to be non-unique on the link and so must not be\n\n            used.\n\n            The optimistic(8) state indicates the address is available\n            for use, subject to restrictions, while its uniqueness on\n            a link is being verified.\n\n            In the absence of other information, an IPv4 address is\n            always preferred(1).\"\n    REFERENCE \"RFC 2462\"\n    SYNTAX     INTEGER {\n        preferred(1),\n        deprecated(2),\n        invalid(3),\n        inaccessible(4),\n        unknown(5),\n        tentative(6),\n        duplicate(7),\n        optimistic(8)\n    }\n\nIpAddressPrefixOriginTC ::= TEXTUAL-CONVENTION\n    STATUS     current\n    DESCRIPTION\n           \"The origin of this prefix.\n\n            manual(2) indicates a prefix that was manually configured.\n\n            wellknown(3) indic"..., 4096) = 4096
00:05:28 read(3, "ile they are awaiting reassembly at this entity.\"\n    ::= { ip 13 }\n\n--\n-- the IPv6 general group\n-- Some objects that affect all of IPv6\n--\n\nipv6IpForwarding OBJECT-TYPE\n    SYNTAX     INTEGER {\n                    forwarding(1),    -- acting as a router\n                    notForwarding(2)  -- NOT acting as a router\n               }\n    MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n           \"The indication of whether this entity is acting as an IPv6\n            router on any interface in respect to the forwarding of\n            datagrams received by, but not addressed to, this entity.\n            IPv6 routers forward datagrams.  IPv6 hosts do not (except\n            those source-routed via the host).\n\n            When this object is written, the entity SHOULD save the\n            change to non-volatile storage and restore the object from\n            non-volatile storage upon re-initialization of the system.\"\n    ::= { ip 25 }\n\nipv6IpDefaultHopLimit OBJECT-TYPE\n    SY"..., 4096) = 4096
00:05:28 read(3, " (up) or disabled\n            (down) on this interface.  This object does not affect the\n            state of the interface itself, only its connection to an\n            IPv4 stack.  The IF-MIB should be used to control the state\n            of the interface.\"\n    ::= { ipv4InterfaceEntry 3 }\n\nipv4InterfaceRetransmitTime OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS      \"milliseconds\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The time between retransmissions of ARP requests to a\n            neighbor when resolving the address or when probing the\n            reachability of a neighbor.\"\n    REFERENCE \"RFC 1122\"\n    DEFVAL { 1000 }\n    ::= { ipv4InterfaceEntry 4 }\n\n--\n-- v6 interface table\n--\n\nipv6InterfaceTableLastChange OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The value of sysUpTime on the most recent occasion at which\n            a row in the ipv6InterfaceTable was added or del"..., 4096) = 4096
00:05:28 read(3, "FC; however, as some companies\n-- may have shipped code based on earlier versions of the MIB, it\n-- seems best to reserve this OID.  This OID had been\n-- ipv6InterfacePhysicalAddress.\n-- ::= { ipv6InterfaceEntry 4}\n\nipv6InterfaceEnableStatus OBJECT-TYPE\n    SYNTAX     INTEGER {\n                 up(1),\n                 down(2)\n    }\n    MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n           \"The indication of whether IPv6 is enabled (up) or disabled\n            (down) on this interface.  This object does not affect the\n            state of the interface itself, only its connection to an\n            IPv6 stack.  The IF-MIB should be used to control the state\n            of the interface.\n\n            When this object is written, the entity SHOULD save the\n            change to non-volatile storage and restore the object from\n            non-volatile storage upon re-initialization of the system.\"\n    ::= { ipv6InterfaceEntry 5 }\n\nipv6InterfaceReachableTime OBJECT-TYPE\n   "..., 4096) = 4096
00:05:28 read(3, "ENCE OF IpSystemStatsEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The table containing system wide, IP version specific\n            traffic statistics.  This table and the ipIfStatsTable\n            contain similar objects whose difference is in their\n            granularity.  Where this table contains system wide traffic\n            statistics, the ipIfStatsTable contains the same statistics\n            but counted on a per-interface basis.\"\n    ::= { ipTrafficStats 1 }\n\nipSystemStatsEntry OBJECT-TYPE\n    SYNTAX     IpSystemStatsEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"A statistics entry containing system-wide objects for a\n            particular IP version.\"\n    INDEX { ipSystemStatsIPVersion }\n    ::= { ipSystemStatsTable 1 }\n\nIpSystemStatsEntry ::= SEQUENCE {\n        ipSystemStatsIPVersion           InetVersion,\n        ipSystemStatsInReceives          Counter32,\n        ipSystemStatsHCInReceive"..., 4096) = 4096
00:05:28 read(3, ":= { ipSystemStatsEntry 3 }\n\nipSystemStatsHCInReceives OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of input IP datagrams received, including\n            those received in error.  This object counts the same\n            datagrams as ipSystemStatsInReceives, but allows for larger\n            values.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 4 }\n\nipSystemStatsInOctets OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of octets received in input IP datagrams,\n            including those received in error.  Octets from datagrams\n            counted in ipSystemStatsInReceives MUST be counted here.\n\n            Dis"..., 4096) = 4096
00:05:28 read(3, "P datagrams received\n            successfully but discarded because of an unknown or\n            unsupported protocol.\n\n            When tracking interface statistics, the counter of the\n            interface to which these datagrams were addressed is\n            incremented.  This interface might not be the same as the\n            input interface for some of the datagrams.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 10 }\n\nipSystemStatsInTruncatedPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of input IP datagrams discarded because the\n            datagram frame didn't carry enough data.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of th"..., 4096) = 4096
00:05:28 read(3, " Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 15 }\n\nipSystemStatsReasmFails OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of failures detected by the IP re-assembly\n            algorithm (for whatever reason: timed out, errors, etc.).\n            Note that this is not necessarily a count of discarded IP\n            fragments since some algorithms (notably the algorithm in\n            RFC 815) can lose track of the number of fragments by\n            combining them as they are received.\n\n            When tracking interface statistics, the counter of the\n            interface to which these fragments were addressed is\n            incremented.  This interface might not be the same as the\n            input interfac"..., 4096) = 4096
00:05:28 read(3, "-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of IP datagrams that local IP user-\n            protocols (including ICMP) supplied to IP in requests for\n            transmission.  This object counts the same packets as\n            ipSystemStatsOutRequests, but allows for larger values.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 21 }\n\nipSystemStatsOutNoRoutes OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of locally generated IP datagrams discarded\n            because no route could be found to transmit them to their\n            destination.\n\n            Discontinuities in the value of this counter can occur at\n          "..., 4096) = 4096
00:05:28 read(3, "iscontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 26 }\n\nipSystemStatsOutFragOKs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of IP datagrams that have been successfully\n            fragmented.\n\n            When tracking interface statistics, the counter of the\n            outgoing interface is incremented for a successfully\n            fragmented datagram.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 27 }\n\nipSystemStatsOutFragFails OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS"..., 4096) = 4096
00:05:28 read(3, "an occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 32 }\n\nipSystemStatsHCOutOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of octets in IP datagrams delivered to the\n            lower layers for transmission.  This objects counts the same\n            octets as ipSystemStatsOutOctets, but allows for larger\n            values.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 33 }\n\nipSystemStatsInMcastPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of IP multicast "..., 4096) = 4096
00:05:28 read(3, "BJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of octets transmitted in IP multicast\n            datagrams.  Octets from datagrams counted in\n\n            ipSystemStatsOutMcastPkts MUST be counted here.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipSystemStatsDiscontinuityTime.\"\n    ::= { ipSystemStatsEntry 40 }\n\nipSystemStatsHCOutMcastOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of octets transmitted in IP multicast\n            datagrams.  This object counts the same octets as\n            ipSystemStatsOutMcastOctets, but allows for larger values.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the managemen"..., 4096) = 4096
00:05:28 read(3, "    ::= { ipSystemStatsEntry 47 }\n\nipIfStatsTableLastChange OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The value of sysUpTime on the most recent occasion at which\n            a row in the ipIfStatsTable was added or deleted.\n\n            If new objects are added to the ipIfStatsTable that require\n            the ipIfStatsTableLastChange to be updated when they are\n            modified, they must specify that requirement in their\n            description clause.\"\n    ::= { ipTrafficStats 2 }\n\nipIfStatsTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpIfStatsEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The table containing per-interface traffic statistics.  This\n            table and the ipSystemStatsTable contain similar objects\n            whose difference is in their granularity.  Where this table\n            contains per-interface statistics, the ipSystemStatsTable\n            "..., 4096) = 4096
00:05:28 read(3, "which this entry is applicable.  The interface identified by\n            a particular value of this index is the same interface as\n            identified by the same value of the IF-MIB's ifIndex.\"\n    ::= { ipIfStatsEntry 2 }\n\nipIfStatsInReceives OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of input IP datagrams received, including\n            those received in error.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 3 }\n\nipIfStatsHCInReceives OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of input IP datagrams received, including\n            those received in error.  This object counts the same\n            datagrams as "..., 4096) = 4096
00:05:28 read(3, "ers and therefore do not forward datagrams,\n            this counter includes datagrams discarded because the\n            destination address was not a local address.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 9 }\n\nipIfStatsInUnknownProtos OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of locally-addressed IP datagrams received\n            successfully but discarded because of an unknown or\n            unsupported protocol.\n\n            When tracking interface statistics, the counter of the\n            interface to which these datagrams were addressed is\n            incremented.  This interface might not be the same as the\n            input interface for some of the datagrams.\n\n            Discontinuitie"..., 4096) = 4096
00:05:28 read(3, "lue of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 14 }\n\nipIfStatsReasmOKs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of IP datagrams successfully reassembled.\n\n            When tracking interface statistics, the counter of the\n            interface to which these datagrams were addressed is\n            incremented.  This interface might not be the same as the\n            input interface for some of the datagrams.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 15 }\n\nipIfStatsReasmFails OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of failures detected by the IP re-assembly\n            algorithm (for whatev"..., 4096) = 4096
00:05:28 read(3, "MP) supplied to IP in requests for\n            transmission.  Note that this counter does not include any\n            datagrams counted in ipIfStatsOutForwDatagrams.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 20 }\n\nipIfStatsHCOutRequests OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of IP datagrams that local IP user-\n            protocols (including ICMP) supplied to IP in requests for\n            transmission.  This object counts the same packets as\n\n            ipIfStatsOutRequests, but allows for larger values.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value o"..., 4096) = 4096
00:05:28 read(3, "ntinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 26 }\n\nipIfStatsOutFragOKs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of IP datagrams that have been successfully\n            fragmented.\n\n            When tracking interface statistics, the counter of the\n\n            outgoing interface is incremented for a successfully\n            fragmented datagram.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 27 }\n\nipIfStatsOutFragFails OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTIO"..., 4096) = 4096
00:05:28 read(3, "         times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 32 }\n\nipIfStatsHCOutOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of octets in IP datagrams delivered to the\n            lower layers for transmission.  This objects counts the same\n            octets as ipIfStatsOutOctets, but allows for larger values.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 33 }\n\nipIfStatsInMcastPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of IP multicast datagrams received.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of t"..., 4096) = 4096
00:05:28 read(3, "ms counted in\n            ipIfStatsOutMcastPkts MUST be counted here.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 40 }\n\nipIfStatsHCOutMcastOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of octets transmitted in IP multicast\n            datagrams.  This object counts the same octets as\n            ipIfStatsOutMcastOctets, but allows for larger values.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ipIfStatsDiscontinuityTime.\"\n    ::= { ipIfStatsEntry 41 }\n\nipIfStatsInBcastPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    ST"..., 4096) = 4096
00:05:28 read(3, "s or set of IP addresses, and allows other tables to\n            share the information via pointer rather than by copying.\n\n            For example, when the node configures both a unicast and\n            anycast address for a prefix, the ipAddressPrefix objects\n            for those addresses will point to a single row in this\n            table.\n\n            This table primarily provides support for IPv6 prefixes, and\n            several of the objects are less meaningful for IPv4.  The\n            table continues to allow IPv4 addresses to allow future\n            flexibility.  In order to promote a common configuration,\n            this document includes suggestions for default values for\n            IPv4 prefixes.  Each of these values may be overridden if an\n            object is meaningful to the node.\n\n            All prefixes used by this entity should be included in this\n            table independent of how the entity learned the prefix.\n            (This table isn't limited t"..., 4096) = 4096
00:05:28 read(3, "US     current\n    DESCRIPTION\n           \"This object has the value 'true(1)', if this prefix can be\n            used for on-link determination; otherwise, the value is\n            'false(2)'.\n\n            The default for IPv4 prefixes is 'true(1)'.\"\n    REFERENCE \"For IPv6 RFC 2461, especially sections 2 and 4.6.2 and\n               RFC 2462\"\n    ::= { ipAddressPrefixEntry 6 }\n\nipAddressPrefixAutonomousFlag OBJECT-TYPE\n    SYNTAX     TruthValue\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"Autonomous address configuration flag.  When true(1),\n            indicates that this prefix can be used for autonomous\n            address configuration (i.e., can be used to form a local\n            interface address).  If false(2), it is not used to auto-\n            configure a local interface address.\n\n            The default for IPv4 prefixes is 'false(2)'.\"\n    REFERENCE \"For IPv6 RFC 2461, especially sections 2 and 4.6.2 and\n               RFC 2462\"\n    ::= { i"..., 4096) = 4096
00:05:28 read(3, " MIBs, such as RFC 3019.\n\n            While this table is writable, the user will note that\n            several objects, such as ipAddressOrigin, are not.  The\n            intention in allowing a user to write to this table is to\n            allow them to add or remove any entry that isn't\n\n            permanent.  The user should be allowed to modify objects\n            and entries when that would not cause inconsistencies\n            within the table.  Allowing write access to objects, such\n            as ipAddressOrigin, could allow a user to insert an entry\n            and then label it incorrectly.\n\n            Note well: When including IPv6 link-local addresses in this\n            table, the entry must use an InetAddressType of 'ipv6z' in\n            order to differentiate between the possible interfaces.\"\n    ::= { ip 34 }\n\nipAddressEntry OBJECT-TYPE\n    SYNTAX     IpAddressEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"An address mapping f"..., 4096) = 4096
00:05:28 read(3, "EFVAL { preferred }\n    ::= { ipAddressEntry 7 }\n\nipAddressCreated OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The value of sysUpTime at the time this entry was created.\n            If this entry was created prior to the last re-\n            initialization of the local network management subsystem,\n            then this object contains a zero value.\"\n    ::= { ipAddressEntry 8 }\n\nipAddressLastChanged OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The value of sysUpTime at the time this entry was last\n            updated.  If this entry was updated prior to the last re-\n            initialization of the local network management subsystem,\n            then this object contains a zero value.\"\n    ::= { ipAddressEntry 9 }\n\nipAddressRowStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n           \"Th"..., 4096) = 4096
00:05:28 read(3, "AddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The type of ipNetToPhysicalNetAddress.\"\n    ::= { ipNetToPhysicalEntry 2 }\n\nipNetToPhysicalNetAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The IP Address corresponding to the media-dependent\n            `physical' address.  The address type of this object is\n            specified in ipNetToPhysicalAddressType.\n\n            Implementors need to be aware that if the size of\n\n            ipNetToPhysicalNetAddress exceeds 115 octets, then OIDS of\n            instances of columns in this row will have more than 128\n            sub-identifiers and cannot be accessed using SNMPv1,\n            SNMPv2c, or SNMPv3.\"\n    ::= { ipNetToPhysicalEntry 3 }\n\nipNetToPhysicalPhysAddress OBJECT-TYPE\n    SYNTAX     PhysAddress (SIZE(0..65535))\n    MAX-ACCESS read-create\n    STATUS     curren"..., 4096) = 4096
00:05:28 read(3, "            invalid(5),   -- an invalidated mapping\n\n                     unknown(6),   -- state can not be determined\n                                   -- for some reason.\n\n                     incomplete(7) -- address resolution is being\n                                   -- performed.\n                    }\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The Neighbor Unreachability Detection state for the\n            interface when the address mapping in this entry is used.\n            If Neighbor Unreachability Detection is not in use (e.g. for\n            IPv4), this object is always unknown(6).\"\n    REFERENCE \"RFC 2461\"\n    ::= { ipNetToPhysicalEntry 7 }\n\nipNetToPhysicalRowStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n           \"The status of this conceptual row.\n\n            The RowStatus TC requires that this DESCRIPTION clause\n            states under which circumstances other objects "..., 4096) = 4096
00:05:28 read(3, "xEntry 3 }\n\nipv6ScopeZoneIndexAdminLocal OBJECT-TYPE\n    SYNTAX     InetZoneIndex\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The zone index for the admin-local scope on this interface.\"\n    ::= { ipv6ScopeZoneIndexEntry 4 }\n\nipv6ScopeZoneIndexSiteLocal OBJECT-TYPE\n    SYNTAX     InetZoneIndex\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The zone index for the site-local scope on this interface.\"\n    ::= { ipv6ScopeZoneIndexEntry 5 }\n\nipv6ScopeZoneIndex6 OBJECT-TYPE\n    SYNTAX     InetZoneIndex\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The zone index for scope 6 on this interface.\"\n    ::= { ipv6ScopeZoneIndexEntry 6 }\n\nipv6ScopeZoneIndex7 OBJECT-TYPE\n    SYNTAX     InetZoneIndex\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The zone index for scope 7 on this interface.\"\n    ::= { ipv6ScopeZoneIndexEntry 7 }\n\nipv6ScopeZoneIndexOrganizationLocal OBJECT-TYPE\n    "..., 4096) = 4096
00:05:28 read(3, " columns in this row will have more than 128\n            sub-identifiers and cannot be accessed using SNMPv1,\n            SNMPv2c, or SNMPv3.\"\n    ::= { ipDefaultRouterEntry 2 }\n\nipDefaultRouterIfIndex OBJECT-TYPE\n    SYNTAX     InterfaceIndex\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The index value that uniquely identifies the interface by\n            which the router can be reached.  The interface identified\n            by a particular value of this index is the same interface as\n            identified by the same value of the IF-MIB's ifIndex.\"\n    ::= { ipDefaultRouterEntry 3 }\n\nipDefaultRouterLifetime OBJECT-TYPE\n    SYNTAX     Unsigned32 (0..65535)\n    UNITS      \"seconds\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The remaining length of time, in seconds, that this router\n            will continue to be useful as a default router.  A value of\n            zero indicates that it is no longer useful as a defau"..., 4096) = 4096
00:05:28 read(3, "ex }\n    ::= { ipv6RouterAdvertTable 1 }\n\nIpv6RouterAdvertEntry ::= SEQUENCE {\n        ipv6RouterAdvertIfIndex          InterfaceIndex,\n        ipv6RouterAdvertSendAdverts      TruthValue,\n        ipv6RouterAdvertMaxInterval      Unsigned32,\n        ipv6RouterAdvertMinInterval      Unsigned32,\n        ipv6RouterAdvertManagedFlag      TruthValue,\n        ipv6RouterAdvertOtherConfigFlag  TruthValue,\n        ipv6RouterAdvertLinkMTU          Unsigned32,\n        ipv6RouterAdvertReachableTime    Unsigned32,\n        ipv6RouterAdvertRetransmitTime   Unsigned32,\n        ipv6RouterAdvertCurHopLimit      Unsigned32,\n        ipv6RouterAdvertDefaultLifetime  Unsigned32,\n        ipv6RouterAdvertRowStatus        RowStatus\n    }\n\nipv6RouterAdvertIfIndex OBJECT-TYPE\n    SYNTAX     InterfaceIndex\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The index value that uniquely identifies the interface on\n            which router advertisements constructed with this\n         "..., 4096) = 4096
00:05:28 read(3, "terface.\n\n            A value of zero in the router advertisement indicates that\n            the advertisement isn't specifying a value for reachable\n            time.\"\n    REFERENCE \"RFC 2461 Section 6.2.1\"\n    DEFVAL { 0 }\n    ::= { ipv6RouterAdvertEntry 8 }\n\nipv6RouterAdvertRetransmitTime OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS      \"milliseconds\"\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n           \"The value to be placed in the retransmit timer field in\n            router advertisements sent from this interface.\n\n            A value of zero in the router advertisement indicates that\n            the advertisement isn't specifying a value for retrans\n            time.\"\n    REFERENCE \"RFC 2461 Section 6.2.1\"\n    DEFVAL { 0 }\n    ::= { ipv6RouterAdvertEntry 9 }\n\nipv6RouterAdvertCurHopLimit OBJECT-TYPE\n    SYNTAX     Unsigned32 (0..255)\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n           \"The default value to be placed in the cur"..., 4096) = 4096
00:05:28 read(3, "MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The IP version of the statistics.\"\n    ::= { icmpStatsEntry 1 }\n\nicmpStatsInMsgs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of ICMP messages that the entity received.\n            Note that this counter includes all those counted by\n            icmpStatsInErrors.\"\n    ::= { icmpStatsEntry 2 }\n\nicmpStatsInErrors OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The number of ICMP messages that the entity received but\n            determined as having ICMP-specific errors (bad ICMP\n            checksums, bad length, etc.).\"\n    ::= { icmpStatsEntry 3 }\n\nicmpStatsOutMsgs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The total number of ICMP messages that the entity attempted\n            to send.  Note "..., 4096) = 4096
00:05:28 read(3, "RIPTION\n           \"The number of output packets for this AF and type.\"\n    ::= { icmpMsgStatsEntry 4 }\n--\n-- conformance information\n--\n\nipMIBConformance OBJECT IDENTIFIER ::= { ipMIB 2 }\n\nipMIBCompliances OBJECT IDENTIFIER ::= { ipMIBConformance 1 }\nipMIBGroups      OBJECT IDENTIFIER ::= { ipMIBConformance 2 }\n\n-- compliance statements\nipMIBCompliance2 MODULE-COMPLIANCE\n    STATUS     current\n    DESCRIPTION\n            \"The compliance statement for systems that implement IP -\n             either IPv4 or IPv6.\n\n            There are a number of INDEX objects that cannot be\n            represented in the form of OBJECT clauses in SMIv2, but\n            for which we have the following compliance requirements,\n            expressed in OBJECT clause form in this description\n            clause:\n\n            -- OBJECT        ipSystemStatsIPVersion\n            -- SYNTAX        InetVersion {ipv4(1), ipv6(2)}\n            -- DESCRIPTION\n            --     This MIB requires support for only IPv"..., 4096) = 4096
00:05:28 read(3, "            --\n            -- OBJECT        ipDefaultRouterAddress\n            -- SYNTAX        InetAddress (Size(4 | 8 | 16 | 20))\n            -- DESCRIPTION\n            --     This MIB requires support for only global and\n            --     non-global IPv4 and IPv6 addresses and so the size\n            --     can be 4, 8, 16, or 20 bytes.\"\n\n    MODULE -- this module\n\n    MANDATORY-GROUPS { ipSystemStatsGroup,   ipAddressGroup,\n                       ipNetToPhysicalGroup, ipDefaultRouterGroup,\n                       icmpStatsGroup }\n\n    GROUP ipSystemStatsHCOctetGroup\n    DESCRIPTION\n           \"This group is mandatory for systems that have an aggregate\n            bandwidth of greater than 20MB.  Including this group does\n            not allow an entity to neglect the 32 bit versions of these\n            objects.\"\n\n    GROUP ipSystemStatsHCPacketGroup\n    DESCRIPTION\n           \"This group is mandatory for systems that have an aggregate\n            bandwidth of greater than 650MB.  "..., 4096) = 4096
00:05:28 read(3, "ccess to this\n            object.\"\n\n    OBJECT     ipv6InterfaceEnableStatus\n    MIN-ACCESS read-only\n    DESCRIPTION\n           \"An agent is not required to provide write access to this\n            object.\"\n\n    OBJECT     ipv6InterfaceForwarding\n    MIN-ACCESS read-only\n    DESCRIPTION\n           \"An agent is not required to provide write access to this\n            object.\"\n\n    OBJECT     ipAddressSpinLock\n    MIN-ACCESS not-accessible\n    DESCRIPTION\n           \"An agent is not required to provide write access to this\n            object.  However, if an agent provides write access to any\n            of the other objects in the ipAddressGroup, it SHOULD\n            provide write access to this object as well.\"\n\n    OBJECT     ipAddressIfIndex\n    MIN-ACCESS read-only\n    DESCRIPTION\n           \"An agent is not required to provide write or create access\n            to this object.\"\n\n    OBJECT     ipAddressType\n    MIN-ACCESS read-only\n    DESCRIPTION\n           \"An agent is not requ"..., 4096) = 4096
00:05:28 read(3, "       object.\"\n\n    OBJECT     ipv6RouterAdvertDefaultLifetime\n    MIN-ACCESS read-only\n    DESCRIPTION\n           \"An agent is not required to provide write access to this\n            object.\"\n\n    OBJECT     ipv6RouterAdvertRowStatus\n    MIN-ACCESS read-only\n    DESCRIPTION\n           \"An agent is not required to provide write or create access\n            to this object.\"\n    ::= { ipMIBCompliances 2 }\n\n-- units of conformance\n\nipv4GeneralGroup OBJECT-GROUP\n    OBJECTS   { ipForwarding, ipDefaultTTL, ipReasmTimeout }\n    STATUS     current\n    DESCRIPTION\n           \"The group of IPv4-specific objects for basic management of\n            IPv4 entities.\"\n    ::= { ipMIBGroups 3 }\n\nipv4IfGroup OBJECT-GROUP\n    OBJECTS   { ipv4InterfaceReasmMaxSize, ipv4InterfaceEnableStatus,\n                ipv4InterfaceRetransmitTime }\n    STATUS     current\n    DESCRIPTION\n           \"The group of IPv4-specific objects for basic management of\n            IPv4 interfaces.\"\n    ::= { ipMIBGroups 4 }\n\ni"..., 4096) = 4096
00:05:28 read(3, "HCOutOctets,\n                ipSystemStatsHCInMcastOctets,\n                ipSystemStatsHCOutMcastOctets\n}\n    STATUS     current\n    DESCRIPTION\n           \"IP system wide statistics for systems that may overflow the\n            standard octet counters within 1 hour.\"\n    ::= { ipMIBGroups 10 }\n\nipSystemStatsHCPacketGroup OBJECT-GROUP\n    OBJECTS   { ipSystemStatsHCInReceives,\n                ipSystemStatsHCInForwDatagrams,\n                ipSystemStatsHCInDelivers,\n                ipSystemStatsHCOutRequests,\n                ipSystemStatsHCOutForwDatagrams,\n                ipSystemStatsHCOutTransmits,\n                ipSystemStatsHCInMcastPkts,\n                ipSystemStatsHCOutMcastPkts\n}\n    STATUS     current\n    DESCRIPTION\n           \"IP system wide statistics for systems that may overflow the\n            standard packet counters within 1 hour.\"\n    ::= { ipMIBGroups 11 }\n\nipv4SystemStatsHCPacketGroup OBJECT-GROUP\n    OBJECTS   { ipSystemStatsHCInBcastPkts,\n                ipSyst"..., 4096) = 4096
00:05:28 read(3, "        \"The group of objects for providing information about address\n            prefixes used by this node.\"\n    ::= { ipMIBGroups 18 }\n\nipAddressGroup OBJECT-GROUP\n    OBJECTS   { ipAddressSpinLock,  ipAddressIfIndex,\n                ipAddressType,      ipAddressPrefix,\n                ipAddressOrigin,    ipAddressStatus,\n                ipAddressCreated,   ipAddressLastChanged,\n                ipAddressRowStatus, ipAddressStorageType }\n    STATUS     current\n    DESCRIPTION\n           \"The group of objects for providing information about the\n            addresses relevant to this entity's interfaces.\"\n    ::= { ipMIBGroups 19 }\n\nipNetToPhysicalGroup OBJECT-GROUP\n    OBJECTS   { ipNetToPhysicalPhysAddress, ipNetToPhysicalLastUpdated,\n                ipNetToPhysicalType,        ipNetToPhysicalState,\n                ipNetToPhysicalRowStatus }\n    STATUS     current\n    DESCRIPTION\n           \"The group of objects for providing information about the\n            mappings of network addr"..., 4096) = 4096
00:05:28 read(3, "tsInHdrErrors.\"\n    ::= { ip 4 }\n\nipInAddrErrors OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The number of input datagrams discarded because the IPv4\n            address in their IPv4 header's destination field was not a\n            valid address to be received at this entity.  This count\n            includes invalid addresses (e.g., 0.0.0.0) and addresses of\n            unsupported Classes (e.g., Class E).  For entities which are\n            not IPv4 routers, and therefore do not forward datagrams,\n            this counter includes datagrams discarded because the\n            destination address was not a local address.\n\n            This object has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by\n            ipSystemStatsInAddrErrors.\"\n    ::= { ip 5 }\n\nipForwDatagrams OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n   "..., 4096) = 4096
00:05:28 read(3, ".g., for lack of\n            buffer space).  Note that this counter would include\n            datagrams counted in ipForwDatagrams if any such packets met\n            this (discretionary) discard criterion.\n\n            This object has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by\n            ipSystemStatsOutDiscards.\"\n    ::= { ip 11 }\n\nipOutNoRoutes OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The number of IPv4 datagrams discarded because no route\n            could be found to transmit them to their destination.  Note\n            that this counter includes any packets counted in\n            ipForwDatagrams which meet this `no-route' criterion.  Note\n            that this includes any datagrams which a host cannot route\n            because all of its default routers are down.\n\n            This object has been deprecated, as a new IP version-neutral\n\n     "..., 4096) = 4096
00:05:28 brk(0x1987000)                 = 0x1987000
00:05:28 read(3, "recated\n    DESCRIPTION\n           \"The number of routing entries which were chosen to be\n            discarded even though they are valid.  One possible reason\n            for discarding such an entry could be to free-up buffer\n            space for other routing entries.\n\n            This object was defined in pre-IPv6 versions of the IP MIB.\n            It was implicitly IPv4 only, but the original specifications\n            did not indicate this protocol restriction.  In order to\n            clarify the specifications, this object has been deprecated\n            and a similar, but more thoroughly clarified, object has\n            been added to the IP-FORWARD-MIB.\"\n    ::= { ip 23 }\n\n-- the deprecated IPv4 address table\n\nipAddrTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpAddrEntry\n    MAX-ACCESS not-accessible\n    STATUS     deprecated\n    DESCRIPTION\n           \"The table of addressing information relevant to this\n            entity's IPv4 addresses.\n\n            This table has b"..., 4096) = 4096
00:05:28 read(3, "mic method);\n-- if all interfaces are of this type, then the Address\n-- Translation table is empty, i.e., has zero entries.\n\nipNetToMediaTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpNetToMediaEntry\n    MAX-ACCESS not-accessible\n    STATUS     deprecated\n    DESCRIPTION\n           \"The IPv4 Address Translation table used for mapping from\n            IPv4 addresses to physical addresses.\n\n            This table has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by the\n            ipNetToPhysicalTable.\"\n    ::= { ip 22 }\n\nipNetToMediaEntry OBJECT-TYPE\n    SYNTAX     IpNetToMediaEntry\n    MAX-ACCESS not-accessible\n    STATUS     deprecated\n    DESCRIPTION\n           \"Each entry contains one IpAddress to `physical' address\n            equivalence.\"\n    INDEX       { ipNetToMediaIfIndex,\n                  ipNetToMediaNetAddress }\n    ::= { ipNetToMediaTable 1 }\n\nIpNetToMediaEntry ::= SEQUENCE {\n        ipNetToMediaIfIndex      INTEGER"..., 4096) = 4096
00:05:28 read(3, "        requirement is not used because this object was previously\n            defined.\"\n    ::= { ipNetToMediaEntry 4 }\n\n-- the deprecated ICMP group\n\nicmpInMsgs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The total number of ICMP messages which the entity received.\n            Note that this counter includes all those counted by\n            icmpInErrors.\n\n            This object has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by\n            icmpStatsInMsgs.\"\n    ::= { icmp 1 }\n\nicmpInErrors OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The number of ICMP messages which the entity received but\n            determined as having ICMP-specific errors (bad ICMP\n            checksums, bad length, etc.).\n\n            This object has been deprecated, as a new IP version-neutral\n            table"..., 4096) = 4096
00:05:28 read(3, "    table has been added.  It is loosely replaced by a column in\n            the icmpMsgStatsTable.\"\n    ::= { icmp 10 }\n\nicmpInTimestampReps OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The number of ICMP Timestamp Reply messages received.\n\n            This object has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by a column in\n            the icmpMsgStatsTable.\"\n    ::= { icmp 11 }\n\nicmpInAddrMasks OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The number of ICMP Address Mask Request messages received.\n\n            This object has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by a column in\n            the icmpMsgStatsTable.\"\n    ::= { icmp 12 }\n\nicmpInAddrMaskReps OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STAT"..., 4096) = 4096
00:05:28 read(3, "mpOutRedirects OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The number of ICMP Redirect messages sent.  For a host, this\n            object will always be zero, since hosts do not send\n            redirects.\n\n            This object has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by a column in\n            the icmpMsgStatsTable.\"\n    ::= { icmp 20 }\n\nicmpOutEchos OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The number of ICMP Echo (request) messages sent.\n\n            This object has been deprecated, as a new IP version-neutral\n            table has been added.  It is loosely replaced by a column in\n            the icmpMsgStatsTable.\"\n    ::= { icmp 21 }\n\nicmpOutEchoReps OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The"..., 4096) = 4096
00:05:28 read(3, "pNetToMediaNetAddress, ipNetToMediaType,\n                ipRoutingDiscards\n}\n    STATUS     deprecated\n    DESCRIPTION\n           \"The ip group of objects providing for basic management of IP\n            entities, exclusive of the management of IP routes.\n\n            As part of the version independence, this group has been\n            deprecated.  \"\n    ::= { ipMIBGroups 1 }\n\nicmpGroup OBJECT-GROUP\n    OBJECTS   { icmpInMsgs,          icmpInErrors,\n                icmpInDestUnreachs,  icmpInTimeExcds,\n                icmpInParmProbs,     icmpInSrcQuenchs,\n                icmpInRedirects,     icmpInEchos,\n                icmpInEchoReps,      icmpInTimestamps,\n                icmpInTimestampReps, icmpInAddrMasks,\n                icmpInAddrMaskReps,  icmpOutMsgs,\n                icmpOutErrors,       icmpOutDestUnreachs,\n                icmpOutTimeExcds,    icmpOutParmProbs,\n                icmpOutSrcQuenchs,   icmpOutRedirects,\n                icmpOutEchos,        icmpOutEchoReps,\n      "..., 4096) = 1347
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/RFC1213-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267943, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=160, st_size=79667, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "RFC1213-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n        mgmt, NetworkAddress, IpAddress, Counter, Gauge,\n                TimeTicks\n            FROM RFC1155-SMI\n        OBJECT-TYPE\n                FROM RFC-1212;\n\n--  This MIB module uses the extended OBJECT-TYPE macro as\n--  defined in [14];\n\n--  MIB-II (same prefix as MIB-I)\n\nmib-2      OBJECT IDENTIFIER ::= { mgmt 1 }\n\n-- textual conventions\n\nDisplayString ::=\n    OCTET STRING\n-- This data type is used to model textual information taken\n-- from the NVT ASCII character set.  By convention, objects\n-- with this syntax are declared as having\n\n--\n--      SIZE (0..255)\n\nPhysAddress ::=\n    OCTET STRING\n-- This data type is used to model media addresses.  For many\n-- types of media, this will be in a binary representation.\n-- For example, an ethernet address would be represented as\n-- a string of 6 octets.\n\n-- groups in MIB-II\n\nsystem       OBJECT IDENTIFIER ::= { mib-2 1 }\n\ninterfaces   OBJECT IDENTIFIER ::= { mib-2 2 }\n\nat           OBJECT IDE"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/RFC1155-SMI.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267941, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3067, st_atime=2017/03/22-11:45:21, st_mtime=2017/03/22-11:45:21, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "RFC1155-SMI DEFINITIONS ::= BEGIN\n\nEXPORTS -- EVERYTHING\n        internet, directory, mgmt,\n        experimental, private, enterprises,\n        OBJECT-TYPE, ObjectName, ObjectSyntax, SimpleSyntax,\n        ApplicationSyntax, NetworkAddress, IpAddress,\n        Counter, Gauge, TimeTicks, Opaque;\n\n -- the path to the root\n\n internet      OBJECT IDENTIFIER ::= { iso org(3) dod(6) 1 }\n\n directory     OBJECT IDENTIFIER ::= { internet 1 }\n\n mgmt          OBJECT IDENTIFIER ::= { internet 2 }\n\n experimental  OBJECT IDENTIFIER ::= { internet 3 }\n\n private       OBJECT IDENTIFIER ::= { internet 4 }\n enterprises   OBJECT IDENTIFIER ::= { private 1 }\n\n -- definition of object types\n\n OBJECT-TYPE MACRO ::=\n BEGIN\n     TYPE NOTATION ::= \"SYNTAX\" type (TYPE ObjectSyntax)\n                       \"ACCESS\" Access\n                       \"STATUS\" Status\n     VALUE NOTATION ::= value (VALUE ObjectName)\n\n     Access ::= \"read-only\"\n                     | \"read-write\"\n                     | \"write-only\"\n       "..., 4096) = 3067
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "alue which indicates the set of services that\n            this entity primarily offers.\n\n            The value is a sum.  This sum initially takes the\n            value zero, Then, for each layer, L, in the range\n            1 through 7, that this node performs transactions\n            for, 2 raised to (L - 1) is added to the sum.  For\n            example, a node which performs primarily routing\n            functions would have a value of 4 (2^(3-1)).  In\n            contrast, a node which is a host offering\n            application services would have a value of 72\n            (2^(4-1) + 2^(7-1)).  Note that in the context of\n            the Internet suite of protocols, values should be\n            calculated accordingly:\n\n                 layer  functionality\n                     1  physical (e.g., repeaters)\n                     2  datalink/subnetwork (e.g., bridges)\n                     3  internet (e.g., IP gateways)\n                     4  end-to-end  (e.g., IP hosts)\n            "..., 4096) = 4096
00:05:28 read(3, "ion\n            of the hardware interface.\"\n    ::= { ifEntry 2 }\n\nifType OBJECT-TYPE\n    SYNTAX  INTEGER {\n                other(1),          -- none of the following\n                regular1822(2),\n                hdh1822(3),\n                ddn-x25(4),\n                rfc877-x25(5),\n                ethernet-csmacd(6),\n                iso88023-csmacd(7),\n                iso88024-tokenBus(8),\n                iso88025-tokenRing(9),\n                iso88026-man(10),\n                starLan(11),\n                proteon-10Mbit(12),\n                proteon-80Mbit(13),\n                hyperchannel(14),\n                fddi(15),\n                lapb(16),\n                sdlc(17),\n                ds1(18),           -- T-1\n                e1(19),            -- european equiv. of T-1\n                basicISDN(20),\n                primaryISDN(21),   -- proprietary serial\n                propPointToPointSerial(22),\n                ppp(23),\n                softwareLoopback(24),\n                eon"..., 4096) = 4096
00:05:28 read(3, "l network management\n            subsystem, then this object contains a zero\n            value.\"\n    ::= { ifEntry 9 }\n\nifInOctets OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of octets received on the\n            interface, including framing characters.\"\n    ::= { ifEntry 10 }\n\nifInUcastPkts OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of subnetwork-unicast packets\n            delivered to a higher-layer protocol.\"\n    ::= { ifEntry 11 }\n\nifInNUcastPkts OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of non-unicast (i.e., subnetwork-\n            broadcast or subnetwork-multicast) packets\n            delivered to a higher-layer protocol.\"\n    ::= { ifEntry 12 }\n\nifInDiscards OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n        "..., 4096) = 4096
00:05:28 read(3, "lue of this\n            object refers to a document defining objects\n            specific to ethernet.  If this information is not\n            present, its value should be set to the OBJECT\n            IDENTIFIER { 0 0 }, which is a syntatically valid\n            object identifier, and any conformant\n            implementation of ASN.1 and BER must be able to\n            generate and recognize this value.\"\n    ::= { ifEntry 22 }\n\n-- the Address Translation group\n\n-- Implementation of the Address Translation group is\n-- mandatory for all systems.  Note however that this group\n-- is deprecated by MIB-II. That is, it is being included\n\n-- solely for compatibility with MIB-I nodes, and will most\n-- likely be excluded from MIB-III nodes.  From MIB-II and\n-- onwards, each network protocol group contains its own\n-- address translation tables.\n\n-- The Address Translation group contains one table which is\n-- the union across all interfaces of the translation tables\n-- for converting a NetworkAd"..., 4096) = 4096
00:05:28 read(3, "   ::= { atEntry 3 }\n\n-- the IP group\n\n-- Implementation of the IP group is mandatory for all\n-- systems.\n\nipForwarding OBJECT-TYPE\n    SYNTAX  INTEGER {\n                forwarding(1),    -- acting as a gateway\n                not-forwarding(2) -- NOT acting as a gateway\n            }\n    ACCESS  read-write\n    STATUS  mandatory\n    DESCRIPTION\n            \"The indication of whether this entity is acting\n            as an IP gateway in respect to the forwarding of\n            datagrams received by, but not addressed to, this\n            entity.  IP gateways forward datagrams.  IP hosts\n            do not (except those source-routed via the host).\n\n            Note that for some managed nodes, this object may\n            take on only a subset of the values possible.\n            Accordingly, it is appropriate for an agent to\n            return a `badValue' response if a management\n            station attempts to change this object to an\n            inappropriate value.\"\n    ::= { ip 1 }\n"..., 4096) = 4096
00:05:28 read(3, "nter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of input datagrams successfully\n            delivered to IP user-protocols (including ICMP).\"\n    ::= { ip 9 }\n\nipOutRequests OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of IP datagrams which local IP\n            user-protocols (including ICMP) supplied to IP in\n            requests for transmission.  Note that this counter\n            does not include any datagrams counted in\n            ipForwDatagrams.\"\n    ::= { ip 10 }\n\nipOutDiscards OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of output IP datagrams for which no\n\n            problem was encountered to prevent their\n            transmission to their destination, but which were\n            discarded (e.g., for lack of buffer space).  Note\n            that this counter would include datagrams "..., 4096) = 4096
00:05:28 read(3, "::= { ip 20 }\n\nipAddrEntry OBJECT-TYPE\n    SYNTAX  IpAddrEntry\n    ACCESS  not-accessible\n    STATUS  mandatory\n    DESCRIPTION\n            \"The addressing information for one of this\n            entity's IP addresses.\"\n    INDEX   { ipAdEntAddr }\n    ::= { ipAddrTable 1 }\n\nIpAddrEntry ::=\n    SEQUENCE {\n        ipAdEntAddr\n            IpAddress,\n        ipAdEntIfIndex\n            INTEGER,\n        ipAdEntNetMask\n            IpAddress,\n        ipAdEntBcastAddr\n            INTEGER,\n        ipAdEntReasmMaxSize\n            INTEGER (0..65535)\n    }\n\nipAdEntAddr OBJECT-TYPE\n    SYNTAX  IpAddress\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The IP address to which this entry's addressing\n            information pertains.\"\n    ::= { ipAddrEntry 1 }\n\nipAdEntIfIndex OBJECT-TYPE\n    SYNTAX  INTEGER\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The index value which uniquely identifies the\n            interface to which this entry is applicabl"..., 4096) = 4096
00:05:28 read(3, "       management protocol in use.\"\n    ::= { ipRouteEntry 1 }\n\nipRouteIfIndex OBJECT-TYPE\n    SYNTAX  INTEGER\n    ACCESS  read-write\n    STATUS  mandatory\n    DESCRIPTION\n            \"The index value which uniquely identifies the\n            local interface through which the next hop of this\n            route should be reached.  The interface identified\n            by a particular value of this index is the same\n            interface as identified by the same value of\n            ifIndex.\"\n    ::= { ipRouteEntry 2 }\n\nipRouteMetric1 OBJECT-TYPE\n    SYNTAX  INTEGER\n    ACCESS  read-write\n    STATUS  mandatory\n    DESCRIPTION\n            \"The primary routing metric for this route.  The\n            semantics of this metric are determined by the\n            routing-protocol specified in the route's\n            ipRouteProto value.  If this metric is not used,\n            its value should be set to -1.\"\n    ::= { ipRouteEntry 3 }\n\nipRouteMetric2 OBJECT-TYPE\n    SYNTAX  INTEGER\n    ACCESS  re"..., 4096) = 4096
00:05:28 read(3, "     other(1),       -- none of the following\n\n                                -- non-protocol information,\n                                -- e.g., manually configured\n                local(2),       -- entries\n\n                                -- set via a network\n                netmgmt(3),     -- management protocol\n\n                                -- obtained via ICMP,\n                icmp(4),        -- e.g., Redirect\n\n                                -- the remaining values are\n                                -- all gateway routing\n                                -- protocols\n                egp(5),\n                ggp(6),\n                hello(7),\n                rip(8),\n                is-is(9),\n                es-is(10),\n                ciscoIgrp(11),\n                bbnSpfIgp(12),\n                ospf(13),\n                bgp(14)\n            }\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The routing mechanism via which this route was\n            lear"..., 4096) = 4096
00:05:28 read(3, "BJECT-TYPE\n    SYNTAX  SEQUENCE OF IpNetToMediaEntry\n    ACCESS  not-accessible\n    STATUS  mandatory\n    DESCRIPTION\n            \"The IP Address Translation table used for mapping\n            from IP addresses to physical addresses.\"\n    ::= { ip 22 }\n\nipNetToMediaEntry OBJECT-TYPE\n    SYNTAX  IpNetToMediaEntry\n    ACCESS  not-accessible\n    STATUS  mandatory\n    DESCRIPTION\n            \"Each entry contains one IpAddress to `physical'\n            address equivalence.\"\n    INDEX   { ipNetToMediaIfIndex,\n              ipNetToMediaNetAddress }\n    ::= { ipNetToMediaTable 1 }\n\nIpNetToMediaEntry ::=\n    SEQUENCE {\n        ipNetToMediaIfIndex\n            INTEGER,\n        ipNetToMediaPhysAddress\n            PhysAddress,\n        ipNetToMediaNetAddress\n            IpAddress,\n        ipNetToMediaType\n            INTEGER\n    }\n\nipNetToMediaIfIndex OBJECT-TYPE\n    SYNTAX  INTEGER\n    ACCESS  read-write\n    STATUS  mandatory\n    DESCRIPTION\n            \"The interface on which this entry's equivale"..., 4096) = 4096
00:05:28 read(3, "ages received.\"\n    ::= { icmp 3 }\n\nicmpInTimeExcds OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Time Exceeded messages\n            received.\"\n    ::= { icmp 4 }\n\nicmpInParmProbs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Parameter Problem messages\n            received.\"\n    ::= { icmp 5 }\n\nicmpInSrcQuenchs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Source Quench messages\n            received.\"\n    ::= { icmp 6 }\n\nicmpInRedirects OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Redirect messages received.\"\n    ::= { icmp 7 }\n\nicmpInEchos OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Echo (request) m"..., 4096) = 4096
00:05:28 read(3, "s OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Echo (request) messages sent.\"\n    ::= { icmp 21 }\n\nicmpOutEchoReps OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Echo Reply messages sent.\"\n    ::= { icmp 22 }\n\nicmpOutTimestamps OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Timestamp (request) messages\n            sent.\"\n    ::= { icmp 23 }\n\nicmpOutTimestampReps OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Timestamp Reply messages\n            sent.\"\n    ::= { icmp 24 }\n\nicmpOutAddrMasks OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of ICMP Address Mask Request messages\n            sent.\"\n    ::= { icmp 25 }\n\nic"..., 4096) = 4096
00:05:28 read(3, "TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of times TCP connections have made a\n            direct transition to the CLOSED state from either\n            the SYN-SENT state or the SYN-RCVD state, plus the\n            number of times TCP connections have made a direct\n            transition to the LISTEN state from the SYN-RCVD\n            state.\"\n    ::= { tcp 7 }\n\ntcpEstabResets OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of times TCP connections have made a\n            direct transition to the CLOSED state from either\n            the ESTABLISHED state or the CLOSE-WAIT state.\"\n    ::= { tcp 8 }\n\ntcpCurrEstab OBJECT-TYPE\n    SYNTAX  Gauge\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of TCP connections for which the\n            current state is either ESTABLISHED or CLOSE-\n            WAIT.\"\n    ::= { tcp 9 }\n\nt"..., 4096) = 4096
00:05:28 read(3, "793) of the\n            corresponding connection on the managed node,\n            resulting in immediate termination of the\n            connection.\n\n            As an implementation-specific option, a RST\n\n            segment may be sent from the managed node to the\n            other TCP endpoint (note however that RST segments\n            are not sent reliably).\"\n    ::= { tcpConnEntry 1 }\n\ntcpConnLocalAddress OBJECT-TYPE\n    SYNTAX  IpAddress\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The local IP address for this TCP connection.  In\n            the case of a connection in the listen state which\n            is willing to accept connections for any IP\n            interface associated with the node, the value\n            0.0.0.0 is used.\"\n    ::= { tcpConnEntry 2 }\n\ntcpConnLocalPort OBJECT-TYPE\n    SYNTAX  INTEGER (0..65535)\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The local port number for this TCP connection.\"\n    ::= { tc"..., 4096) = 4096
00:05:28 read(3, "{ udpEntry 1 }\n\nudpLocalPort OBJECT-TYPE\n    SYNTAX  INTEGER (0..65535)\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The local port number for this UDP listener.\"\n    ::= { udpEntry 2 }\n\n-- the EGP group\n\n-- Implementation of the EGP group is mandatory for all\n-- systems which implement the EGP.\n\negpInMsgs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of EGP messages received without\n            error.\"\n    ::= { egp 1 }\n\negpInErrors OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of EGP messages received that proved\n            to be in error.\"\n    ::= { egp 2 }\n\negpOutMsgs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of locally generated EGP\n            messages.\"\n    ::= { egp 3 }\n\negpOutErrors OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-o"..., 4096) = 4096
00:05:28 read(3, "YNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of locally generated EGP messages to\n            this EGP peer.\"\n    ::= { egpNeighEntry 6 }\n\negpNeighOutErrs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of locally generated EGP messages not\n            sent to this EGP peer due to resource limitations\n            within an EGP entity.\"\n    ::= { egpNeighEntry 7 }\n\negpNeighInErrMsgs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of EGP-defined error messages received\n            from this EGP peer.\"\n    ::= { egpNeighEntry 8 }\n\negpNeighOutErrMsgs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The number of EGP-defined error messages sent to\n            this EGP peer.\"\n    ::= { egpNeighEntry 9 }\n\negpNeighStateUps OBJECT-TYPE\n    SYNTAX  Count"..., 4096) = 4096
00:05:28 read(3, "he Internet standardization process, the\n-- definitions are accordingly elevated and a new object\n-- identifier, under the transmission group is defined. By\n-- convention, the name assigned is:\n--\n--     type OBJECT IDENTIFIER    ::= { transmission number }\n--\n-- where \"type\" is the symbolic value used for the media in\n-- the ifType column of the ifTable object, and \"number\" is\n-- the actual integer value corresponding to the symbol.\n\n-- the SNMP group\n\n-- Implementation of the SNMP group is mandatory for all\n-- systems which support an SNMP protocol entity.  Some of\n-- the objects defined below will be zero-valued in those\n-- SNMP implementations that are optimized to support only\n-- those functions specific to either a management agent or\n-- a management station.  In particular, it should be\n-- observed that the objects below refer to an SNMP entity,\n-- and there may be several SNMP entities residing on a\n-- managed node (e.g., if the node is hosting acting as\n-- a management station"..., 4096) = 4096
00:05:28 read(3, "protocol error to generate an SNMP PDU which\n            contains the value `readOnly' in the error-status\n            field, as such this object is provided as a means\n            of detecting incorrect implementations of the\n\n            SNMP.\"\n    ::= { snmp 11 }\n\nsnmpInGenErrs OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of SNMP PDUs which were\n            delivered to the SNMP protocol entity and for\n            which the value of the error-status field is\n            `genErr'.\"\n    ::= { snmp 12 }\n\nsnmpInTotalReqVars OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of MIB objects which have been\n            retrieved successfully by the SNMP protocol entity\n            as the result of receiving valid SNMP Get-Request\n            and Get-Next PDUs.\"\n    ::= { snmp 13 }\n\nsnmpInTotalSetVars OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  "..., 4096) = 4096
00:05:28 read(3, "l number of SNMP Get-Request PDUs which\n            have been generated by the SNMP protocol entity.\"\n    ::= { snmp 25 }\n\nsnmpOutGetNexts OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of SNMP Get-Next PDUs which have\n            been generated by the SNMP protocol entity.\"\n    ::= { snmp 26 }\n\nsnmpOutSetRequests OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of SNMP Set-Request PDUs which\n            have been generated by the SNMP protocol entity.\"\n    ::= { snmp 27 }\n\nsnmpOutGetResponses OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n            \"The total number of SNMP Get-Response PDUs which\n            have been generated by the SNMP protocol entity.\"\n    ::= { snmp 28 }\n\nsnmpOutTraps OBJECT-TYPE\n    SYNTAX  Counter\n    ACCESS  read-only\n    STATUS  mandatory\n    DESCRIPTION\n           "..., 4096) = 1843
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/NOTIFICATION-LOG-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267937, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=24694, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "NOTIFICATION-LOG-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    Integer32, Unsigned32,\n    TimeTicks, Counter32, Counter64,\n    IpAddress, Opaque, mib-2       FROM SNMPv2-SMI\n    TimeStamp, DateAndTime,\n    StorageType, RowStatus,\n    TAddress, TDomain              FROM SNMPv2-TC\n    SnmpAdminString, SnmpEngineID  FROM SNMP-FRAMEWORK-MIB\n    MODULE-COMPLIANCE, OBJECT-GROUP     FROM SNMPv2-CONF;\n\nnotificationLogMIB MODULE-IDENTITY\n    LAST-UPDATED \"200011270000Z\"            -- 27 November 2000\n    ORGANIZATION \"IETF Distributed Management Working Group\"\n    CONTACT-INFO \"Ramanathan Kavasseri\n                  Cisco Systems, Inc.\n                  170 West Tasman Drive,\n                  San Jose CA 95134-1706.\n                  Phone: +1 408 527 2446\n                  Email: ramk@cisco.com\"\n    DESCRIPTION\n     \"The MIB module for logging SNMP Notifications, that is, Traps\n\n     and Informs.\"\n-- Revision History\n\n       REVISION     \"200011270000Z\"            -"..., 4096) = 4096
00:05:28 read(3, "ed32,\n    nlmConfigLogAdminStatus   INTEGER,\n    nlmConfigLogOperStatus    INTEGER,\n    nlmConfigLogStorageType   StorageType,\n    nlmConfigLogEntryStatus   RowStatus\n    }\n\nnlmLogName OBJECT-TYPE\n    SYNTAX     SnmpAdminString (SIZE(0..32))\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n     \"The name of the log.\n\n     An implementation may allow multiple named logs, up to some\n     implementation-specific limit (which may be none).  A\n     zero-length log name is reserved for creation and deletion by\n     the managed system, and MUST be used as the default log name by\n     systems that do not support named logs.\"\n    ::= { nlmConfigLogEntry 1 }\n\nnlmConfigLogFilterName OBJECT-TYPE\n    SYNTAX     SnmpAdminString (SIZE(0..32))\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n     \"A value of snmpNotifyFilterProfileName as used as an index\n     into the snmpNotifyFilterTable in the SNMP Notification MIB,\n     specifying the locally or remotely origi"..., 4096) = 4096
00:05:28 read(3, " of Notifications put into the nlmLogTable.  This\n     counts a Notification once for each log entry, so a Notification\n      put into multiple logs is counted multiple times.\"\n    ::= { nlmStats 1 }\n\nnlmStatsGlobalNotificationsBumped OBJECT-TYPE\n    SYNTAX      Counter32\n    UNITS       \"notifications\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n     \"The number of log entries discarded to make room for a new entry\n     due to lack of resources or the value of nlmConfigGlobalEntryLimit\n     or nlmConfigLogEntryLimit.  This does not include entries discarded\n     due to the value of nlmConfigGlobalAgeOut.\"\n    ::= { nlmStats 2 }\n\n--\n-- Log Statistics Table\n--\n\nnlmStatsLogTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF NlmStatsLogEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n     \"A table of Notification log statistics entries.\"\n    ::= { nlmStats 3 }\n\nnlmStatsLogEntry OBJECT-TYPE\n    SYNTAX      NlmStatsLogEntry\n    MAX-ACCESS  not-acc"..., 4096) = 4096
00:05:28 read(3, "      DateAndTime,\n    nlmLogEngineID             SnmpEngineID,\n    nlmLogEngineTAddress       TAddress,\n    nlmLogEngineTDomain        TDomain,\n    nlmLogContextEngineID      SnmpEngineID,\n    nlmLogContextName          SnmpAdminString,\n    nlmLogNotificationID       OBJECT IDENTIFIER\n}\n\nnlmLogIndex OBJECT-TYPE\n    SYNTAX     Unsigned32 (1..4294967295)\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n     \"A monotonically increasing integer for the sole purpose of\n     indexing entries within the named log.  When it reaches the\n     maximum value, an extremely unlikely event, the agent wraps the\n     value back to 1.\"\n    ::= { nlmLogEntry 1 }\n\nnlmLogTime OBJECT-TYPE\n    SYNTAX      TimeStamp\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n     \"The value of sysUpTime when the entry was placed in the log. If\n     the entry occurred before the most recent management system\n     initialization this object value MUST be set to zero.\"\n    ::= { nlmLog"..., 4096) = 4096
00:05:28 read(3, "mLogVariableEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n     \"A table of variables to go with Notification log entries.\"\n    ::= { nlmLog 2 }\n\nnlmLogVariableEntry OBJECT-TYPE\n    SYNTAX      NlmLogVariableEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n     \"A Notification log entry variable.\n\n     Entries appear in this table when there are variables in\n     the varbind list of a Notification in nlmLogTable.\"\n    INDEX       { nlmLogName, nlmLogIndex, nlmLogVariableIndex }\n    ::= { nlmLogVariableTable 1 }\n\nNlmLogVariableEntry ::= SEQUENCE {\n\n    nlmLogVariableIndex              Unsigned32,\n    nlmLogVariableID                 OBJECT IDENTIFIER,\n    nlmLogVariableValueType          INTEGER,\n    nlmLogVariableCounter32Val       Counter32,\n    nlmLogVariableUnsigned32Val      Unsigned32,\n    nlmLogVariableTimeTicksVal       TimeTicks,\n    nlmLogVariableInteger32Val       Integer32,\n    nlmLogVariableOctetStringVal     OCTET S"..., 4096) = 4096
00:05:28 read(3, "pe is 'objectId'.\"\n    ::= { nlmLogVariableEntry 10 }\n\nnlmLogVariableCounter64Val OBJECT-TYPE\n    SYNTAX      Counter64\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n     \"The value when nlmLogVariableType is 'counter64'.\"\n    ::= { nlmLogVariableEntry 11 }\n\nnlmLogVariableOpaqueVal OBJECT-TYPE\n    SYNTAX      Opaque\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n     \"The value when nlmLogVariableType is 'opaque'.\"\n    ::= { nlmLogVariableEntry 12 }\n\n--\n-- Conformance\n--\n\nnotificationLogMIBConformance OBJECT IDENTIFIER ::=\n    { notificationLogMIB 3 }\nnotificationLogMIBCompliances OBJECT IDENTIFIER ::=\n    { notificationLogMIBConformance 1 }\nnotificationLogMIBGroups      OBJECT IDENTIFIER ::=\n    { notificationLogMIBConformance 2 }\n\n-- Compliance\n\nnotificationLogMIBCompliance MODULE-COMPLIANCE\n     STATUS current\n     DESCRIPTION\n          \"The compliance statement for entities which implement\n          the Notification Log MIB.\"\n     MODULE    --"..., 4096) = 4096
00:05:28 read(3, "be implemented\n          on systems that do not have a wall clock date.\"\n     ::= { notificationLogMIBGroups 4 }\n\nEND\n", 4096) = 118
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/DISMAN-EVENT-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267875, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=136, st_size=68104, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "DISMAN-EVENT-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    Integer32, Unsigned32,\n    NOTIFICATION-TYPE, Counter32,\n    Gauge32, mib-2, zeroDotZero         FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION, RowStatus,\n    TruthValue                FROM SNMPv2-TC\n\n    MODULE-COMPLIANCE, OBJECT-GROUP,\n    NOTIFICATION-GROUP             FROM SNMPv2-CONF\n    sysUpTime                 FROM SNMPv2-MIB\n    SnmpTagValue              FROM SNMP-TARGET-MIB\n    SnmpAdminString           FROM SNMP-FRAMEWORK-MIB;\n\ndismanEventMIB MODULE-IDENTITY\n    LAST-UPDATED \"200010160000Z\"            -- 16 October 2000\n    ORGANIZATION \"IETF Distributed Management Working Group\"\n    CONTACT-INFO \"Ramanathan Kavasseri\n                  Cisco Systems, Inc.\n                  170 West Tasman Drive,\n                  San Jose CA 95134-1706.\n                  Phone: +1 408 526 4527\n                  Email: ramk@cisco.com\"\n    DESCRIPTION\n     \"The MIB module for defining event triggers and actions\n    "..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/SNMP-TARGET-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267961, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=22769, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "SNMP-TARGET-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY,\n    OBJECT-TYPE,\n    snmpModules,\n    Counter32,\n    Integer32\n        FROM SNMPv2-SMI\n\n    TEXTUAL-CONVENTION,\n    TDomain,\n    TAddress,\n    TimeInterval,\n    RowStatus,\n    StorageType,\n    TestAndIncr\n        FROM SNMPv2-TC\n\n    SnmpSecurityModel,\n    SnmpMessageProcessingModel,\n    SnmpSecurityLevel,\n    SnmpAdminString\n        FROM SNMP-FRAMEWORK-MIB\n\n    MODULE-COMPLIANCE,\n    OBJECT-GROUP\n        FROM SNMPv2-CONF;\n\nsnmpTargetMIB MODULE-IDENTITY\n    LAST-UPDATED \"200210140000Z\"\n    ORGANIZATION \"IETF SNMPv3 Working Group\"\n    CONTACT-INFO\n        \"WG-email:   snmpv3@lists.tislabs.com\n         Subscribe:  majordomo@lists.tislabs.com\n                     In message body:  subscribe snmpv3\n\n         Co-Chair:   Russ Mundy\n                     Network Associates Laboratories\n         Postal:     15204 Omega Drive, Suite 300\n                     Rockville, MD 20850-4601\n                     USA\n         EMail:      m"..., 4096) = 4096
00:05:28 read(4, "        representation is identical to the US-ASCII encoding.\n\n         Note that when this TC is used for an object that\n         is used or envisioned to be used as an index, then a\n         SIZE restriction must be specified so that the number\n         of sub-identifiers for any object instance does not\n         exceed the limit of 128, as defined by [RFC1905].\n\n         An object of this type contains a single tag value\n         which is used to select a set of entries in a table.\n\n         A tag value is an arbitrary string of octets, but\n         may not contain a delimiter character.  Delimiter\n         characters are defined to be one of the following:\n\n             -  An ASCII space character (0x20).\n\n             -  An ASCII TAB character (0x09).\n\n             -  An ASCII carriage return (CR) character (0x0D).\n\n             -  An ASCII line feed (LF) character (0x0A).\n\n         Delimiter characters are used to separate tag values\n         in a tag list.  An object of this typ"..., 4096) = 4096
00:05:28 read(4, "mpty list (i.e. there are no tag values in the list).\n\n         The use of the tag list to select table entries is\n         application and MIB specific.  Typically, an application\n         will provide one or more tag values, and any entry\n         which contains some combination of these tag values\n         will be selected.\"\n    SYNTAX       OCTET STRING (SIZE (0..255))\n\n--\n--\n-- The snmpTargetObjects group\n--\n--\n\nsnmpTargetSpinLock OBJECT-TYPE\n    SYNTAX      TestAndIncr\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"This object is used to facilitate modification of table\n         entries in the SNMP-TARGET-MIB module by multiple\n         managers.  In particular, it is useful when modifying\n         the value of the snmpTargetAddrTagList object.\n\n         The procedure for modifying the snmpTargetAddrTagList\n         object is as follows:\n\n             1.  Retrieve the value of snmpTargetSpinLock and\n                 of snmpTargetAddrTagList.\n\n        "..., 4096) = 4096
00:05:28 read(4, "  interval is implementation dependent.  One such method\n         is to derive the expected round trip time based on a\n         particular retransmission algorithm and on the number\n         of timeouts which have occurred.  The type of message may\n         also be considered when deriving expected round trip\n         times for retransmissions.  For example, if a message is\n         being sent with a securityLevel that indicates both\n\n         authentication and privacy, the derived value may be\n         increased to compensate for extra processing time spent\n         during authentication and encryption processing.\"\n    DEFVAL { 1500 }\n    ::= { snmpTargetAddrEntry 4 }\n\nsnmpTargetAddrRetryCount OBJECT-TYPE\n    SYNTAX      Integer32 (0..255)\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object specifies a default number of retries to be\n         attempted when a response is not received for a generated\n         message.  An application may provide it"..., 4096) = 4096
00:05:28 read(4, "me           SnmpAdminString,\n    snmpTargetParamsMPModel        SnmpMessageProcessingModel,\n    snmpTargetParamsSecurityModel  SnmpSecurityModel,\n    snmpTargetParamsSecurityName   SnmpAdminString,\n    snmpTargetParamsSecurityLevel  SnmpSecurityLevel,\n    snmpTargetParamsStorageType    StorageType,\n    snmpTargetParamsRowStatus      RowStatus\n}\n\nsnmpTargetParamsName OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE(1..32))\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"The locally arbitrary, but unique identifier associated\n         with this snmpTargetParamsEntry.\"\n    ::= { snmpTargetParamsEntry 1 }\n\nsnmpTargetParamsMPModel OBJECT-TYPE\n    SYNTAX      SnmpMessageProcessingModel\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The Message Processing Model to be used when generating\n         SNMP messages using this entry.\"\n    ::= { snmpTargetParamsEntry 2 }\n\nsnmpTargetParamsSecurityModel OBJECT-TYPE\n    SYNTAX      SnmpSec"..., 4096) = 4096
00:05:28 read(4, "  MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n        \"The total number of packets received by the SNMP\n         engine which were dropped because the context\n         contained in the message was unknown.\"\n    ::= { snmpTargetObjects 5 }\n\n--\n--\n-- Conformance information\n--\n--\n\nsnmpTargetCompliances OBJECT IDENTIFIER ::=\n                                        { snmpTargetConformance 1 }\nsnmpTargetGroups      OBJECT IDENTIFIER ::=\n                                        { snmpTargetConformance 2 }\n\n--\n--\n-- Compliance statements\n\n--\n--\n\nsnmpTargetCommandResponderCompliance MODULE-COMPLIANCE\n    STATUS      current\n    DESCRIPTION\n        \"The compliance statement for SNMP entities which include\n         a command responder application.\"\n    MODULE -- This Module\n        MANDATORY-GROUPS { snmpTargetCommandResponderGroup }\n    ::= { snmpTargetCompliances 1 }\n\nsnmpTargetBasicGroup OBJECT-GROUP\n    OBJECTS {\n        snmpTargetSpinLock,\n        snmpTargetAddrTDomain,\n "..., 4096) = 2289
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "  notWritable(17),\n                          inconsistentName(18) }\n--\n\n-- Resource Control Section\n--\n\nmteResourceSampleMinimum OBJECT-TYPE\n    SYNTAX      Integer32 (1..2147483647)\n    UNITS       \"seconds\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The minimum mteTriggerFrequency this system will\n        accept.  A system may use the larger values of this minimum to\n        lessen the impact of constant sampling.  For larger\n        sampling intervals the system samples less often and\n        suffers less overhead.  This object provides a way to enforce\n        such lower overhead for all triggers created after it is\n        set.\n\n        Unless explicitly resource limited, a system's value for\n        this object SHOULD be 1, allowing as small as a 1 second\n        interval for ongoing trigger sampling.\n\n        Changing this value will not invalidate an existing setting\n        of mteTriggerFrequency.\"\n    ::= { mteResource 1 }\n\nmteResourceSampleIn"..., 4096) = 4096
00:05:28 read(3, "g,\n    mteTriggerTest                      BITS,\n    mteTriggerSampleType                INTEGER,\n    mteTriggerValueID                   OBJECT IDENTIFIER,\n    mteTriggerValueIDWildcard           TruthValue,\n    mteTriggerTargetTag                 SnmpTagValue,\n    mteTriggerContextName               SnmpAdminString,\n    mteTriggerContextNameWildcard       TruthValue,\n    mteTriggerFrequency                 Unsigned32,\n    mteTriggerObjectsOwner              SnmpAdminString,\n    mteTriggerObjects                   SnmpAdminString,\n    mteTriggerEnabled                   TruthValue,\n    mteTriggerEntryStatus               RowStatus\n}\n\nmteOwner OBJECT-TYPE\n   SYNTAX      SnmpAdminString (SIZE(0..32))\n   MAX-ACCESS  not-accessible\n   STATUS      current\n   DESCRIPTION\n        \"The owner of this entry. The exact semantics of this\n        string are subject to the security policy defined by the\n        security administrator.\"\n    ::= { mteTriggerEntry 1 }\n\nmteTriggerName OBJECT-TYPE\n    S"..., 4096) = 4096
00:05:28 read(3, "= { mteTriggerEntry 5 }\n\nmteTriggerValueID OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The object identifier of the MIB object to sample to see\n        if the trigger should fire.\n\n        This may be wildcarded by truncating all or part of the\n        instance portion, in which case the value is obtained\n        as if with a GetNext function, checking multiple values\n\n        if they exist.  If such wildcarding is applied,\n        mteTriggerValueIDWildcard must be 'true' and if not it must\n        be 'false'.\n\n        Bad object identifiers or a mismatch between truncating the\n        identifier and the value of mteTriggerValueIDWildcard result\n        in operation as one would expect when providing the wrong\n        identifier to a Get or GetNext operation.  The Get will fail\n        or get the wrong object.  The GetNext will indeed get whatever\n        is next, proceeding until it runs past the initial pa"..., 4096) = 4096
00:05:28 read(3, "TATUS      current\n    DESCRIPTION\n        \"Control for whether mteTriggerContextName is to be treated as\n        fully-specified or wildcarded, with 'true' indicating wildcard.\"\n    DEFVAL { false }\n    ::= { mteTriggerEntry 10 }\n\nmteTriggerFrequency OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"seconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The number of seconds to wait between trigger samples.  To\n        encourage consistency in sampling, the interval is measured\n        from the beginning of one check to the beginning of the next\n        and the timer is restarted immediately when it expires, not\n        when the check completes.\n\n        If the next sample begins before the previous one completed the\n        system may either attempt to make the check or treat this as an\n        error condition with the error 'sampleOverrun'.\n\n        A frequency of 0 indicates instantaneous recognition of the\n        condition.  This is not possib"..., 4096) = 4096
00:05:28 read(3, ":= { sysUpTime 0 }\n\nmteTriggerDeltaDiscontinuityID OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The OBJECT IDENTIFIER (OID) of a TimeTicks, TimeStamp, or\n        DateAndTime object that indicates a discontinuity in the value\n        at mteTriggerValueID.\n\n        The OID may be for a leaf object (e.g. sysUpTime.0) or may\n        be wildcarded to match mteTriggerValueID.\n\n        This object supports normal checking for a discontinuity in a\n        counter.  Note that if this object does not point to sysUpTime\n        discontinuity checking MUST still check sysUpTime for an overall\n        discontinuity.\n\n        If the object identified is not accessible the sample attempt\n        is in error, with the error code as from an SNMP request.\n\n        Bad object identifiers or a mismatch between truncating the\n        identifier and the value of mteDeltaDiscontinuityIDWildcard\n        result in operation as one wou"..., 4096) = 4096
00:05:28 read(3, " - when this test is selected, the trigger fires\n        when the mteTriggerValueID object goes from present to absent.\n        changed(2) - when this test is selected, the trigger fires\n        the mteTriggerValueID object value changes.\n\n        Once the trigger has fired for either presence or absence it\n        will not fire again for that state until the object has been\n        to the other state. \"\n    DEFVAL { { present, absent } }\n    ::= { mteTriggerExistenceEntry 1 }\n\nmteTriggerExistenceStartup OBJECT-TYPE\n    SYNTAX      BITS { present(0), absent(1) }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Control for whether an event may be triggered when this entry\n        is first set to 'active' and the test specified by\n        mteTriggerExistenceTest is true.  Setting an option causes\n        that trigger to fire when its test is true.\"\n    DEFVAL { { present, absent } }\n    ::= { mteTriggerExistenceEntry 2 }\n\nmteTriggerExistenceObjectsOwner OBJECT-"..., 4096) = 4096
00:05:28 read(3, "      mteTriggerBooleanValue, so for example if\n        mteTriggerBooleanComparison is 'less' the result would be true\n        if the value at mteTriggerValueID is less than the value of\n        mteTriggerBooleanValue.\"\n    DEFVAL { unequal }\n    ::= { mteTriggerBooleanEntry 1 }\n\nmteTriggerBooleanValue OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The value to use for the test specified by\n        mteTriggerBooleanTest.\"\n    DEFVAL { 0 }\n    ::= { mteTriggerBooleanEntry 2 }\n\nmteTriggerBooleanStartup OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Control for whether an event may be triggered when this entry\n        is first set to 'active' or a new instance of the object at\n        mteTriggerValueID is found and the test specified by\n        mteTriggerBooleanComparison is true.  In that case an event is\n        triggered if mteTriggerBooleanStartup is '"..., 4096) = 4096
00:05:28 read(3, "ent             SnmpAdminString,\n    mteTriggerThresholdDeltaRisingEventOwner    SnmpAdminString,\n    mteTriggerThresholdDeltaRisingEvent         SnmpAdminString,\n    mteTriggerThresholdDeltaFallingEventOwner   SnmpAdminString,\n    mteTriggerThresholdDeltaFallingEvent        SnmpAdminString\n}\n\nmteTriggerThresholdStartup OBJECT-TYPE\n    SYNTAX      INTEGER { rising(1), falling(2), risingOrFalling(3) }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The event that may be triggered when this entry is first\n        set to 'active' and a new instance of the object at\n        mteTriggerValueID is found.  If the first sample after this\n        instance becomes active is greater than or equal to\n        mteTriggerThresholdRising and mteTriggerThresholdStartup is\n        equal to 'rising' or 'risingOrFalling', then one\n        mteTriggerThresholdRisingEvent is triggered for that instance.\n        If the first sample after this entry becomes active is less\n        tha"..., 4096) = 4096
00:05:28 read(3, "il the delta value falls below this threshold and\n        reaches mteTriggerThresholdDeltaFalling.\"\n    DEFVAL { 0 }\n    ::= { mteTriggerThresholdEntry 4 }\n\nmteTriggerThresholdDeltaFalling OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"A threshold value to check against if mteTriggerType is\n        'threshold'.\n\n        When the delta value (difference) between the current sampled\n        value (value(n)) and the previous sampled value (value(n-1))\n        is less than or equal to this threshold,\n        and the delta value calculated at the last sampling interval\n        (i.e. value(n-1) - value(n-2)) was greater than this threshold,\n        one mteTriggerThresholdDeltaFallingEvent is triggered. That event\n        is also triggered if the first delta value calculated after this\n        entry becomes active, i.e. value(2) - value(1), where value(1)\n        is the first sample taken of that instance, is less than or\n    "..., 4096) = 4096
00:05:28 read(3, "E\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The mteEventName of the event to invoke when mteTriggerType is\n        'threshold' and this trigger fires based on\n        mteTriggerThresholdDeltaRising. A length of 0 indicates\n        no event.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry 13 }\n\nmteTriggerThresholdDeltaFallingEventOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"To go with mteTriggerThresholdDeltaFallingEvent, the mteOwner\n        of an event entry from mteEventTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry 14 }\n\nmteTriggerThresholdDeltaFallingEvent OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The mteEventName of the event to invoke when mteTriggerType is\n        'threshold' and this trigger"..., 4096) = 4096
00:05:28 read(3, "l be the same as that used\n        in obtaining the mteTriggerValueID that fired.  If such\n        wildcarding is applied, mteObjectsIDWildcard must be\n        'true' and if not it must be 'false'.\n\n        Each instance that fills the wildcard is independent of any\n        additional instances, that is, wildcarded objects operate\n        as if there were a separate table entry for each instance\n        that fills the wildcard without having to actually predict\n        all possible instances ahead of time.\"\n    DEFVAL { zeroDotZero }\n    ::= { mteObjectsEntry 3 }\n\nmteObjectsIDWildcard OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Control for whether mteObjectsID is to be treated as\n        fully-specified or wildcarded, with 'true' indicating wildcard.\"\n    DEFVAL { false }\n    ::= { mteObjectsEntry 4 }\n\nmteObjectsEntryStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n    STATUS      current\n  "..., 4096) = 4096
00:05:28 read(3, "ication Table\n--\n\nmteEventNotificationTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteEventNotificationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of information about notifications to be sent as a\n        consequence of management events.\"\n    ::= { mteEvent 3 }\n\nmteEventNotificationEntry OBJECT-TYPE\n    SYNTAX      MteEventNotificationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information about a single event's notification.  Entries\n        automatically exist in this this table for each mteEventEntry\n        that has 'notification' set in mteEventActions.\"\n    INDEX       { mteOwner, IMPLIED mteEventName }\n    ::= { mteEventNotificationTable 1 }\n\nMteEventNotificationEntry ::= SEQUENCE {\n    mteEventNotification                OBJECT IDENTIFIER,\n    mteEventNotificationObjectsOwner    SnmpAdminString,\n    mteEventNotificationObjects         SnmpAdminString\n    }\n\nmteEventNotification OBJECT"..., 4096) = 4096
00:05:28 read(3, "redict\n        all possible instances ahead of time.\n\n        Bad object identifiers or a mismatch between truncating the\n        identifier and the value of mteSetObjectWildcard\n        result in operation as one would expect when providing the\n        wrong identifier to a Set operation.  The Set will fail or set\n        the wrong object.  If the value syntax of the destination\n        object is not correct, the Set fails with the normal SNMP\n        error code.\"\n    DEFVAL { zeroDotZero }\n    ::= { mteEventSetEntry 1 }\n\nmteEventSetObjectWildcard OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Control over whether mteEventSetObject is to be treated as\n        fully-specified or wildcarded, with 'true' indicating wildcard\n        if mteEventActions has 'set' set.\"\n    DEFVAL { false }\n    ::= { mteEventSetEntry 2 }\n\nmteEventSetValue OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS  read-write\n    STATUS      curren"..., 4096) = 4096
00:05:28 read(3, "name related to the notification.  This MUST be as\n        fully-qualified as possible, including filling in wildcard\n        information determined in processing.\"\n    ::= { dismanEventMIBNotificationObjects 3 }\n\nmteHotOID OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"The object identifier of the destination object related to the\n        notification.  This MUST be as fully-qualified as possible,\n        including filling in wildcard information determined in\n        processing.\n\n        For a trigger-related notification this is from\n        mteTriggerValueID.\n\n        For a set failure this is from mteEventSetObject.\"\n    ::= { dismanEventMIBNotificationObjects 4 }\n\nmteHotValue OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"The value of the object at mteTriggerValueID when a\n        trigger fired.\"\n    ::= { dismanEventM"..., 4096) = 4096
00:05:28 read(3, "onformance 2 }\n\n-- Compliance\n\ndismanEventMIBCompliance MODULE-COMPLIANCE\n        STATUS current\n        DESCRIPTION\n                \"The compliance statement for entities which implement\n                the Event MIB.\"\n        MODULE  -- this module\n                MANDATORY-GROUPS {\n                        dismanEventResourceGroup,\n                        dismanEventTriggerGroup,\n                        dismanEventObjectsGroup,\n                        dismanEventEventGroup,\n                        dismanEventNotificationObjectGroup,\n                        dismanEventNotificationGroup\n                }\n\n                OBJECT mteTriggerTargetTag\n                MIN-ACCESS  read-only\n                DESCRIPTION\n                        \"Write access is not required, thus limiting\n                        monitoring to the local system or pre-configured\n                        remote systems.\"\n\n                OBJECT mteEventSetTargetTag\n                MIN-ACCESS  read-only\n            "..., 4096) = 4096
00:05:28 read(3, "sholdObjectsOwner,\n                mteTriggerThresholdObjects,\n                mteTriggerThresholdRising,\n                mteTriggerThresholdFalling,\n                mteTriggerThresholdDeltaRising,\n                mteTriggerThresholdDeltaFalling,\n                mteTriggerThresholdRisingEventOwner,\n                mteTriggerThresholdRisingEvent,\n                mteTriggerThresholdFallingEventOwner,\n                mteTriggerThresholdFallingEvent,\n                mteTriggerThresholdDeltaRisingEventOwner,\n                mteTriggerThresholdDeltaRisingEvent,\n                mteTriggerThresholdDeltaFallingEventOwner,\n                mteTriggerThresholdDeltaFallingEvent\n        }\n        STATUS current\n        DESCRIPTION\n                \"Event triggers.\"\n        ::= { dismanEventMIBGroups 2 }\n\ndismanEventObjectsGroup OBJECT-GROUP\n        OBJECTS {\n                mteObjectsID,\n                mteObjectsIDWildcard,\n                mteObjectsEntryStatus\n        }\n        STATUS current\n     "..., 4096) = 2568
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/DISMAN-SCHEDULE-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267877, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=24613, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "DISMAN-SCHEDULE-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,\n    Integer32, Unsigned32, Counter32, mib-2, zeroDotZero\n        FROM SNMPv2-SMI\n\n    TEXTUAL-CONVENTION,\n    DateAndTime, RowStatus, StorageType, VariablePointer\n        FROM SNMPv2-TC\n\n    MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP\n        FROM SNMPv2-CONF\n\n    SnmpAdminString\n        FROM SNMP-FRAMEWORK-MIB;\n\nschedMIB MODULE-IDENTITY\n    LAST-UPDATED \"200201070000Z\"\n    ORGANIZATION \"IETF Distributed Management Working Group\"\n    CONTACT-INFO\n        \"WG EMail:  disman@dorothy.bmc.com\n         Subscribe: disman-request@dorothy.bmc.com\n\n         Chair:     Randy Presuhn\n                    BMC Software, Inc.\n         Postal:    Office 1-3141\n                    2141 North First Street\n                    San Jose,  California 95131\n                    USA\n         EMail:     rpresuhn@bmc.com\n         Phone:     +1 408 546-1006\n\n         Editor:    David B. Levi\n           "..., 4096) = 4096
00:05:28 read(3, "ects 1 }\n\n--\n-- The schedule table which controls the scheduler.\n--\n\nschedTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF SchedEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"This table defines scheduled actions triggered by\n         SNMP set operations.\"\n    ::= { schedObjects 2 }\n\nschedEntry OBJECT-TYPE\n    SYNTAX      SchedEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"An entry describing a particular scheduled action.\n\n         Unless noted otherwise, writable objects of this row\n         can be modified independent of the current value of\n         schedRowStatus, schedAdminStatus and schedOperStatus.\n         In particular, it is legal to modify schedInterval\n         and the objects in the schedCalendarGroup when\n         schedRowStatus is active and schedAdminStatus and\n         schedOperStatus are both enabled.\"\n    INDEX { schedOwner, schedName }\n    ::= { schedTable 1 }\n\nSchedEntry ::= SEQUENCE {\n    s"..., 4096) = 4096
00:05:28 read(3, "TION\n        \"The set of weekdays on which the scheduled action should\n         take place.  Setting multiple bits will include several\n         weekdays in the set of possible weekdays for this schedule.\n         Setting all bits will cause the scheduler to ignore the\n         weekday.\n\n         Note that implementations which maintain a list of pending\n         activations must re-calculate them when this object is\n         changed.\"\n    DEFVAL      { {} }\n    ::= { schedEntry 5 }\n\nschedMonth OBJECT-TYPE\n    SYNTAX      BITS {\n                    january(0),\n                    february(1),\n                    march(2),\n                    april(3),\n                    may(4),\n                    june(5),\n                    july(6),\n                    august(7),\n                    september(8),\n                    october(9),\n                    november(10),\n                    december(11)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n    "..., 4096) = 4096
00:05:28 read(3, "21(21), h22(22), h23(23)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The set of hours within a day during which the scheduled\n         action should take place.\n\n         Note that implementations which maintain a list of pending\n         activations must re-calculate them when this object is\n         changed.\"\n    DEFVAL      { {} }\n    ::= { schedEntry 8 }\n\nschedMinute OBJECT-TYPE\n    SYNTAX      BITS {\n                    m0(0),   m1(1),   m2(2),   m3(3),   m4(4),\n                    m5(5),   m6(6),   m7(7),   m8(8),   m9(9),\n                    m10(10), m11(11), m12(12), m13(13), m14(14),\n                    m15(15), m16(16), m17(17), m18(18), m19(19),\n                    m20(20), m21(21), m22(22), m23(23), m24(24),\n                    m25(25), m26(26), m27(27), m28(28), m29(29),\n                    m30(30), m31(31), m32(32), m33(33), m34(34),\n                    m35(35), m36(36), m37(37), m38(38), m39(39),\n                    m40("..., 4096) = 4096
00:05:28 read(3, "dar schedule with the additional feature that it\n         disables itself by changing in the `finished'\n         schedOperStatus once the schedule triggers an action.\n\n         Note that implementations which maintain a list of pending\n         activations must re-calculate them when this object is\n         changed.\"\n    DEFVAL      { periodic }\n    ::= { schedEntry 13 }\n\nschedAdminStatus OBJECT-TYPE\n    SYNTAX      INTEGER {\n                    enabled(1),\n                    disabled(2)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The desired state of the schedule.\"\n    DEFVAL      { disabled }\n    ::= { schedEntry 14 }\n\nschedOperStatus OBJECT-TYPE\n    SYNTAX      INTEGER {\n\n                    enabled(1),\n                    disabled(2),\n                    finished(3)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The current operational state of this schedule.  The state\n         enable"..., 4096) = 4096
00:05:28 read(3, "ffect on whether other\n         objects in this conceptual row can be modified.\"\n    ::= { schedEntry 20 }\n\nschedTriggers OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"This variable counts the number of attempts (either\n         successful or failed) to invoke the scheduled action.\"\n    ::= { schedEntry 21 }\n\n--\n-- Notifications that are emitted to indicate failures.  The\n-- definition of schedTraps makes notification registrations\n-- reversible (see STD 58, RFC 2578).\n--\n\nschedTraps OBJECT IDENTIFIER ::= { schedNotifications 0 }\n\nschedActionFailure NOTIFICATION-TYPE\n    OBJECTS     { schedLastFailure, schedLastFailed }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated whenever the invocation of a\n         scheduled action fails.\"\n    ::= { schedTraps 1 }\n\n-- conformance information\n\nschedCompliances OBJECT IDENTIFIER ::= { schedConformance 1 }\nschedGroups      OBJECT IDENTIFIER ::= { sched"..., 4096) = 4096
00:05:28 read(3, "ies.\"\n    ::= { schedGroups 1 }\n\nEND\n", 4096) = 37
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/UCD-DEMO-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267985, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2163, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "UCD-DEMO-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32\tFROM SNMPv2-SMI\n    ucdavis\t\t\t\t\tFROM UCD-SNMP-MIB;\n\nucdDemoMIB MODULE-IDENTITY\n    LAST-UPDATED \"9912090000Z\"\n    ORGANIZATION \"University of California, Davis\"\n    CONTACT-INFO\n\t\"This mib is no longer being maintained by the University of\n\t California and is now in life-support-mode and being\n\t maintained by the net-snmp project.  The best place to write\n\t for public questions about the net-snmp-coders mailing list\n\t at net-snmp-coders@lists.sourceforge.net.\n\n         postal:   Wes Hardaker\n                   P.O. Box 382\n                   Davis CA  95617\n\n         email:    net-snmp-coders@lists.sourceforge.net\n        \"\n    DESCRIPTION\n\t\"The UCD-SNMP Demonstration MIB.\"\n    REVISION\t \"9912090000Z\"\n    DESCRIPTION\n\t\"SMIv2 version converted from older MIB definitions.\"\n    ::= { ucdavis 14 }\n\nucdDemoMIBObjects OBJECT IDENTIFIER ::= { ucdDemoMIB 1 }\n\nucdDemoPublic OBJECT IDENTIFIER ::= { ucdDemoMIB"..., 4096) = 2163
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/NET-SNMP-AGENT-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267921, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=15901, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "NET-SNMP-AGENT-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Defines control and monitoring structures for the Net-SNMP agent.\n--\n\nIMPORTS\n    SnmpAdminString\n    \tFROM SNMP-FRAMEWORK-MIB\n\n    netSnmpObjects, netSnmpModuleIDs, netSnmpNotifications, netSnmpGroups\n\tFROM NET-SNMP-MIB\n\n    OBJECT-TYPE, NOTIFICATION-TYPE, MODULE-IDENTITY, Integer32, Unsigned32\n        FROM SNMPv2-SMI\n\n    OBJECT-GROUP, NOTIFICATION-GROUP\n\tFROM SNMPv2-CONF\n\n    TEXTUAL-CONVENTION, DisplayString, RowStatus, TruthValue\n\tFROM SNMPv2-TC;\n\n\nnetSnmpAgentMIB MODULE-IDENTITY\n    LAST-UPDATED \"201003170000Z\"\n    ORGANIZATION \"www.net-snmp.org\"\n    CONTACT-INFO    \n\t \"postal:   Wes Hardaker\n                    P.O. Box 382\n                    Davis CA  95617\n\n          email:    net-snmp-coders@lists.sourceforge.net\"\n    DESCRIPTION\n\t \"Defines control and monitoring structures for the Net-SNMP agent.\"\n    REVISION     \"201003170000Z\"\n    DESCRIPTION\n\t \"Made sure that this MIB can be compiled by MIB compilers that do not\n\t recogniz"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/NET-SNMP-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267927, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2036, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "NET-SNMP-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Top-level infrastructure of the Net-SNMP project enterprise MIB tree\n--\n\nIMPORTS\n    MODULE-IDENTITY, enterprises FROM SNMPv2-SMI;\n\nnetSnmp MODULE-IDENTITY\n    LAST-UPDATED \"200201300000Z\"\n    ORGANIZATION \"www.net-snmp.org\"\n    CONTACT-INFO    \n\t \"postal:   Wes Hardaker\n                    P.O. Box 382\n                    Davis CA  95617\n\n          email:    net-snmp-coders@lists.sourceforge.net\"\n    DESCRIPTION\n\t\"Top-level infrastructure of the Net-SNMP project enterprise MIB tree\"\n    REVISION     \"200201300000Z\"\n    DESCRIPTION\n\t\"First draft\"\n    ::= { enterprises 8072}\n\n\n--\n--  Net-SNMP enterprise-specific management objects\n--\n\nnetSnmpObjects              OBJECT IDENTIFIER ::= {netSnmp 1}\n-- netSnmpExamples             OBJECT IDENTIFIER ::= {netSnmp 2}\nnetSnmpEnumerations         OBJECT IDENTIFIER ::= {netSnmp 3}\nnetSnmpModuleIDs            OBJECT IDENTIFIER ::= {netSnmpEnumerations 1}\nnetSnmpAgentOIDs            OBJECT IDENTIFIER ::= {ne"..., 4096) = 2036
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "  Agent configuration\n--    Debug and logging output\n--\n\nnsConfigDebug          OBJECT IDENTIFIER ::= {nsConfiguration 1}\nnsConfigLogging        OBJECT IDENTIFIER ::= {nsConfiguration 2}\n\nnsDebugEnabled         OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"Whether the agent is configured to generate debugging output\"\n    DEFVAL { false }\n    ::= { nsConfigDebug 1 }\n\nnsDebugOutputAll       OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"Whether the agent is configured to display all debugging output\n       rather than filtering on individual debug tokens.  Nothing will\n       be generated unless nsDebugEnabled is also true(1)\"\n    DEFVAL { false }\n    ::= { nsConfigDebug 2 }\n\nnsDebugDumpPdu        OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"Whether the agent is configured to display raw pa"..., 4096) = 4096
00:05:28 read(3, "bug    (7)\n                }\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n      \"The (minimum) priority level for which this logging entry\n       should be applied.\"\n    ::= { nsLoggingEntry 1 }\n\nnsLogToken    OBJECT-TYPE\n    SYNTAX      DisplayString\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n      \"A token for which to generate logging entries.\n       Depending on the style of logging, this may either\n       be simply an arbitrary token, or may have some\n       particular meaning (such as the filename to log to).\"\n    ::= { nsLoggingEntry 2 }\n\nnsLogType     OBJECT-TYPE\n    SYNTAX      INTEGER {\n\t\t     stdout   (1),\n\t\t     stderr   (2),\n\t\t     file     (3),\n\t\t     syslog   (4),\n\t\t     callback (5)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n      \"The type of logging for this entry.\"\n    ::= { nsLoggingEntry 3 }\n\nnsLogMaxLevel OBJECT-TYPE\n    SYNTAX      INTEGER {\n\t\t     emergency(0),\n\t\t   "..., 4096) = 4096
00:05:28 brk(0x19a8000)                 = 0x19a8000
00:05:28 brk(0x19a7000)                 = 0x19a7000
00:05:28 read(3, "X      SnmpAdminString\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n\t\"The context name the module is registered under.\"\n    ::= { nsModuleEntry 1 }\n\nnsmRegistrationPoint OBJECT-TYPE\n    SYNTAX\tOBJECT IDENTIFIER\n    MAX-ACCESS\tnot-accessible\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The registry OID of a mib module.\"\n    ::= { nsModuleEntry  2 }\n\nnsmRegistrationPriority OBJECT-TYPE\n    SYNTAX\tINTEGER (-2147483648..2147483647)\n    MAX-ACCESS\tnot-accessible\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The priority of the registered mib module.\"\n    ::= { nsModuleEntry  3 }\n\nnsModuleName OBJECT-TYPE\n    SYNTAX\tDisplayString\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The module name that registered this OID.\"\n    ::= { nsModuleEntry  4 }\n\nnsModuleModes OBJECT-TYPE\n    SYNTAX\tBITS { getAndGetNext(0), set(1), getBulk(2) }\n    MAX-ACCESS\tread-only\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"The modes that the particular lower level handler can cope\n  \t with directly.\"\n"..., 4096) = 3613
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SNMP-MPD-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267955, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5496, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "SNMP-MPD-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-COMPLIANCE, OBJECT-GROUP         FROM SNMPv2-CONF\n    MODULE-IDENTITY, OBJECT-TYPE,\n    snmpModules, Counter32                  FROM SNMPv2-SMI;\n\nsnmpMPDMIB MODULE-IDENTITY\n    LAST-UPDATED \"200210140000Z\"\n    ORGANIZATION \"SNMPv3 Working Group\"\n    CONTACT-INFO \"WG-EMail:   snmpv3@lists.tislabs.com\n                  Subscribe:  snmpv3-request@lists.tislabs.com\n\n                  Co-Chair:   Russ Mundy\n                              Network Associates Laboratories\n                  postal:     15204 Omega Drive, Suite 300\n                              Rockville, MD 20850-4601\n                              USA\n\n                  EMail:      mundy@tislabs.com\n                  phone:      +1 301-947-7107\n\n                  Co-Chair &\n                  Co-editor:  David Harrington\n                              Enterasys Networks\n                  postal:     35 Industrial Way\n                              P. O. Box 5005\n               "..., 4096) = 4096
00:05:28 read(3, "     current\n    DESCRIPTION \"The total number of packets received by the SNMP\n                 engine which were dropped because the PDU contained\n                 in the packet could not be passed to an application\n                 responsible for handling the pduType, e.g. no SNMP\n                 application had registered for the proper\n                 combination of the contextEngineID and the pduType.\n                \"\n    ::= { snmpMPDStats 3 }\n\n-- Conformance information ******************************************\n\nsnmpMPDMIBCompliances OBJECT IDENTIFIER ::= {snmpMPDMIBConformance 1}\nsnmpMPDMIBGroups      OBJECT IDENTIFIER ::= {snmpMPDMIBConformance 2}\n\n-- Compliance statements\n\nsnmpMPDCompliance MODULE-COMPLIANCE\n    STATUS       current\n    DESCRIPTION \"The compliance statement for SNMP entities which\n                 implement the SNMP-MPD-MIB.\n                \"\n    MODULE    -- this module\n        MANDATORY-GROUPS { snmpMPDGroup }\n    ::= { snmpMPDMIBCompliances 1 }\n\nsnmpM"..., 4096) = 1400
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SNMP-USER-BASED-SM-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267963, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=80, st_size=39201, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "SNMP-USER-BASED-SM-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    OBJECT-IDENTITY,\n    snmpModules, Counter32                FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION, TestAndIncr,\n    RowStatus, RowPointer,\n    StorageType, AutonomousType           FROM SNMPv2-TC\n    MODULE-COMPLIANCE, OBJECT-GROUP       FROM SNMPv2-CONF\n    SnmpAdminString, SnmpEngineID,\n    snmpAuthProtocols, snmpPrivProtocols  FROM SNMP-FRAMEWORK-MIB;\n\nsnmpUsmMIB MODULE-IDENTITY\n    LAST-UPDATED \"200210160000Z\"            -- 16 Oct 2002, midnight\n    ORGANIZATION \"SNMPv3 Working Group\"\n    CONTACT-INFO \"WG-email:   snmpv3@lists.tislabs.com\n                  Subscribe:  majordomo@lists.tislabs.com\n                              In msg body:  subscribe snmpv3\n\n                  Chair:      Russ Mundy\n                              Network Associates Laboratories\n                  postal:     15204 Omega Drive, Suite 300\n                              Rockville, MD 20850-4601\n                      "..., 4096) = 4096
00:05:28 read(3, "AuthProtocol OBJECT-IDENTITY\n    STATUS        current\n    DESCRIPTION  \"The HMAC-SHA-96 Digest Authentication Protocol.\"\n    REFERENCE    \"- H. Krawczyk, M. Bellare, R. Canetti, HMAC:\n                    Keyed-Hashing for Message Authentication,\n                    RFC2104, Feb 1997.\n                  - Secure Hash Algorithm. NIST FIPS 180-1.\n                 \"\n    ::= { snmpAuthProtocols 3 }\n\nusmNoPrivProtocol OBJECT-IDENTITY\n    STATUS        current\n    DESCRIPTION  \"No Privacy Protocol.\"\n    ::= { snmpPrivProtocols 1 }\n\nusmDESPrivProtocol OBJECT-IDENTITY\n    STATUS        current\n    DESCRIPTION  \"The CBC-DES Symmetric Encryption Protocol.\"\n    REFERENCE    \"- Data Encryption Standard, National Institute of\n                    Standards and Technology.  Federal Information\n                    Processing Standard (FIPS) Publication 46-1.\n\n                    Supersedes FIPS Publication 46,\n                    (January, 1977; reaffirmed January, 1988).\n\n                  - Data Encr"..., 4096) = 4096
00:05:28 read(3, "n case of MD5) of the 'delta' component.\n              - the above two steps are repeated until the unused\n                portion of the keyNew component is L octets or less,\n           - the random component is appended to the value of the\n             temporary variable, and the result is input to the\n             hash algorithm H to produce a digest value;\n           - this digest value, truncated if necessary to be the same\n             length as the unused portion of the keyNew, is XOR-ed\n             with the unused portion of the keyNew to produce the\n             (final portion of the) 'delta' component.\n\n           For example, using MD5 as the hash algorithm H:\n\n              iterations = (lenOfDelta - 1)/16; /* integer division */\n              temp = keyOld;\n              for (i = 0; i < iterations; i++) {\n                  temp = MD5 (temp || random);\n                  delta[i*16 .. (i*16)+15] =\n                         temp XOR keyNew[i*16 .. (i*16)+15];\n              }\n"..., 4096) = 4096
00:05:28 read(3, "y\n    STATUS       current\n    DESCRIPTION \"The total number of packets received by the SNMP\n                 engine which were dropped because they requested a\n                 securityLevel that was unknown to the SNMP engine\n                 or otherwise unavailable.\n                \"\n    ::= { usmStats 1 }\n\nusmStatsNotInTimeWindows OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION \"The total number of packets received by the SNMP\n                 engine which were dropped because they appeared\n                 outside of the authoritative SNMP engine's window.\n                \"\n    ::= { usmStats 2 }\n\nusmStatsUnknownUserNames OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION \"The total number of packets received by the SNMP\n                 engine which were dropped because they referenced a\n                 user that was not known to the SNMP engine.\n                \"\n"..., 4096) = 4096
00:05:28 read(3, "If the new user will never use privacy:\n\n                   7)  SET(usmUserPrivProtocol=usmNoPrivProtocol)\n\n                 If the new user is to use authentication:\n\n                   8)  generate the keyChange value based on the secret\n                       authKey of the clone-from user and the secret key\n                       to be used for the new user. Let us call this\n                       akcValue.\n                   9)  GET(usmUserSpinLock.0) and save in sValue.\n                   10) SET(usmUserSpinLock.0=sValue,\n                           usmUserAuthKeyChange=akcValue\n                           usmUserPublic=randomValue2)\n                   11) GET(usmUserPulic) and check it has randomValue2.\n                       If not, repeat steps 9-11.\n\n                 If the new user will never use authentication:\n\n                   12) SET(usmUserAuthProtocol=usmNoAuthProtocol)\n\n                 Finally, activate the new user:\n\n                   13) SET(usmUserStatus=active)\n"..., 4096) = 4096
00:05:28 read(3, "another conceptual row in this\n                 usmUserTable.  The user in this other conceptual\n                 row is called the clone-from user.\n\n                 When a new user is created (i.e., a new conceptual\n                 row is instantiated in this table), the privacy and\n                 authentication parameters of the new user must be\n                 cloned from its clone-from user. These parameters are:\n                   - authentication protocol (usmUserAuthProtocol)\n                   - privacy protocol (usmUserPrivProtocol)\n                 They will be copied regardless of what the current\n                 value is.\n\n                 Cloning also causes the initial values of the secret\n                 authentication key (authKey) and the secret encryption\n\n                 key (privKey) of the new user to be set to the same\n                 values as the corresponding secrets of the clone-from\n                 user to allow the KeyChange process to occur as\n   "..., 4096) = 4096
00:05:28 read(3, "40)) for HMACSHA\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"An object, which when modified, causes the secret\n                 authentication key used for messages sent on behalf\n                 of this user to/from the SNMP engine identified by\n                 usmUserEngineID, to be modified via a one-way\n                 function.\n\n                 The associated protocol is the usmUserAuthProtocol.\n                 The associated secret key is the user's secret\n                 authentication key (authKey). The associated hash\n                 algorithm is the algorithm used by the user's\n                 usmUserAuthProtocol.\n\n                 When creating a new user, it is an 'inconsistentName'\n                 error for a set operation to refer to this object\n                 unless it is previously or concurrently initialized\n                 through a set operation on the corresponding instance\n                 of usmUserCloneFrom.\n\n               "..., 4096) = 4096
00:05:28 read(3, " returned.\n                \"\n    DEFVAL      { ''H }    -- the empty string\n    ::= { usmUserEntry 7 }\n\nusmUserPrivProtocol OBJECT-TYPE\n    SYNTAX       AutonomousType\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"An indication of whether messages sent on behalf of\n                 this user to/from the SNMP engine identified by\n                 usmUserEngineID, can be protected from disclosure,\n                 and if so, the type of privacy protocol which is used.\n\n                 An instance of this object is created concurrently\n                 with the creation of any other object instance for\n                 the same user (i.e., as part of the processing of\n                 the set operation which creates the first object\n                 instance in the same conceptual row).\n\n                 If an initial set operation (i.e. at row creation time)\n                 tries to set a value for an unknown or unsupported\n                 protocol, then a 'wr"..., 4096) = 4096
00:05:28 read(3, "me of the operation\n                 requester must match the usmUserName that indexes\n\n                 the row which is targeted by this operation.\n                 In addition, the USM security model must be\n                 used for this operation.\n\n                 The idea here is that access to this column can be\n                 public, since it will only allow a user to change\n                 his own secret privacy key (privKey).\n                 Note that this can only be done once the row is active.\n\n                 When a set is received and the usmUserName of the\n                 requester is not the same as the umsUserName that\n                 indexes the row which is targeted by this operation,\n                 then a 'noAccess' error must be returned.\n\n                 When a set is received and the security model in use\n                 is not USM, then a 'noAccess' error must be returned.\n                \"\n    DEFVAL      { ''H }    -- the empty string\n    ::= { us"..., 4096) = 4096
00:05:28 read(3, " clause states under which circumstances\n                 other objects in this row can be modified:\n\n                 The value of this object has no effect on whether\n                 other objects in this conceptual row can be modified,\n                 except for usmUserOwnAuthKeyChange and\n                 usmUserOwnPrivKeyChange. For these 2 objects, the\n\n                 value of usmUserStatus MUST be active.\n                \"\n    ::= { usmUserEntry 13 }\n\n-- Conformance Information *******************************************\n\nusmMIBCompliances OBJECT IDENTIFIER ::= { usmMIBConformance 1 }\nusmMIBGroups      OBJECT IDENTIFIER ::= { usmMIBConformance 2 }\n\n-- Compliance statements\n\nusmMIBCompliance MODULE-COMPLIANCE\n    STATUS       current\n    DESCRIPTION \"The compliance statement for SNMP engines which\n                 implement the SNMP-USER-BASED-SM-MIB.\n                \"\n\n    MODULE       -- this module\n        MANDATORY-GROUPS { usmMIBBasicGroup }\n\n        OBJECT           usm"..., 4096) = 2337
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SNMP-VIEW-BASED-ACM-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267969, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=34162, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "SNMP-VIEW-BASED-ACM-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-COMPLIANCE, OBJECT-GROUP       FROM SNMPv2-CONF\n    MODULE-IDENTITY, OBJECT-TYPE,\n    snmpModules                           FROM SNMPv2-SMI\n    TestAndIncr,\n    RowStatus, StorageType                FROM SNMPv2-TC\n    SnmpAdminString,\n    SnmpSecurityLevel,\n    SnmpSecurityModel                     FROM SNMP-FRAMEWORK-MIB;\n\nsnmpVacmMIB       MODULE-IDENTITY\n    LAST-UPDATED \"200210160000Z\"          -- 16 Oct 2002, midnight\n    ORGANIZATION \"SNMPv3 Working Group\"\n    CONTACT-INFO \"WG-email:   snmpv3@lists.tislabs.com\n                  Subscribe:  majordomo@lists.tislabs.com\n                              In message body:  subscribe snmpv3\n\n                  Co-Chair:   Russ Mundy\n                              Network Associates Laboratories\n                  postal:     15204 Omega Drive, Suite 300\n                              Rockville, MD 20850-4601\n                              USA\n                  email:      mundy@t"..., 4096) = 4096
00:05:28 read(3, "n changes).  Such\n                 changes would happen only if the management\n                 instrumentation at that SNMP entity recognizes more\n                 (or fewer) contexts.\n\n                 The presence of entries in this table and of entries\n                 in the vacmAccessTable are independent.  That is, a\n                 context identified by an entry in this table is not\n                 necessarily referenced by any entries in the\n                 vacmAccessTable; and the context(s) referenced by an\n                 entry in the vacmAccessTable does not necessarily\n                 currently exist and thus need not be identified by an\n                 entry in this table.\n\n                 This table must be made accessible via the default\n                 context so that Command Responder applications have\n                 a standard way of retrieving the information.\n\n                 This table is read-only.  It cannot be configured via\n                 SNMP.\n "..., 4096) = 4096
00:05:28 read(3, "s.\n\n                 This groupName is used as index into the\n                 vacmAccessTable to select an access control policy.\n                 However, a value in this table does not imply that an\n                 instance with the value exists in table vacmAccesTable.\n                \"\n    ::= { vacmSecurityToGroupEntry 3 }\n\nvacmSecurityToGroupStorageType OBJECT-TYPE\n    SYNTAX       StorageType\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The storage type for this conceptual row.\n                 Conceptual rows having the value 'permanent' need not\n                 allow write-access to any columnar objects in the row.\n                \"\n    DEFVAL      { nonVolatile }\n    ::= { vacmSecurityToGroupEntry 4 }\n\nvacmSecurityToGroupStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The status of this conceptual row.\n\n                 Until instances of all corresponding columns are\n           "..., 4096) = 4096
00:05:28 read(3, "         than the longest one remaining in the set\n                    d) select the entry with the highest securityLevel\n\n                 Please note that for securityLevel noAuthNoPriv, all\n                 groups are really equivalent since the assumption that\n                 the securityName has been authenticated does not hold.\n                \"\n    ::= { vacmMIBObjects 4 }\n\nvacmAccessEntry  OBJECT-TYPE\n    SYNTAX       VacmAccessEntry\n    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"An access right configured in the Local Configuration\n                 Datastore (LCD) authorizing access to an SNMP context.\n\n                 Entries in this table can use an instance value for\n                 object vacmGroupName even if no entry in table\n                 vacmAccessSecurityToGroupTable has a corresponding\n                 value for object vacmGroupName.\n                \"\n    INDEX       { vacmGroupName,\n                  vacmAccessContextPrefix,\n        "..., 4096) = 4096
00:05:28 read(3, "DESCRIPTION \"The value of an instance of this object identifies\n                 the MIB view of the SNMP context to which this\n                 conceptual row authorizes read access.\n\n                 The identified MIB view is that one for which the\n                 vacmViewTreeFamilyViewName has the same value as the\n                 instance of this object; if the value is the empty\n                 string or if there is no active MIB view having this\n                 value of vacmViewTreeFamilyViewName, then no access\n                 is granted.\n                \"\n    DEFVAL      { ''H }   -- the empty string\n    ::= { vacmAccessEntry 5 }\n\nvacmAccessWriteViewName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..32))\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The value of an instance of this object identifies\n                 the MIB view of the SNMP context to which this\n                 conceptual row authorizes write access.\n\n                 The"..., 4096) = 4096
00:05:28 read(3, " view.  The\n                 vacmViewSpinLock should be retrieved.  The name of\n                 the view to be created should be determined to be\n                 unique by the SNMP Command Generator application by\n                 consulting the vacmViewTreeFamilyTable.  Finally,\n                 the named view may be created (Set), including the\n                 advisory lock.\n                 If another SNMP Command Generator application has\n                 altered the views in the meantime, then the spin\n                 lock's value will have changed, and so this creation\n                 will fail because it will specify the wrong value for\n                 the spin lock.\n\n                 Since this is an advisory lock, the use of this lock\n                 is not enforced.\n                \"\n    ::= { vacmMIBViews 1 }\n\nvacmViewTreeFamilyTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF VacmViewTreeFamilyEntry\n    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTIO"..., 4096) = 4096
00:05:28 read(3, " for instance-level access\n                 control is received and the implementation does not\n                 support instance-level granularity, then an\n                 inconsistentName error must be returned.\n                \"\n    ::= { vacmMIBViews 2 }\n\nvacmViewTreeFamilyEntry OBJECT-TYPE\n    SYNTAX       VacmViewTreeFamilyEntry\n    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION \"Information on a particular family of view subtrees\n                 included in or excluded from a particular SNMP\n                 context's MIB view.\n\n                 Implementations must not restrict the number of\n                 families of view subtrees for a given MIB view,\n                 except as dictated by resource constraints on the\n                 overall number of entries in the\n                 vacmViewTreeFamilyTable.\n\n                 If no conceptual rows exist in this table for a given\n                 MIB view (viewName), that view may be thought of as\n    "..., 4096) = 4096
00:05:28 read(3, "    corresponding instance of vacmViewTreeFamilySubtree,\n                 then the bit mask is extended with 1's to be the\n                 required length.\n\n                 Note that when the value of this object is the\n                 zero-length string, this extension rule results in\n                 a mask of all-1's being used (i.e., no 'wild card'),\n                 and the family of view subtrees is the one view\n                 subtree uniquely identified by the corresponding\n                 instance of vacmViewTreeFamilySubtree.\n\n                 Note that masks of length greater than zero length\n                 do not need to be supported.  In this case this\n                 object is made read-only.\n                \"\n    DEFVAL      { ''H }\n    ::= { vacmViewTreeFamilyEntry 3 }\n\nvacmViewTreeFamilyType OBJECT-TYPE\n    SYNTAX       INTEGER  { included(1), excluded(2) }\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"Indicates whether the correspondin"..., 4096) = 4096
00:05:28 read(3, "ESCRIPTION  \"Write access is not required.\"\n\n        OBJECT        vacmViewTreeFamilyStorageType\n        MIN-ACCESS    read-only\n        DESCRIPTION  \"Write access is not required.\"\n\n        OBJECT        vacmViewTreeFamilyStatus\n        MIN-ACCESS    read-only\n        DESCRIPTION  \"Create/delete/modify access to the\n                      vacmViewTreeFamilyTable is not required.\n                     \"\n    ::= { vacmMIBCompliances 1 }\n\n-- Units of conformance **********************************************\n\nvacmBasicGroup OBJECT-GROUP\n    OBJECTS {\n              vacmContextName,\n              vacmGroupName,\n              vacmSecurityToGroupStorageType,\n              vacmSecurityToGroupStatus,\n              vacmAccessContextMatch,\n              vacmAccessReadViewName,\n              vacmAccessWriteViewName,\n              vacmAccessNotifyViewName,\n              vacmAccessStorageType,\n              vacmAccessStatus,\n              vacmViewSpinLock,\n              vacmViewTreeFamilyMask,\n      "..., 4096) = 1394
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SNMP-COMMUNITY-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267951, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=15490, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "SNMP-COMMUNITY-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    IpAddress,\n    MODULE-IDENTITY,\n    OBJECT-TYPE,\n    Integer32,\n    snmpModules\n        FROM SNMPv2-SMI\n    RowStatus,\n    StorageType\n        FROM SNMPv2-TC\n    SnmpAdminString,\n    SnmpEngineID\n        FROM SNMP-FRAMEWORK-MIB\n    SnmpTagValue,\n    snmpTargetAddrEntry\n        FROM SNMP-TARGET-MIB\n    MODULE-COMPLIANCE,\n    OBJECT-GROUP\n        FROM SNMPv2-CONF;\n\nsnmpCommunityMIB MODULE-IDENTITY\n    LAST-UPDATED \"200003060000Z\"          -- 6 Mar 2000, midnight\n    ORGANIZATION \"SNMPv3 Working Group\"\n    CONTACT-INFO \"WG-email:   snmpv3@lists.tislabs.com\n                  Subscribe:  majordomo@lists.tislabs.com\n                              In msg body:  subscribe snmpv3\n\n                  Chair:      Russ Mundy\n                              TIS Labs at Network Associates\n                  Postal:     3060 Washington Rd\n                              Glenwood MD 21738\n                              USA\n                  Email:      mun"..., 4096) = 4096
00:05:28 read(3, "snmpCommunityStatus              RowStatus\n}\n\nsnmpCommunityIndex OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE(1..32))\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"The unique index value of a row in this table.\"\n    ::= { snmpCommunityEntry 1 }\n\nsnmpCommunityName OBJECT-TYPE\n    SYNTAX       OCTET STRING\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION\n        \"The community string for which a row in this table\n         represents a configuration.\"\n    ::= { snmpCommunityEntry 2 }\n\nsnmpCommunitySecurityName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(1..32))\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION\n        \"A human readable string representing the corresponding\n         value of snmpCommunityName in a Security Model\n         independent format.\"\n    ::= { snmpCommunityEntry 3 }\n\nsnmpCommunityContextEngineID OBJECT-TYPE\n    SYNTAX       SnmpEngineID\n    MAX-ACCESS   read-create\n    STATUS    "..., 4096) = 4096
00:05:28 read(3, " the\n\n         snmpTargetAddrTable.\n\n         The snmpTargetAddrExtTable augments the\n         snmpTargetAddrTable with a transport address mask value\n         and a maximum message size value.  The transport address\n         mask allows entries in the snmpTargetAddrTable to define\n         a set of addresses instead of just a single address.\n         The maximum message size value allows the maximum\n         message size of another SNMP entity to be configured for\n         use in SNMPv1 (and SNMPv2c) transactions, where the\n         message format does not specify a maximum message size.\"\n    ::= { snmpCommunityMIBObjects 2 }\n\nsnmpTargetAddrExtEntry OBJECT-TYPE\n    SYNTAX       SnmpTargetAddrExtEntry\n    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"Information about a particular mask and mms value.\"\n    AUGMENTS       { snmpTargetAddrEntry }\n    ::= { snmpTargetAddrExtTable 1 }\n\nSnmpTargetAddrExtEntry ::= SEQUENCE {\n    snmpTargetAddrTMask             "..., 4096) = 4096
00:05:28 read(3, "   contain the value of the community string field from\n         the original SNMPv1 message containing a Trap PDU as\n         generated by an SNMPv1 agent.\"\n    ::= { snmpCommunityMIBObjects 4 }\n\n-- Conformance Information *******************************************\n\nsnmpCommunityMIBCompliances OBJECT IDENTIFIER\n                            ::= { snmpCommunityMIBConformance 1 }\nsnmpCommunityMIBGroups      OBJECT IDENTIFIER\n                            ::= { snmpCommunityMIBConformance 2 }\n\n-- Compliance statements\n\nsnmpCommunityMIBCompliance MODULE-COMPLIANCE\n    STATUS       current\n    DESCRIPTION\n        \"The compliance statement for SNMP engines which\n         implement the SNMP-COMMUNITY-MIB.\"\n\n    MODULE       -- this module\n        MANDATORY-GROUPS { snmpCommunityGroup }\n\n        OBJECT           snmpCommunityName\n        MIN-ACCESS       read-only\n        DESCRIPTION     \"Write access is not required.\"\n\n        OBJECT           snmpCommunitySecurityName\n        MIN-ACCESS       "..., 4096) = 3202
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/IPV6-ICMP-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267907, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=15936, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, " IPV6-ICMP-MIB DEFINITIONS ::= BEGIN\n\n IMPORTS\n     MODULE-IDENTITY, OBJECT-TYPE,\n     Counter32, mib-2                 FROM SNMPv2-SMI\n     MODULE-COMPLIANCE, OBJECT-GROUP  FROM SNMPv2-CONF\n     ipv6IfEntry                      FROM IPV6-MIB;\n\n ipv6IcmpMIB MODULE-IDENTITY\n     LAST-UPDATED \"9801082155Z\"\n     ORGANIZATION \"IETF IPv6 Working Group\"\n     CONTACT-INFO\n       \"           Dimitry Haskin\n\n           Postal: Bay Networks, Inc.\n                   660 Techology Park Drive.\n                   Billerica, MA  01821\n                   US\n\n              Tel: +1-978-916-8124\n           E-mail: dhaskin@baynetworks.com\n\n                   Steve Onishi\n\n           Postal: Bay Networks, Inc.\n                   3 Federal Street\n                   Billerica, MA 01821\n                   US\n\n              Tel: +1-978-916-3816\n           E-mail: sonishi@baynetworks.com\"\n     DESCRIPTION\n       \"The MIB module for entities implementing\n        the ICMPv6.\"\n     ::= { mib-2 56 }\n\n -- the ICMPv6"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/IPV6-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267909, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=96, st_size=48703, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, " IPV6-MIB DEFINITIONS ::= BEGIN\n\n IMPORTS\n     MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,\n     mib-2, Counter32, Unsigned32, Integer32,\n     Gauge32                               FROM SNMPv2-SMI\n     DisplayString, PhysAddress, TruthValue, TimeStamp,\n     VariablePointer, RowPointer           FROM SNMPv2-TC\n     MODULE-COMPLIANCE, OBJECT-GROUP,\n     NOTIFICATION-GROUP                    FROM SNMPv2-CONF\n     Ipv6IfIndex, Ipv6Address, Ipv6AddressPrefix,\n     Ipv6AddressIfIdentifier,\n     Ipv6IfIndexOrZero                     FROM IPV6-TC;\n\n ipv6MIB MODULE-IDENTITY\n     LAST-UPDATED \"9802052155Z\"\n     ORGANIZATION \"IETF IPv6 Working Group\"\n     CONTACT-INFO\n       \"           Dimitry Haskin\n\n           Postal: Bay Networks, Inc.\n                   660 Techology Park Drive.\n                   Billerica, MA  01821\n\n                   US\n\n              Tel: +1-978-916-8124\n           E-mail: dhaskin@baynetworks.com\n\n                   Steve Onishi\n\n           Postal: Bay Networks, Inc"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/IPV6-TC.txt", O_RDONLY) = 5
00:05:28 fstat(5, {st_dev=makedev(145, 128), st_ino=108267911, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2367, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e202000
00:05:28 read(5, "IPV6-TC DEFINITIONS ::= BEGIN\n\nIMPORTS\n     Integer32                FROM SNMPv2-SMI\n     TEXTUAL-CONVENTION       FROM SNMPv2-TC;\n\n-- definition of textual conventions\nIpv6Address ::= TEXTUAL-CONVENTION\n     DISPLAY-HINT \"2x:\"\n     STATUS       current\n     DESCRIPTION\n       \"This data type is used to model IPv6 addresses.\n        This is a binary string of 16 octets in network\n        byte-order.\"\n     SYNTAX       OCTET STRING (SIZE (16))\n\nIpv6AddressPrefix ::= TEXTUAL-CONVENTION\n     DISPLAY-HINT \"2x:\"\n     STATUS       current\n     DESCRIPTION\n       \"This data type is used to model IPv6 address\n       prefixes. This is a binary string of up to 16\n       octets in network byte-order.\"\n     SYNTAX       OCTET STRING (SIZE (0..16))\n\nIpv6AddressIfIdentifier ::= TEXTUAL-CONVENTION\n     DISPLAY-HINT \"2x:\"\n     STATUS       current\n     DESCRIPTION\n       \"This data type is used to model IPv6 address\n       interface identifiers. This is a binary string\n        of up to 8 octets in net"..., 4096) = 2367
00:05:28 read(5, "", 4096)              = 0
00:05:28 close(5)                       = 0
00:05:28 munmap(0x7fe60e202000, 4096)   = 0
00:05:28 read(4, "\n       \"An interface entry containing objects\n        about a particular IPv6 interface.\"\n     INDEX   { ipv6IfIndex }\n     ::= { ipv6IfTable 1 }\n\n Ipv6IfEntry ::= SEQUENCE {\n         ipv6IfIndex              Ipv6IfIndex,\n         ipv6IfDescr              DisplayString,\n         ipv6IfLowerLayer         VariablePointer,\n         ipv6IfEffectiveMtu       Unsigned32,\n         ipv6IfReasmMaxSize       Unsigned32,\n         ipv6IfIdentifier         Ipv6AddressIfIdentifier,\n         ipv6IfIdentifierLength   INTEGER,\n         ipv6IfPhysicalAddress    PhysAddress,\n         ipv6IfAdminStatus        INTEGER,\n         ipv6IfOperStatus         INTEGER,\n         ipv6IfLastChange         TimeStamp\n     }\n\n ipv6IfIndex OBJECT-TYPE\n     SYNTAX     Ipv6IfIndex\n     MAX-ACCESS not-accessible\n     STATUS     current\n     DESCRIPTION\n       \"A unique non-zero value identifying\n        the particular IPv6 interface.\"\n     ::= { ipv6IfEntry 1 }\n\n ipv6IfDescr OBJECT-TYPE\n     SYNTAX     DisplayString\n     M"..., 4096) = 4096
00:05:28 read(4, "object. For interfaces which do not have such\n       an address (e.g., a serial line), this object should\n       contain an octet string of zero length.\"\n     ::= { ipv6IfEntry 8 }\n\nipv6IfAdminStatus OBJECT-TYPE\n    SYNTAX  INTEGER {\n             up(1),       -- ready to pass packets\n             down(2)\n            }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"The desired state of the interface.  When a managed\n      system initializes,  all IPv6 interfaces start with\n      ipv6IfAdminStatus in the down(2) state.  As a result\n      of either explicit management action or per\n      configuration information retained by the managed\n\n      system,  ipv6IfAdminStatus is then changed to\n      the up(1) state (or remains in the down(2) state).\"\n    ::= { ipv6IfEntry 9 }\n\nipv6IfOperStatus OBJECT-TYPE\n    SYNTAX  INTEGER {\n             up(1),             -- ready to pass packets\n\n             down(2),\n             noIfIdentifier(3), -- no interface identifier\n\n  "..., 4096) = 4096
00:05:28 read(4, "s\n             Counter32,\n         ipv6IfStatsReasmOKs\n             Counter32,\n         ipv6IfStatsReasmFails\n             Counter32,\n         ipv6IfStatsInMcastPkts\n             Counter32,\n         ipv6IfStatsOutMcastPkts\n             Counter32\n     }\n\n ipv6IfStatsInReceives OBJECT-TYPE\n     SYNTAX      Counter32\n     MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n        \"The total number of input datagrams received by\n        the interface, including those received in error.\"\n     ::= { ipv6IfStatsEntry 1 }\n\n ipv6IfStatsInHdrErrors OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n        \"The number of input datagrams discarded due to\n        errors in their IPv6 headers, including version\n        number mismatch, other format errors, hop count\n        exceeded, errors discovered in processing their\n        IPv6 options, etc.\"\n     ::= { ipv6IfStatsEntry 2 }\n\n ipv6IfStatsInTooBigErrors OBJECT-TYPE\n     SYNTAX  "..., 4096) = 4096
00:05:28 read(4, "nly\n     STATUS      current\n     DESCRIPTION\n        \"The number of output datagrams which this\n        entity received and forwarded to their final\n        destinations.  In entities which do not act\n        as IPv6 routers, this counter will include\n        only those packets which were Source-Routed\n        via this entity, and the Source-Route\n        processing was successful.  Note that for\n        a successfully forwarded datagram the counter\n        of the outgoing interface is incremented.\"\n     ::= { ipv6IfStatsEntry 10 }\n\n ipv6IfStatsOutRequests OBJECT-TYPE\n     SYNTAX      Counter32\n     MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n      \"The total number of IPv6 datagrams which local IPv6\n      user-protocols (including ICMP) supplied to IPv6 in\n      requests for transmission.  Note that this counter\n      does not include any datagrams counted in\n      ipv6IfStatsOutForwDatagrams.\"\n     ::= { ipv6IfStatsEntry 11 }\n\n ipv6IfStatsOutDiscards OBJECT-TYPE\n"..., 4096) = 4096
00:05:28 read(4, "Entry 18 }\n\n ipv6IfStatsInMcastPkts OBJECT-TYPE\n     SYNTAX      Counter32\n     MAX-ACCESS  read-only\n     STATUS     current\n     DESCRIPTION\n        \"The number of multicast packets received\n         by the interface\"\n     ::= { ipv6IfStatsEntry 19 }\n\n ipv6IfStatsOutMcastPkts OBJECT-TYPE\n     SYNTAX      Counter32\n     MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n        \"The number of multicast packets transmitted\n         by the interface\"\n     ::= { ipv6IfStatsEntry 20 }\n\n -- Address Prefix table\n\n -- The IPv6 Address Prefix table contains information on\n -- the entity's IPv6 Address Prefixes that are associated\n -- with IPv6 interfaces.\n\n ipv6AddrPrefixTable OBJECT-TYPE\n     SYNTAX  SEQUENCE OF Ipv6AddrPrefixEntry\n     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n         \"The list of IPv6 address prefixes of\n         IPv6 interfaces.\"\n     ::= { ipv6MIBObjects 7 }\n\n ipv6AddrPrefixEntry OBJECT-TYPE\n     SYNTAX  Ipv6AddrPrefixEntry\n     M"..., 4096) = 4096
00:05:28 read(4, "table\n\n -- The IPv6 address table contains this node's IPv6\n -- addressing information.\n\n ipv6AddrTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF Ipv6AddrEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n      \"The table of addressing information relevant to\n      this node's interface addresses.\"\n    ::= { ipv6MIBObjects 8 }\n\n ipv6AddrEntry OBJECT-TYPE\n    SYNTAX      Ipv6AddrEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"The addressing information for one of this\n        node's interface addresses.\"\n    INDEX   { ipv6IfIndex, ipv6AddrAddress }\n    ::= { ipv6AddrTable 1 }\n\n Ipv6AddrEntry ::=\n    SEQUENCE {\n         ipv6AddrAddress        Ipv6Address,\n         ipv6AddrPfxLength      INTEGER,\n         ipv6AddrType           INTEGER,\n         ipv6AddrAnycastFlag    TruthValue,\n         ipv6AddrStatus         INTEGER\n        }\n\n ipv6AddrAddress OBJECT-TYPE\n    SYNTAX      Ipv6Address\n    MAX-ACCESS  not-accessible\n    STATUS "..., 4096) = 4096
00:05:28 read(4, "      current\n     DESCRIPTION\n       \"The number of routing entries which were chosen\n        to be discarded even though they are valid.  One\n        possible reason for discarding such an entry could\n        be to free-up buffer space for other routing\n        entries.\"\n     ::= { ipv6MIBObjects 10 }\n\n -- IPv6 Routing table\n\n ipv6RouteTable OBJECT-TYPE\n     SYNTAX     SEQUENCE OF Ipv6RouteEntry\n     MAX-ACCESS not-accessible\n     STATUS     current\n     DESCRIPTION\n       \"IPv6 Routing table. This table contains\n       an entry for each valid IPv6 unicast route\n       that can be used for packet forwarding\n       determination.\"\n     ::= { ipv6MIBObjects 11 }\n\n ipv6RouteEntry OBJECT-TYPE\n     SYNTAX     Ipv6RouteEntry\n     MAX-ACCESS not-accessible\n     STATUS     current\n     DESCRIPTION\n             \"A routing entry.\"\n     INDEX   { ipv6RouteDest,\n               ipv6RoutePfxLength,\n               ipv6RouteIndex }\n     ::= { ipv6RouteTable 1 }\n\n Ipv6RouteEntry ::= SEQUENCE {\n      "..., 4096) = 4096
00:05:28 read(4, "   to a route for which the next hop is the final\n        destination; 'remote(4)' refers to a route for\n        which  the  next  hop is not the final\n        destination; 'discard(2)' refers to a route\n        indicating that packets to destinations matching\n        this route are to be discarded (sometimes called\n        black-hole route).\"\n     ::= { ipv6RouteEntry 6 }\n\n ipv6RouteProtocol OBJECT-TYPE\n     SYNTAX     INTEGER {\n       other(1),   -- none of the following\n\n                   -- non-protocol information,\n                   -- e.g., manually configured\n       local(2),   -- entries\n\n       netmgmt(3), -- static route\n\n                   -- obtained via Neighbor\n                   -- Discovery protocol,\n       ndisc(4),   -- e.g., result of Redirect\n\n                   -- the following are all\n                   -- dynamic routing protocols\n       rip(5),     -- RIPng\n       ospf(6),    -- Open Shortest Path First\n       bgp(7),     -- Border Gateway Protocol\n       idrp"..., 4096) = 4096
00:05:28 read(4, "ns specific to the\n        particular routing protocol which is responsible\n        for this route, as determined by the  value\n        specified  in the route's ipv6RouteProto value.\n        If this information is not present,  its  value\n        should be set to the OBJECT ID { 0 0 },\n        which is a syntactically valid object  identifier,\n        and any implementation conforming to ASN.1\n        and the Basic Encoding Rules must  be  able  to\n        generate and recognize this value.\"\n     ::= { ipv6RouteEntry 13 }\n\n ipv6RouteValid OBJECT-TYPE\n     SYNTAX     TruthValue\n     MAX-ACCESS read-write\n     STATUS     current\n     DESCRIPTION\n        \"Setting this object to the value 'false(2)' has\n        the effect of invalidating the corresponding entry\n        in the ipv6RouteTable object.  That is, it\n        effectively disassociates the destination\n\n        identified with said entry from the route\n        identified with said entry.  It is an\n        implementation-specific m"..., 4096) = 4096
00:05:28 read(4, " interface address.\"\n     ::= { ipv6NetToMediaEntry 3 }\n\nipv6IfNetToMediaState OBJECT-TYPE\n    SYNTAX      INTEGER {\n             reachable(1), -- confirmed reachability\n\n             stale(2),     -- unconfirmed reachability\n\n             delay(3),     -- waiting for reachability\n                           -- confirmation before entering\n                           -- the probe state\n\n             probe(4),     -- actively probing\n\n             invalid(5),   -- an invalidated mapping\n\n             unknown(6)    -- state can not be determined\n                           -- for some reason.\n            }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The Neighbor Unreachability Detection [8] state\n        for the interface when the address mapping in\n        this entry is used.\"\n    ::= { ipv6NetToMediaEntry 4 }\n\nipv6IfNetToMediaLastUpdated OBJECT-TYPE\n    SYNTAX      TimeStamp\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The value"..., 4096) = 4096
00:05:28 read(4, " \"An agent is not required to provide write\n                access to this object\"\n          OBJECT    ipv6IfIdentifier\n            MIN-ACCESS  read-only\n            DESCRIPTION\n               \"An agent is not required to provide write\n                access to this object\"\n          OBJECT    ipv6IfIdentifierLength\n            MIN-ACCESS  read-only\n            DESCRIPTION\n               \"An agent is not required to provide write\n                access to this object\"\n\n          OBJECT    ipv6IfAdminStatus\n            MIN-ACCESS  read-only\n            DESCRIPTION\n               \"An agent is not required to provide write\n                access to this object\"\n          OBJECT    ipv6RouteValid\n            MIN-ACCESS  read-only\n            DESCRIPTION\n               \"An agent is not required to provide write\n                access to this object\"\n          OBJECT    ipv6NetToMediaValid\n            MIN-ACCESS  read-only\n            DESCRIPTION\n               \"An agent is not required to p"..., 4096) = 3647
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "       Counter32      ,\n         ipv6IfIcmpOutRedirects\n               Counter32      ,\n         ipv6IfIcmpOutGroupMembQueries\n               Counter32      ,\n         ipv6IfIcmpOutGroupMembResponses\n               Counter32      ,\n         ipv6IfIcmpOutGroupMembReductions\n               Counter32\n\n     }\n\n ipv6IfIcmpInMsgs OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The total number of ICMP messages received\n      by the interface which includes all those\n      counted by ipv6IfIcmpInErrors. Note that this\n      interface is the interface to which the\n      ICMP messages were addressed which may not be\n      necessarily the input interface for the messages.\"\n     ::= { ipv6IfIcmpEntry 1 }\n\n ipv6IfIcmpInErrors OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The number of ICMP messages which the interface\n      received but determined as having ICMP-specifi"..., 4096) = 4096
00:05:28 read(3, "terface.\"\n     ::= { ipv6IfIcmpEntry 14 }\n\n ipv6IfIcmpInGroupMembQueries OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The number of ICMPv6 Group Membership Query\n      messages received by the interface.\"\n     ::= { ipv6IfIcmpEntry 15}\n\n ipv6IfIcmpInGroupMembResponses OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The number of ICMPv6 Group Membership Response messages\n      received by the interface.\"\n     ::= { ipv6IfIcmpEntry 16}\n\n  ipv6IfIcmpInGroupMembReductions OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The number of ICMPv6 Group Membership Reduction messages\n      received by the interface.\"\n     ::= { ipv6IfIcmpEntry 17}\n\n ipv6IfIcmpOutMsgs OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The total number of ICMP messa"..., 4096) = 4096
00:05:28 read(3, "    DESCRIPTION\n      \"The number of ICMP Neighbor Solicitation\n       messages sent by the interface.\"\n     ::= { ipv6IfIcmpEntry 29 }\n\n ipv6IfIcmpOutNeighborAdvertisements OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The number of ICMP Neighbor Advertisement\n      messages sent by the interface.\"\n     ::= { ipv6IfIcmpEntry 30 }\n\n ipv6IfIcmpOutRedirects OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The number of Redirect messages sent. For\n      a host, this object will always be zero,\n      since hosts do not send redirects.\"\n     ::= { ipv6IfIcmpEntry 31 }\n\n ipv6IfIcmpOutGroupMembQueries OBJECT-TYPE\n     SYNTAX     Counter32\n     MAX-ACCESS read-only\n     STATUS     current\n     DESCRIPTION\n      \"The number of ICMPv6 Group Membership Query\n      messages sent.\"\n     ::= { ipv6IfIcmpEntry 32}\n\n ipv6IfIcmpOutGroupMembResponses OBJECT-TYPE\n     SYNTAX   "..., 4096) = 3648
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/IPV6-TCP-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267913, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7257, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "IPV6-TCP-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n   MODULE-COMPLIANCE, OBJECT-GROUP      FROM SNMPv2-CONF\n   MODULE-IDENTITY, OBJECT-TYPE,\n   mib-2, experimental                  FROM SNMPv2-SMI\n   Ipv6Address, Ipv6IfIndexOrZero       FROM IPV6-TC;\n\nipv6TcpMIB MODULE-IDENTITY\n   LAST-UPDATED \"9801290000Z\"\n   ORGANIZATION \"IETF IPv6 MIB Working Group\"\n   CONTACT-INFO\n        \"       Mike Daniele\n\n                Postal: Compaq Computer Corporation\n                        110 Spitbrook Rd\n                        Nashua, NH 03062.\n                        US\n\n                Phone:  +1 603 884 1423\n                Email:  daniele@zk3.dec.com\"\n   DESCRIPTION\n        \"The MIB module for entities implementing TCP over IPv6.\"\n   ::= { experimental 86 }\n\n-- objects specific to TCP for IPv6\n\ntcp      OBJECT IDENTIFIER ::= { mib-2 6 }\n\n-- the TCP over IPv6 Connection table\n\n-- This connection table contains information about this\n-- entity's existing TCP connections between IPv6 endpoints.\n-- Only con"..., 4096) = 4096
00:05:28 read(3, "ion's local address\n\n         (ipv6TcpConnLocalAddress) is not a link-local address, this\n         object identifies a local interface on the same link as\n         the connection's remote link-local address.\n\n         Otherwise, this object identifies the local interface that\n         is associated with the ipv6TcpConnLocalAddress for this\n         TCP connection.  If such a local interface cannot be determined,\n         this object should take on the value 0.  (A possible example\n         of this would be if the value of ipv6TcpConnLocalAddress is ::0.)\n\n         The interface identified by a particular non-0 value of this\n         index is the same interface as identified by the same value\n         of ipv6IfIndex.\n\n         The value of this object must remain constant during the life\n         of the TCP connection.\"\n   ::= { ipv6TcpConnEntry 5 }\n\nipv6TcpConnState OBJECT-TYPE\n   SYNTAX     INTEGER {\n        closed(1),\n        listen(2),\n        synSent(3),\n        synReceived(4),\n   "..., 4096) = 3161
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/IPV6-UDP-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267915, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4400, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "IPV6-UDP-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n   MODULE-COMPLIANCE, OBJECT-GROUP      FROM SNMPv2-CONF\n   MODULE-IDENTITY, OBJECT-TYPE,\n   mib-2, experimental                  FROM SNMPv2-SMI\n   Ipv6Address, Ipv6IfIndexOrZero       FROM IPV6-TC;\n\nipv6UdpMIB MODULE-IDENTITY\n   LAST-UPDATED \"9801290000Z\"\n   ORGANIZATION \"IETF IPv6 MIB Working Group\"\n   CONTACT-INFO\n        \"               Mike Daniele\n\n                Postal: Compaq Computer Corporation\n                        110 Spitbrook Rd\n                        Nashua, NH 03062.\n                        US\n\n                Phone:  +1 603 884 1423\n                Email:  daniele@zk3.dec.com\"\n   DESCRIPTION\n        \"The MIB module for entities implementing UDP over IPv6.\"\n   ::= { experimental 87 }\n\n-- objects specific to UDP for IPv6\n\nudp      OBJECT IDENTIFIER ::= { mib-2 7 }\n\n-- the UDP over IPv6 Listener table\n\n-- This table contains information about this entity's\n-- UDP/IPv6 endpoints.  Only endpoints utilizing IPv6 addresses\n-- a"..., 4096) = 4096
00:05:28 read(3, "ed in this module\n               -- ipv6UdpLocalAddress (not-accessible)\n               -- ipv6UdpLocalPort (not-accessible)\n               ipv6UdpIfIndex }\n   STATUS    current\n   DESCRIPTION\n        \"The group of objects providing management of\n         UDP over IPv6.\"\n   ::= { ipv6UdpGroups 1 }\n\nEND\n", 4096) = 304
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/IP-FORWARD-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267903, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=96, st_size=46286, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "IP-FORWARD-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    IpAddress, Integer32, Gauge32,\n    Counter32                          FROM SNMPv2-SMI\n    RowStatus                          FROM SNMPv2-TC\n\n    MODULE-COMPLIANCE, OBJECT-GROUP    FROM SNMPv2-CONF\n    InterfaceIndexOrZero               FROM IF-MIB\n    ip                                 FROM IP-MIB\n    IANAipRouteProtocol                FROM IANA-RTPROTO-MIB\n    InetAddress, InetAddressType,\n    InetAddressPrefixLength,\n    InetAutonomousSystemNumber         FROM INET-ADDRESS-MIB;\n\nipForward MODULE-IDENTITY\n    LAST-UPDATED \"200602010000Z\"\n    ORGANIZATION\n           \"IETF IPv6 Working Group\n            http://www.ietf.org/html.charters/ipv6-charter.html\"\n    CONTACT-INFO\n           \"Editor:\n            Brian Haberman\n            Johns Hopkins University - Applied Physics Laboratory\n            Mailstop 17-S442\n            11100 Johns Hopkins Road\n            Laurel MD,  20723-6099  USA\n\n            Phon"..., 4096) = 4096
00:05:28 open("/usr/share/snmp/mibs/IANA-RTPROTO-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267893, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3513, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "IANA-RTPROTO-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, mib-2           FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION               FROM SNMPv2-TC;\n\nianaRtProtoMIB  MODULE-IDENTITY\n    LAST-UPDATED \"200009260000Z\" -- September 26, 2000\n    ORGANIZATION \"IANA\"\n    CONTACT-INFO\n            \" Internet Assigned Numbers Authority\n              Internet Corporation for Assigned Names and Numbers\n              4676 Admiralty Way, Suite 330\n              Marina del Rey, CA 90292-6601\n\n              Phone: +1 310 823 9358\n              EMail: iana&iana.org\"\n    DESCRIPTION\n            \"This MIB module defines the IANAipRouteProtocol and\n            IANAipMRouteProtocol textual conventions for use in MIBs\n            which need to identify unicast or multicast routing\n            mechanisms.\n\n            Any additions or changes to the contents of this MIB module\n            require either publication of an RFC, or Designated Expert\n            Review as defined in RFC 2434, Guidelines for"..., 4096) = 3513
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "           inetCidrRouteDest, inetCidrRoutePolicy, and\n            inetCidrRouteNextHop exceeds 111, then OIDs of column\n            instances in this table will have more than 128 sub-\n            identifiers and cannot be accessed using SNMPv1,\n            SNMPv2c, or SNMPv3.\"\n    INDEX {\n        inetCidrRouteDestType,\n        inetCidrRouteDest,\n        inetCidrRoutePfxLen,\n        inetCidrRoutePolicy,\n        inetCidrRouteNextHopType,\n        inetCidrRouteNextHop\n        }\n    ::= { inetCidrRouteTable 1 }\n\nInetCidrRouteEntry ::= SEQUENCE {\n        inetCidrRouteDestType     InetAddressType,\n        inetCidrRouteDest         InetAddress,\n        inetCidrRoutePfxLen       InetAddressPrefixLength,\n        inetCidrRoutePolicy       OBJECT IDENTIFIER,\n        inetCidrRouteNextHopType  InetAddressType,\n        inetCidrRouteNextHop      InetAddress,\n        inetCidrRouteIfIndex      InterfaceIndexOrZero,\n        inetCidrRouteType         INTEGER,\n        inetCidrRouteProto        IANAipRout"..., 4096) = 4096
00:05:28 read(3, "this object.\"\n    ::= { inetCidrRouteEntry 4 }\n\ninetCidrRouteNextHopType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The type of the inetCidrRouteNextHop address, as\n            defined in the InetAddress MIB.\n\n            Value should be set to unknown(0) for non-remote\n            routes.\n\n            Only those address types that may appear in an actual\n            routing table are allowed as values of this object.\"\n    REFERENCE \"RFC 4001\"\n    ::= { inetCidrRouteEntry 5 }\n\ninetCidrRouteNextHop OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"On remote routes, the address of the next system en\n\n            route.  For non-remote routes, a zero length string.\n\n            The type of this address is determined by the value of\n            the inetCidrRouteNextHopType object.\"\n    ::= { inetCidrRouteEntry 6 }\n\ninetCidrRouteIfIndex OBJEC"..., 4096) = 4096
00:05:28 read(3, "drRouteMetric1 OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n           \"The primary routing metric for this route.  The\n            semantics of this metric are determined by the routing-\n            protocol specified in the route's inetCidrRouteProto\n            value.  If this metric is not used, its value should be\n            set to -1.\"\n    DEFVAL { -1 }\n    ::= { inetCidrRouteEntry 12 }\n\ninetCidrRouteMetric2 OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n           \"An alternate routing metric for this route.  The\n            semantics of this metric are determined by the routing-\n            protocol specified in the route's inetCidrRouteProto\n            value.  If this metric is not used, its value should be\n            set to -1.\"\n    DEFVAL { -1 }\n    ::= { inetCidrRouteEntry 13 }\n\ninetCidrRouteMetric3 OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-cre"..., 4096) = 4096
00:05:28 read(3, "0), ipv4(1),\n            --                              ipv6(2), ipv4z(3)\n            --                              ipv6z(4))\n            -- DESCRIPTION\n            --     This MIB requires support for global and\n            --     non-global ipv4 and ipv6 addresses.\n            --\n            -- OBJECT      inetCidrRouteNextHop\n            -- SYNTAX      InetAddress (SIZE (0 | 4 | 8 | 16 | 20))\n            -- DESCRIPTION\n            --     This MIB requires support for global and\n            --     non-global IPv4 and IPv6 addresses.\n            \"\n\n   MODULE -- this module\n   MANDATORY-GROUPS { inetForwardCidrRouteGroup }\n\n   OBJECT        inetCidrRouteStatus\n   SYNTAX        RowStatus { active(1), notInService (2) }\n   WRITE-SYNTAX  RowStatus { active(1), notInService (2),\n                             createAndGo(4), destroy(6) }\n   DESCRIPTION  \"Support for createAndWait is not required.\"\n   ::= { ipForwardCompliances 3 }\n\nipForwardReadOnlyCompliance MODULE-COMPLIANCE\n   STATUS  "..., 4096) = 4096
00:05:28 read(3, "ssible\n    STATUS     deprecated\n    DESCRIPTION\n           \"A particular route to a particular destination, under a\n\n            particular policy.\"\n    INDEX {\n        ipCidrRouteDest,\n        ipCidrRouteMask,\n        ipCidrRouteTos,\n        ipCidrRouteNextHop\n        }\n       ::= { ipCidrRouteTable 1 }\n\nIpCidrRouteEntry ::= SEQUENCE {\n        ipCidrRouteDest       IpAddress,\n        ipCidrRouteMask       IpAddress,\n        ipCidrRouteTos        Integer32,\n        ipCidrRouteNextHop    IpAddress,\n        ipCidrRouteIfIndex    Integer32,\n        ipCidrRouteType       INTEGER,\n        ipCidrRouteProto      INTEGER,\n        ipCidrRouteAge        Integer32,\n        ipCidrRouteInfo       OBJECT IDENTIFIER,\n        ipCidrRouteNextHopAS  Integer32,\n        ipCidrRouteMetric1    Integer32,\n        ipCidrRouteMetric2    Integer32,\n        ipCidrRouteMetric3    Integer32,\n        ipCidrRouteMetric4    Integer32,\n        ipCidrRouteMetric5    Integer32,\n        ipCidrRouteStatus     RowStatus\n "..., 4096) = 4096
00:05:28 read(3, "s\n    MAX-ACCESS read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"On remote routes, the address of the next system en\n            route; Otherwise, 0.0.0.0.\"\n    ::= { ipCidrRouteEntry 4 }\n\nipCidrRouteIfIndex OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-create\n    STATUS     deprecated\n    DESCRIPTION\n           \"The ifIndex value that identifies the local interface\n            through which the next hop of this route should be\n            reached.\"\n    DEFVAL { 0 }\n    ::= { ipCidrRouteEntry 5 }\n\nipCidrRouteType OBJECT-TYPE\n    SYNTAX     INTEGER {\n                other    (1), -- not specified by this MIB\n                reject   (2), -- route that discards traffic\n                local    (3), -- local interface\n                remote   (4)  -- remote destination\n             }\n    MAX-ACCESS read-create\n    STATUS     deprecated\n    DESCRIPTION\n           \"The type of route.  Note that local(3) refers to a\n            route for which the next hop is the f"..., 4096) = 4096
00:05:28 read(3, "uteNextHopAS OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-create\n    STATUS     deprecated\n    DESCRIPTION\n           \"The Autonomous System Number of the Next Hop.  The\n            semantics of this object are determined by the routing-\n            protocol specified in the route's ipCidrRouteProto\n            value.  When this object is unknown or not relevant, its\n            value should be set to zero.\"\n    DEFVAL { 0 }\n    ::= { ipCidrRouteEntry 10 }\n\nipCidrRouteMetric1 OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-create\n    STATUS     deprecated\n    DESCRIPTION\n           \"The primary routing metric for this route.  The\n            semantics of this metric are determined by the routing-\n            protocol specified in the route's ipCidrRouteProto\n            value.  If this metric is not used, its value should be\n            set to -1.\"\n    DEFVAL { -1 }\n    ::= { ipCidrRouteEntry 11 }\n\nipCidrRouteMetric2 OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACC"..., 4096) = 4096
00:05:28 read(3, "            This group has been deprecated and replaced with\n            inetForwardCidrRouteGroup.\"\n    ::= { ipForwardGroups 3 }\n\n-- Obsoleted Definitions - Objects\n\nipForwardNumber OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS read-only\n    STATUS     obsolete\n    DESCRIPTION\n           \"The number of current ipForwardTable entries that are\n            not invalid.\"\n    ::= { ipForward 1 }\n\n--  IP Forwarding Table\n\n--  The IP Forwarding Table obsoletes and replaces the ipRoute\n--  Table current in MIB-I and MIB-II.  It adds knowledge of\n--  the autonomous system of the next hop, multiple next hop\n--  support, and policy routing support.\n\nipForwardTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpForwardEntry\n    MAX-ACCESS not-accessible\n    STATUS     obsolete\n    DESCRIPTION\n           \"This entity's IP Routing table.\"\n    REFERENCE\n           \"RFC 1213 Section 6.6, The IP Group\"\n    ::= { ipForward 2 }\n\nipForwardEntry OBJECT-TYPE\n    SYNTAX     IpForwardEntry\n    MAX-ACCESS not-"..., 4096) = 4096
00:05:28 read(3, "\n\n            Unless the mechanism indicated by ipForwardProto\n            specifies otherwise, the policy specifier is\n            the IP TOS Field.  The encoding of IP TOS is as\n            specified by the following convention.  Zero\n            indicates the default path if no more specific\n            policy applies.\n\n            +-----+-----+-----+-----+-----+-----+-----+-----+\n            |                 |                       |     |\n            |   PRECEDENCE    |    TYPE OF SERVICE    |  0  |\n            |                 |                       |     |\n            +-----+-----+-----+-----+-----+-----+-----+-----+\n\n                         IP TOS                IP TOS\n               Field     Policy      Field     Policy\n               Contents    Code      Contents    Code\n               0 0 0 0  ==>   0      0 0 0 1  ==>   2\n               0 0 1 0  ==>   4      0 0 1 1  ==>   6\n               0 1 0 0  ==>   8      0 1 0 1  ==>  10\n               0 1 1 0  ==>  12      0 1"..., 4096) = 4096
00:05:28 read(3, "is     (9),  -- Dual IS-IS\n                es-is     (10), -- ISO 9542\n                ciscoIgrp (11), -- Cisco IGRP\n                bbnSpfIgp (12), -- BBN SPF IGP\n                ospf      (13), -- Open Shortest Path First\n                bgp       (14), -- Border Gateway Protocol\n                idpr      (15)  -- InterDomain Policy Routing\n             }\n    MAX-ACCESS read-only\n    STATUS     obsolete\n    DESCRIPTION\n           \"The routing mechanism via which this route was learned.\n            Inclusion of values for gateway routing protocols is\n            not intended to imply that hosts should support those\n            protocols.\"\n    ::= { ipForwardEntry 7 }\n\nipForwardAge OBJECT-TYPE\n    SYNTAX     Integer32\n    MAX-ACCESS read-only\n    STATUS     obsolete\n    DESCRIPTION\n           \"The number of seconds since this route was last updated\n            or otherwise determined to be correct.  Note that no\n            semantics of `too old' can be implied except through\n         "..., 4096) = 4096
00:05:28 read(3, "te\n    DESCRIPTION\n           \"An alternate routing metric for this route.  The\n            semantics of this metric are determined by the routing-\n            protocol specified in the route's ipForwardProto value.\n            If this metric is not used, its value should be set to\n            -1.\"\n    DEFVAL { -1 }\n    ::= { ipForwardEntry 15 }\n\n-- Obsoleted Definitions - Groups\n-- compliance statements\n\nipForwardOldCompliance MODULE-COMPLIANCE\n    STATUS     obsolete\n    DESCRIPTION\n           \"The compliance statement for SNMP entities that\n            implement the ipForward MIB.\"\n\n   MODULE  -- this module\n   MANDATORY-GROUPS { ipForwardMultiPathGroup }\n   ::= { ipForwardCompliances 2 }\n\nipForwardMultiPathGroup OBJECT-GROUP\n    OBJECTS { ipForwardNumber,\n              ipForwardDest, ipForwardMask, ipForwardPolicy,\n              ipForwardNextHop, ipForwardIfIndex, ipForwardType,\n              ipForwardProto, ipForwardAge, ipForwardInfo,\n              ipForwardNextHopAS,\n           "..., 4096) = 1230
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/NET-SNMP-PASS-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267929, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3350, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "NET-SNMP-PASS-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Example MIB objects for \"pass\" and \"pass-persist\" extension script\n--\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, TimeTicks, IpAddress,\n          Counter32, Gauge32, Integer32     FROM SNMPv2-SMI\n    SnmpAdminString                         FROM SNMP-FRAMEWORK-MIB\n    netSnmpExamples                         FROM NET-SNMP-EXAMPLES-MIB\n;\n\nnetSnmpPassExamples MODULE-IDENTITY\n    LAST-UPDATED \"200905280000Z\"\n    ORGANIZATION \"www.net-snmp.org\"\n    CONTACT-INFO    \n\t \"postal:   Wes Hardaker\n                    P.O. Box 382\n                    Davis CA  95617\n\n          email:    net-snmp-coders@lists.sourceforge.net\"\n    DESCRIPTION\n\t\"Example MIB objects for pass/pass-persist extension script\"\n    ::= { netSnmpExamples 255 }\n\n--\n-- Example scalars\n--\n\nnetSnmpPassString OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION \"Example string scalar object.\"\n    DEFVAL { \"Life, the Universe, and"..., 4096) = 3350
00:05:28 open("/usr/share/snmp/mibs/NET-SNMP-EXAMPLES-MIB.txt", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=108267923, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9160, st_atime=2017/03/22-11:45:22, st_mtime=2017/03/22-11:45:22, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e203000
00:05:28 read(4, "NET-SNMP-EXAMPLES-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Example MIB objects for agent module example implementations\n--\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32,\n    NOTIFICATION-TYPE                       FROM SNMPv2-SMI\n    SnmpAdminString                         FROM SNMP-FRAMEWORK-MIB\n    netSnmp                                 FROM NET-SNMP-MIB\n    RowStatus, StorageType                  FROM SNMPv2-TC\n    InetAddressType, InetAddress            FROM INET-ADDRESS-MIB\n;\n\nnetSnmpExamples MODULE-IDENTITY\n    LAST-UPDATED \"200406150000Z\"\n    ORGANIZATION \"www.net-snmp.org\"\n    CONTACT-INFO    \n\t \"postal:   Wes Hardaker\n                    P.O. Box 382\n                    Davis CA  95617\n\n          email:    net-snmp-coders@lists.sourceforge.net\"\n    DESCRIPTION\n\t\"Example MIB objects for agent module example implementations\"\n    REVISION     \"200406150000Z\"\n    DESCRIPTION\n\t\"Corrected notification example definitions\"\n    REVISION     \"200202060000Z\"\n    DESCRIPTION\n\t\"First draf"..., 4096) = 4096
00:05:28 read(4, "file.\"\n    ::= { netSnmpExampleTables 1 }\n\nnetSnmpIETFWGEntry OBJECT-TYPE\n    SYNTAX      NetSnmpIETFWGEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n\t\"A row describing a given working group\"\n    INDEX   { nsIETFWGName }\n    ::= {netSnmpIETFWGTable 1 }\n\nNetSnmpIETFWGEntry ::= SEQUENCE {\n\tnsIETFWGName\tOCTET STRING,\n\tnsIETFWGChair1\tOCTET STRING,\n\tnsIETFWGChair2\tOCTET STRING\n}\n\nnsIETFWGName OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(1..32))\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n\t\"The name of the IETF Working Group this table describes.\"\n    ::= { netSnmpIETFWGEntry 1 }\n\nnsIETFWGChair1 OBJECT-TYPE\n    SYNTAX      OCTET STRING\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n\t\"One of the names of the chairs for the IETF working group.\"\n    ::= { netSnmpIETFWGEntry 2 }\n\nnsIETFWGChair2 OBJECT-TYPE\n    SYNTAX      OCTET STRING\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n\t\"The other nam"..., 4096) = 4096
00:05:28 read(4, "the cause of the heart beating faster.\"\n::= { netSnmpExampleNotificationObjects 2 }\n\nnetSnmpExampleHeartbeatNotification NOTIFICATION-TYPE\n    OBJECTS     { netSnmpExampleHeartbeatRate }\n    STATUS      current\n    DESCRIPTION\n        \"An example notification, used to illustrate the\n         definition and generation of trap and inform PDUs\n         (including the use of both standard and additional\n         varbinds in the notification payload).\n         This notification will typically be sent every\n\t 30 seconds, using the code found in the example module\n             agent/mibgroup/examples/notification.c\"\n::= { netSnmpExampleNotificationPrefix 1 }\n    \nnetSnmpExampleNotification OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  accessible-for-notify\n    STATUS      obsolete\n    DESCRIPTION\n        \"This object was improperly defined for its original purpose,\n         and should no longer be used.\"\n::= { netSnmpExampleNotifications 1 }\n\nEND\n", 4096) = 968
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e203000, 4096)   = 0
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/NET-SNMP-EXTEND-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267925, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9198, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "NET-SNMP-EXTEND-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Defines a framework for scripted extensions\n--\n\nIMPORTS\n    nsExtensions FROM NET-SNMP-AGENT-MIB\n\n    OBJECT-TYPE, NOTIFICATION-TYPE, MODULE-IDENTITY, Integer32\n        FROM SNMPv2-SMI\n\n    OBJECT-GROUP, NOTIFICATION-GROUP\n\tFROM SNMPv2-CONF\n\n    DisplayString, RowStatus, StorageType FROM SNMPv2-TC;\n\n\nnetSnmpExtendMIB MODULE-IDENTITY\n    LAST-UPDATED \"200405080000Z\"\n    ORGANIZATION \"www.net-snmp.org\"\n    CONTACT-INFO    \n\t \"postal:   Wes Hardaker\n                    P.O. Box 382\n                    Davis CA  95617\n\n          email:    net-snmp-coders@lists.sourceforge.net\"\n    DESCRIPTION\n\t \"Defines a framework for scripted extensions for the Net-SNMP agent.\"\n    REVISION     \"200405080000Z\"\n    DESCRIPTION\n\t\"First revision.\"\n    ::= { nsExtensions 1 }\n\nnsExtendObjects  OBJECT IDENTIFIER ::= { nsExtensions 2}\nnsExtendGroups   OBJECT IDENTIFIER ::= { nsExtensions 3}\n\nnsExtendNumEntries OBJECT-TYPE\n    SYNTAX      INTEGER\n    MAX-ACCESS  r"..., 4096) = 4096
00:05:28 read(3, "d (3)\n               }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n      \"Used to implement 'push-button' command invocation.\n       The command for a 'run-on-read' entry will be invoked\n       whenever one of the corresponding output-related\n       instances is requested (and assuming the cached value\n       is not still current).\n       The command for a 'run-on-set' entry will only be invoked\n       on receipt of a SET assignment for this object with the\n       value 'run-command'.\n       Reading an instance of this object will always return either\n       'run-on-read' or 'run-on-set'.\n      \"\n    DEFVAL      { run-on-read }\n    ::= { nsExtendConfigEntry 7 }\n\n    --\n    --  Standard table-manipulation objects\n    --\n\nnsExtendStorage OBJECT-TYPE\n    SYNTAX      StorageType\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n      \"The storage type for this conceptual row.\"\n    DEFVAL      { volatile }\n    ::= { nsExtendConfigEntry 20 }\n\nnsExten"..., 4096) = 4096
00:05:28 read(3, " the corresponding value of nsExtendNumLines.\"\n    ::= { nsExtendOutput2Entry 1 }\n\nnsExtendOutLine OBJECT-TYPE\n    SYNTAX      DisplayString\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"A single line of output from the extension command.\"\n    ::= { nsExtendOutput2Entry 2 }\n\n--\n-- Conformance-related definitions\n--\n\nnsExtendConfigGroup  OBJECT-GROUP\n    OBJECTS {\n        nsExtendCommand,   nsExtendArgs,     nsExtendInput,\n        nsExtendCacheTime, nsExtendExecType, nsExtendRunType,\n        nsExtendStorage,   nsExtendStatus,   nsExtendNumEntries\n    }\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Objects relating to the configuration of extension commands.\"\n    ::= { nsExtendGroups 1 }\n\nnsExtendOutputGroup  OBJECT-GROUP\n    OBJECTS {\n        nsExtendOutNumLines, nsExtendResult,\n        nsExtendOutLine,   nsExtendOutput1Line, nsExtendOutputFull\n    }\n    STATUS\tcurrent\n    DESCRIPTION\n\t\"Objects relating to the output of extension commands.\"\n    ::= { nsExtendGroups 2 }"..., 4096) = 1006
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/UCD-DLMOD-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267989, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3010, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "UCD-DLMOD-MIB DEFINITIONS ::= BEGIN\n\n-- Why do we have dlmodNextIndex if the dlmodTable is read-write?\n-- What exactly is the dlmodName and dlmodPath?\n-- Should there not be a timestamp associated with dlmodError?\n-- What exactly do the dlmodStatus enumerations mean?\n\nIMPORTS\n    OBJECT-TYPE, MODULE-IDENTITY, Integer32\tFROM SNMPv2-SMI\n    DisplayString\t\t\t\tFROM SNMPv2-TC\n    ucdExperimental\t\t\t\tFROM UCD-SNMP-MIB;\n\nucdDlmodMIB MODULE-IDENTITY\n    LAST-UPDATED \"9912100000Z\"\n    ORGANIZATION \"University of California, Davis\"\n    CONTACT-INFO    \n\t\"This mib is no longer being maintained by the University of\n\t California and is now in life-support-mode and being\n\t maintained by the net-snmp project.  The best place to write\n\t for public questions about the net-snmp-coders mailing list\n\t at net-snmp-coders@lists.sourceforge.net.\n\n         postal:   Wes Hardaker\n                   P.O. Box 382\n                   Davis CA  95617\n\n         email:    net-snmp-coders@lists.sourceforge.net\n        \""..., 4096) = 3010
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SNMP-NOTIFICATION-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267957, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=20014, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "SNMP-NOTIFICATION-MIB DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY,\n    OBJECT-TYPE,\n    snmpModules\n        FROM SNMPv2-SMI\n\n    RowStatus,\n    StorageType\n        FROM SNMPv2-TC\n\n    SnmpAdminString\n        FROM SNMP-FRAMEWORK-MIB\n\n    SnmpTagValue,\n    snmpTargetParamsName\n        FROM SNMP-TARGET-MIB\n\n    MODULE-COMPLIANCE,\n    OBJECT-GROUP\n        FROM SNMPv2-CONF;\n\nsnmpNotificationMIB MODULE-IDENTITY\n    LAST-UPDATED \"200210140000Z\"\n    ORGANIZATION \"IETF SNMPv3 Working Group\"\n    CONTACT-INFO\n        \"WG-email:   snmpv3@lists.tislabs.com\n         Subscribe:  majordomo@lists.tislabs.com\n                     In message body:  subscribe snmpv3\n\n         Co-Chair:   Russ Mundy\n                     Network Associates Laboratories\n         Postal:     15204 Omega Drive, Suite 300\n                     Rockville, MD 20850-4601\n                     USA\n         EMail:      mundy@tislabs.com\n         Phone:      +1 301-947-7107\n\n         Co-Chair:   David Harrington\n                "..., 4096) = 4096
00:05:28 read(3, "AX      SnmpAdminString (SIZE(1..32))\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"The locally arbitrary, but unique identifier associated\n         with this snmpNotifyEntry.\"\n    ::= { snmpNotifyEntry 1 }\n\nsnmpNotifyTag OBJECT-TYPE\n    SYNTAX      SnmpTagValue\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object contains a single tag value which is used\n         to select entries in the snmpTargetAddrTable.  Any entry\n         in the snmpTargetAddrTable which contains a tag value\n         which is equal to the value of an instance of this\n         object is selected.  If this object contains a value\n         of zero length, no entries are selected.\"\n    DEFVAL { \"\" }\n    ::= { snmpNotifyEntry 2 }\n\nsnmpNotifyType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                    trap(1),\n                    inform(2)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object de"..., 4096) = 4096
00:05:28 read(3, "orageType\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The storage type for this conceptual row.\n         Conceptual rows having the value 'permanent' need not\n         allow write-access to any columnar objects in the row.\"\n    DEFVAL { nonVolatile }\n    ::= { snmpNotifyFilterProfileEntry 2 }\n\nsnmpNotifyFilterProfileRowStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The status of this conceptual row.\n\n         To create a row in this table, a manager must\n         set this object to either createAndGo(4) or\n         createAndWait(5).\n\n         Until instances of all corresponding columns are\n         appropriately configured, the value of the\n         corresponding instance of the\n         snmpNotifyFilterProfileRowStatus column is 'notReady'.\n\n         In particular, a newly created row cannot be made\n         active until the corresponding instance of\n         snmpNotifyFilterPr"..., 4096) = 4096
00:05:28 read(3, "        i.e., any sub-identifier value matches.\n\n         Thus, the OBJECT IDENTIFIER X of an object instance\n         is contained in a family of filter subtrees if, for\n         each sub-identifier of the value of\n         snmpNotifyFilterSubtree, either:\n\n           the i-th bit of snmpNotifyFilterMask is 0, or\n\n           the i-th sub-identifier of X is equal to the i-th\n           sub-identifier of the value of\n           snmpNotifyFilterSubtree.\n\n         If the value of this bit mask is M bits long and\n         there are more than M sub-identifiers in the\n         corresponding instance of snmpNotifyFilterSubtree,\n         then the bit mask is extended with 1's to be the\n         required length.\n\n         Note that when the value of this object is the\n         zero-length string, this extension rule results in\n         a mask of all-1's being used (i.e., no 'wild card'),\n         and the family of filter subtrees is the one\n         subtree uniquely identified by the correspond"..., 4096) = 4096
00:05:28 read(3, "CCESS    read-only\n        DESCRIPTION\n            \"Create/delete/modify access to the\n             snmpTargetParamsTable is not required.\n             Support of the values notInService(2), notReady(3),\n             createAndGo(4), createAndWait(5), and destroy(6) is\n             not required.\"\n\n    MODULE -- This Module\n        MANDATORY-GROUPS { snmpNotifyGroup }\n\n        OBJECT snmpNotifyTag\n        MIN-ACCESS    read-only\n        DESCRIPTION\n            \"Create/delete/modify access is not required.\"\n\n        OBJECT snmpNotifyType\n        SYNTAX INTEGER {\n            trap(1)\n        }\n        MIN-ACCESS    read-only\n        DESCRIPTION\n            \"Create/delete/modify access is not required.\n             Support of the value notify(2) is not required.\"\n\n        OBJECT snmpNotifyStorageType\n        SYNTAX INTEGER {\n            readOnly(5)\n        }\n        MIN-ACCESS    read-only\n        DESCRIPTION\n            \"Create/delete/modify access is not required.\n             Support of t"..., 4096) = 3630
00:05:28 brk(0x19c8000)                 = 0x19c8000
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/SNMPv2-TM.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267979, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5775, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "SNMPv2-TM DEFINITIONS ::= BEGIN\n\nIMPORTS\n    MODULE-IDENTITY, OBJECT-IDENTITY,\n    snmpModules, snmpDomains, snmpProxys\n        FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION\n        FROM SNMPv2-TC;\n\nsnmpv2tm MODULE-IDENTITY\n    LAST-UPDATED \"200210160000Z\"\n    ORGANIZATION \"IETF SNMPv3 Working Group\"\n    CONTACT-INFO\n            \"WG-EMail:   snmpv3@lists.tislabs.com\n             Subscribe:  snmpv3-request@lists.tislabs.com\n\n             Co-Chair:   Russ Mundy\n                         Network Associates Laboratories\n             postal:     15204 Omega Drive, Suite 300\n                         Rockville, MD 20850-4601\n                         USA\n             EMail:      mundy@tislabs.com\n             phone:      +1 301 947-7107\n\n             Co-Chair:   David Harrington\n                         Enterasys Networks\n             postal:     35 Industrial Way\n                         P. O. Box 5005\n                         Rochester, NH 03866-5005\n                         USA\n             EMail: "..., 4096) = 4096
00:05:28 read(3, "'n' as an unsigned integer\n          2..(n+1)     object            string of (up to 32) octets\n           n+2         length of type    'p' as an unsigned integer\n      (n+3)..(n+2+p)   type              string of (up to 32) octets\n          n+3+p        length of zone    'q' as an unsigned integer\n    (n+4+p)..(n+3+p+q) zone              string of (up to 32) octets\n\n            For comparison purposes, strings are\n            case-insensitive. All strings may contain any octet\n            other than 255 (hex ff).\"\n    SYNTAX       OCTET STRING (SIZE (3..99))\n\n-- SNMP over IPX\n\nsnmpIPXDomain  OBJECT-IDENTITY\n    STATUS     current\n    DESCRIPTION\n            \"The SNMP over IPX transport domain.  The corresponding\n            transport address is of type SnmpIPXAddress.\"\n    ::= { snmpDomains 5 }\n\nSnmpIPXAddress ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"4x.1x:1x:1x:1x:1x:1x.2d\"\n    STATUS       current\n    DESCRIPTION\n            \"Represents an IPX address:\n\n               octets   cont"..., 4096) = 1679
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 open("/usr/share/snmp/mibs/NET-SNMP-VACM-MIB.txt", O_RDONLY) = 3
00:05:28 fstat(3, {st_dev=makedev(145, 128), st_ino=108267933, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5039, st_atime=2017/03/22-11:45:23, st_mtime=2017/03/22-11:45:23, st_ctime=2017/08/02-14:26:35}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e204000
00:05:28 read(3, "NET-SNMP-VACM-MIB DEFINITIONS ::= BEGIN\n\n--\n-- Defines Net-SNMP extensions to the standard VACM view table.\n--\n\nIMPORTS\n    SnmpAdminString\n    \tFROM SNMP-FRAMEWORK-MIB\n\n    netSnmpObjects, netSnmpGroups\n\tFROM NET-SNMP-MIB\n\n    vacmGroupName, vacmAccessContextPrefix, vacmAccessSecurityModel,\n    vacmAccessSecurityLevel\n        FROM SNMP-VIEW-BASED-ACM-MIB\n\n    OBJECT-TYPE, MODULE-IDENTITY\n        FROM SNMPv2-SMI\n\n    OBJECT-GROUP, NOTIFICATION-GROUP\n\tFROM SNMPv2-CONF\n\n    TEXTUAL-CONVENTION, DisplayString, RowStatus, StorageType\n\tFROM SNMPv2-TC;\n\n\nnetSnmpVacmMIB MODULE-IDENTITY\n    LAST-UPDATED \"200608270000Z\"\n    ORGANIZATION \"www.net-snmp.org\"\n    CONTACT-INFO    \n\t \"postal:   Wes Hardaker\n                    P.O. Box 382\n                    Davis CA  95617\n\n          email:    net-snmp-coders@lists.sourceforge.net\"\n    DESCRIPTION\n         \"Defines Net-SNMP extensions to the standard VACM view table.\"\n    REVISION     \"200608270000Z\"\n    DESCRIPTION\n        \"First draft\"\n    ::= { n"..., 4096) = 4096
00:05:28 read(3, "across\n                 all nsVacmAccessEntries corresponding to a single\n                 row of the vacmAccessTable.\n                \"\n    DEFVAL      { nonVolatile }\n    ::= { nsVacmAccessEntry 4 }\n\nnsVacmStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION \"The status of this (group of) conceptual rows.\n\n                 The  RowStatus TC [RFC2579] requires that this\n                 DESCRIPTION clause states under which circumstances\n                 other objects in this row can be modified:\n\n                 The value of this object has no effect on whether\n                 other objects in this conceptual row can be modified.\n\n                 The value of this object should be consistent across\n                 all nsVacmAccessEntries corresponding to a single\n                 row of the vacmAccessTable.\n                \"\n    ::= { nsVacmAccessEntry 5 }\n\nEND\n", 4096) = 943
00:05:28 read(3, "", 4096)              = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe60e204000, 4096)   = 0
00:05:28 stat("/etc/snmp", {st_dev=makedev(145, 128), st_ino=59527938, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-16:52:14, st_mtime=2017/03/22-11:45:23, st_ctime=2018/11/25-16:52:15}) = 0
00:05:28 open("/etc/snmp/snmp.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 open("/etc/snmp/snmp.local.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 stat("/usr/share/snmp", {st_dev=makedev(145, 128), st_ino=9451010, st_mode=S_IFDIR|0755, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=264, st_atime=2018/11/25-16:52:14, st_mtime=2018/06/16-02:33:19, st_ctime=2018/11/25-16:52:15}) = 0
00:05:28 open("/usr/share/snmp/snmp.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 open("/usr/share/snmp/snmp.local.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 stat("/usr/lib64/snmp", 0x7ffc320d88c0) = -1 ENOENT (No such file or directory)
00:05:28 stat("/var/lib/net-snmp", {st_dev=makedev(145, 128), st_ino=29380776, st_mode=S_IFDIR|0755, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-16:52:11, st_mtime=2018/11/26-08:51:59, st_ctime=2018/11/26-08:51:59}) = 0
00:05:28 stat("/var/lib/net-snmp/snmp.0.conf", 0x7ffc320d88c0) = -1 ENOENT (No such file or directory)
00:05:28 open("/var/lib/net-snmp/snmp.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 open("/var/lib/net-snmp/snmp.local.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 stat("/etc/snmp", {st_dev=makedev(145, 128), st_ino=59527938, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-16:52:14, st_mtime=2017/03/22-11:45:23, st_ctime=2018/11/25-16:52:15}) = 0
00:05:28 open("/etc/snmp/snmpapp.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 open("/etc/snmp/snmpapp.local.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 stat("/usr/share/snmp", {st_dev=makedev(145, 128), st_ino=9451010, st_mode=S_IFDIR|0755, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=264, st_atime=2018/11/25-16:52:14, st_mtime=2018/06/16-02:33:19, st_ctime=2018/11/25-16:52:15}) = 0
00:05:28 open("/usr/share/snmp/snmpapp.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 open("/usr/share/snmp/snmpapp.local.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 stat("/usr/lib64/snmp", 0x7ffc320d88c0) = -1 ENOENT (No such file or directory)
00:05:28 stat("/var/lib/net-snmp", {st_dev=makedev(145, 128), st_ino=29380776, st_mode=S_IFDIR|0755, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-16:52:11, st_mtime=2018/11/26-08:51:59, st_ctime=2018/11/26-08:51:59}) = 0
00:05:28 stat("/var/lib/net-snmp/snmpapp.0.conf", 0x7ffc320d88c0) = -1 ENOENT (No such file or directory)
00:05:28 open("/var/lib/net-snmp/snmpapp.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 open("/var/lib/net-snmp/snmpapp.local.conf", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 times({tms_utime=6, tms_stime=8, tms_cutime=0, tms_cstime=0}) = 11237766
00:05:28 times({tms_utime=6, tms_stime=8, tms_cutime=0, tms_cstime=0}) = 11237766
00:05:28 mmap(NULL, 151552, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e1e0000
00:05:28 mmap(NULL, 299008, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e197000
00:05:28 munmap(0x7fe60e268000, 151552) = 0
00:05:28 brk(0x19e9000)                 = 0x19e9000
00:05:28 open("/tmp/.ZendSem.eXLNTS", O_RDWR|O_CREAT|O_EXCL, 0600) = 3
00:05:28 fchmod(3, 0666)                = 0
00:05:28 fcntl(3, F_GETFD)              = 0
00:05:28 fcntl(3, F_SETFD, FD_CLOEXEC)  = 0
00:05:28 unlink("/tmp/.ZendSem.eXLNTS") = 0
00:05:28 mmap(NULL, 134217728, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_ANONYMOUS|0x40000, -1, 0) = -1 ENOMEM (Cannot allocate memory)
00:05:28 mmap(NULL, 134217728, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_ANONYMOUS, -1, 0) = 0x7fe5f20e5000
00:05:28 fcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0
00:05:28 fcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0
00:05:28 fcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0
00:05:28 fcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0
00:05:28 open("/opt/cpanel/ea-php71/root/etc/php.d", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 4
00:05:28 getdents(4, {{d_ino=17841584, d_off=72411367498550741, d_reclen=40, d_name="20-pspell.ini", d_type=DT_UNKNOWN} {d_ino=17840832, d_off=343068652587660857, d_reclen=32, d_name="20-xml.ini", d_type=DT_UNKNOWN} {d_ino=17840920, d_off=368466072267013019, d_reclen=40, d_name="zzzzzzz-pecl.ini", d_type=DT_UNKNOWN} {d_ino=17840938, d_off=580789160929851733, d_reclen=40, d_name="20-mysqlnd.ini", d_type=DT_UNKNOWN} {d_ino=17840960, d_off=641539104804605949, d_reclen=40, d_name="20-calendar.ini", d_type=DT_UNKNOWN} {d_ino=17840962, d_off=758936486956899166, d_reclen=40, d_name="20-mcrypt.ini", d_type=DT_UNKNOWN} {d_ino=17840834, d_off=1035282511373975730, d_reclen=40, d_name="20-xmlwriter.ini", d_type=DT_UNKNOWN} {d_ino=17841550, d_off=1035699197334542377, d_reclen=32, d_name="20-tidy.ini", d_type=DT_UNKNOWN} {d_ino=17840814, d_off=1056400168986030154, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=17840950, d_off=1134738725853703820, d_reclen=32, d_name="20-imap.ini", d_type=DT_UNKNOWN} {d_ino=17841574, d_off=1502785383291127850, d_reclen=40, d_name="20-gettext.ini", d_type=DT_UNKNOWN} {d_ino=17841568, d_off=2021291552928002235, d_reclen=40, d_name="20-mbstring.ini", d_type=DT_UNKNOWN} {d_ino=17841542, d_off=2325423978562451532, d_reclen=32, d_name="20-odbc.ini", d_type=DT_UNKNOWN} {d_ino=17841564, d_off=2337971958943583403, d_reclen=40, d_name="20-sysvshm.ini", d_type=DT_UNKNOWN} {d_ino=17841586, d_off=2890369919113031488, d_reclen=32, d_name="20-soap.ini", d_type=DT_UNKNOWN} {d_ino=17841582, d_off=3002380642695937890, d_reclen=32, d_name="20-zip.ini", d_type=DT_UNKNOWN} {d_ino=17840942, d_off=3253066207117542879, d_reclen=40, d_name="30-mysqli.ini", d_type=DT_UNKNOWN} {d_ino=17841570, d_off=3466638253552471253, d_reclen=40, d_name="10-opcache.ini", d_type=DT_UNKNOWN} {d_ino=17840948, d_off=3501274582602894376, d_reclen=40, d_name="30-pdo_mysql.ini", d_type=DT_UNKNOWN} {d_ino=17840954, d_off=3508182446724505633, d_reclen=40, d_name="20-sockets.ini", d_type=DT_UNKNOWN} {d_ino=17841546, d_off=3742497359632127977, d_reclen=40, d_name="30-pdo_odbc.ini", d_type=DT_UNKNOWN} {d_ino=17841558, d_off=3804598531064933729, d_reclen=32, d_name="20-shmop.ini", d_type=DT_UNKNOWN} {d_ino=17840926, d_off=3861231301708903272, d_reclen=32, d_name="20-pdo.ini", d_type=DT_UNKNOWN} {d_ino=17841390, d_off=3888046751948445810, d_reclen=32, d_name="20-dba.ini", d_type=DT_UNKNOWN} {d_ino=17841590, d_off=4244835074594722332, d_reclen=32, d_name="20-ldap.ini", d_type=DT_UNKNOWN} {d_ino=17840836, d_off=4345839911533916994, d_reclen=32, d_name="20-xsl.ini", d_type=DT_UNKNOWN} {d_ino=17840826, d_off=4555295911334418887, d_reclen=32, d_name="20-dom.ini", d_type=DT_UNKNOWN} {d_ino=17841578, d_off=4661693938944169569, d_reclen=40, d_name="30-xmlrpc.ini", d_type=DT_UNKNOWN} {d_ino=17840828, d_off=5361069814315202215, d_reclen=40, d_name="20-simplexml.ini", d_type=DT_UNKNOWN} {d_ino=17840846, d_off=5743451489863793528, d_reclen=32, d_name="20-json.ini", d_type=DT_UNKNOWN} {d_ino=17841572, d_off=5803621480367074591, d_reclen=48, d_name="opcache-default.blacklist", d_type=DT_UNKNOWN} {d_ino=17840808, d_off=5973780667198498941, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=17841580, d_off=6027901591087447063, d_reclen=32, d_name="20-snmp.ini", d_type=DT_UNKNOWN} {d_ino=17840964, d_off=6047652756985347505, d_reclen=32, d_name="20-gd.ini", d_type=DT_UNKNOWN} {d_ino=17840840, d_off=6090419071001200346, d_reclen=32, d_name="30-wddx.ini", d_type=DT_UNKNOWN} {d_ino=17840928, d_off=6359176404574993712, d_reclen=40, d_name="20-sqlite3.ini", d_type=DT_UNKNOWN} {d_ino=17841566, d_off=6465177048541392167, d_reclen=32, d_name="20-exif.ini", d_type=DT_UNKNOWN} {d_ino=17841576, d_off=6552604354365451109, d_reclen=32, d_name="20-iconv.ini", d_type=DT_UNKNOWN} {d_ino=17840936, d_off=6625173489709581781, d_reclen=32, d_name="20-curl.ini", d_type=DT_UNKNOWN} {d_ino=17841554, d_off=6636691181657201904, d_reclen=32, d_name="20-bz2.ini", d_type=DT_UNKNOWN} {d_ino=17840850, d_off=6642496186902715553, d_reclen=32, d_name="20-phar.ini", d_type=DT_UNKNOWN} {d_ino=17841548, d_off=6913565703778464861, d_reclen=40, d_name="20-enchant.ini", d_type=DT_UNKNOWN} {d_ino=17841562, d_off=7079677970656976346, d_reclen=40, d_name="20-sysvsem.ini", d_type=DT_UNKNOWN} {d_ino=17840958, d_off=7315887378102509326, d_reclen=40, d_name="20-bcmath.ini", d_type=DT_UNKNOWN} {d_ino=17841540, d_off=7637041066904510815, d_reclen=40, d_name="30-pdo_pgsql.ini", d_type=DT_UNKNOWN} {d_ino=17840842, d_off=7718217177949855202, d_reclen=40, d_name="30-xmlreader.ini", d_type=DT_UNKNOWN} {d_ino=17840932, d_off=7779205738715352907, d_reclen=40, d_name="30-pdo_sqlite.ini", d_type=DT_UNKNOWN} {d_ino=17840844, d_off=7932307712947795109, d_reclen=32, d_name="20-ctype.ini", d_type=DT_UNKNOWN} {d_ino=17840822, d_off=8176682539253498048, d_reclen=32, d_name="20-posix.ini", d_type=DT_UNKNOWN} {d_ino=17840902, d_off=8258180628091343652, d_reclen=40, d_name="20-tokenizer.ini", d_type=DT_UNKNOWN} {d_ino=17841588, d_off=8389481120248744808, d_reclen=32, d_name="20-gmp.ini", d_type=DT_UNKNOWN} {d_ino=17841552, d_off=8423619931083931066, d_reclen=32, d_name="20-intl.ini", d_type=DT_UNKNOWN} {d_ino=17840824, d_off=8479780250101297873, d_reclen=32, d_name="20-ftp.ini", d_type=DT_UNKNOWN} {d_ino=17841556, d_off=8548125314470804977, d_reclen=40, d_name="20-fileinfo.ini", d_type=DT_UNKNOWN} {d_ino=17841560, d_off=9201212056478000199, d_reclen=40, d_name="20-sysvmsg.ini", d_type=DT_UNKNOWN} {d_ino=17841538, d_off=9223372036854775807, d_reclen=32, d_name="20-pgsql.ini", d_type=DT_UNKNOWN}}, 32768) = 2000
00:05:28 newfstatat(4, "opcache-default.blacklist", {st_dev=makedev(145, 128), st_ino=17841572, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=645, st_atime=2018/11/13-21:44:11, st_mtime=2018/11/13-21:44:11, st_ctime=2018/11/25-17:22:56}, 0) = 0
00:05:28 getdents(4, {}, 32768)         = 0
00:05:28 close(4)                       = 0
00:05:28 open("/opt/cpanel/ea-php71/root/etc/php.d/opcache-default.blacklist", O_RDONLY) = 4
00:05:28 lstat("/opt/cpanel/ea-php71/root/etc/php.d/opcache-default.blacklist", {st_dev=makedev(145, 128), st_ino=17841572, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=645, st_atime=2018/11/13-21:44:11, st_mtime=2018/11/13-21:44:11, st_ctime=2018/11/25-17:22:56}) = 0
00:05:28 lstat("/opt/cpanel/ea-php71/root/etc/php.d", {st_dev=makedev(145, 128), st_ino=17840814, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/13-21:44:11, st_mtime=2018/11/25-17:23:04, st_ctime=2018/11/25-17:23:04}) = 0
00:05:28 lstat("/opt/cpanel/ea-php71/root/etc", {st_dev=makedev(145, 128), st_ino=17840808, st_mode=S_IFDIR|0755, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/13-19:56:25, st_mtime=2018/11/25-17:23:10, st_ctime=2018/11/25-17:23:10}) = 0
00:05:28 lstat("/opt/cpanel/ea-php71/root", {st_dev=makedev(145, 128), st_ino=17840804, st_mode=S_IFDIR|0755, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/13-19:56:25, st_mtime=2018/11/13-19:56:25, st_ctime=2018/11/25-17:11:36}) = 0
00:05:28 lstat("/opt/cpanel/ea-php71", {st_dev=makedev(145, 128), st_ino=17840802, st_mode=S_IFDIR|0755, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/13-19:56:25, st_mtime=2018/11/25-17:11:36, st_ctime=2018/11/25-17:11:36}) = 0
00:05:28 lstat("/opt/cpanel", {st_dev=makedev(145, 128), st_ino=480539760, st_mode=S_IFDIR|0755, st_nlink=14, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-17:06:03, st_mtime=2018/11/25-17:22:52, st_ctime=2018/11/25-17:22:52}) = 0
00:05:28 lstat("/opt", {st_dev=makedev(145, 128), st_ino=479206228, st_mode=S_IFDIR|0755, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-16:52:14, st_mtime=2018/11/25-17:19:59, st_ctime=2018/11/25-17:19:59}) = 0
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=17841572, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=645, st_atime=2018/11/13-21:44:11, st_mtime=2018/11/13-21:44:11, st_ctime=2018/11/25-17:22:56}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e2e7000
00:05:28 read(4, "; The blacklist file is a text file that holds the names of files\n; that should not be accelerated. The file format is to add each filename\n; to a new line. The filename may be a full path or just a file prefix\n; (i.e., /var/www/x  blacklists all the files and directories in /var/www\n; that start with 'x'). Line starting with a ; are ignored (comments).\n; Files are usually triggered by one of the following three reasons:\n; 1) Directories that contain auto generated code, like Smarty or ZFW cache.\n; 2) Code that does not work well when accelerated, due to some delayed\n;    compile time evaluation.\n; 3) Code that triggers an OPcache bug.\n\n", 4096) = 645
00:05:28 read(4, "", 4096)              = 0
00:05:28 close(4)                       = 0
00:05:28 munmap(0x7fe60e2e7000, 4096)   = 0
00:05:28 lstat("/home/sguser/public_html/public/index.php", {st_dev=makedev(145, 128), st_ino=68960108, st_mode=S_IFREG|0644, st_nlink=1, st_uid=504, st_gid=502, st_blksize=4096, st_blocks=8, st_size=1883, st_atime=2017/12/09-02:15:18, st_mtime=2017/12/09-02:15:18, st_ctime=2018/11/26-20:36:57}) = 0
00:05:28 lstat("/home/sguser/public_html/public", {st_dev=makedev(145, 128), st_ino=68960044, st_mode=S_IFDIR|0755, st_nlink=6, st_uid=504, st_gid=502, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/27-10:34:46, st_mtime=2018/11/27-10:34:46, st_ctime=2018/11/26-20:37:00}) = 0
00:05:28 lstat("/home/sguser/public_html", {st_dev=makedev(145, 128), st_ino=66357554, st_mode=S_IFDIR|0750, st_nlink=12, st_uid=504, st_gid=99, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-21:11:55, st_mtime=2018/11/27-00:05:28, st_ctime=2018/11/27-00:05:28}) = 0
00:05:28 lstat("/home/sguser", {st_dev=makedev(145, 128), st_ino=65035174, st_mode=S_IFDIR|0755, st_nlink=16, st_uid=504, st_gid=502, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-21:11:55, st_mtime=2018/11/26-20:55:00, st_ctime=2018/11/26-20:55:00}) = 0
00:05:28 lstat("/home", {st_dev=makedev(145, 128), st_ino=54011552, st_mode=S_IFDIR|0755, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/25-16:52:11, st_mtime=2018/11/25-21:11:55, st_ctime=2018/11/25-21:11:55}) = 0
00:05:28 brk(0x1a20000)                 = 0x1a20000
00:05:28 brk(0x1a41000)                 = 0x1a41000
00:05:28 stat("/home/.user.ini", 0x7ffc320d9020) = -1 ENOENT (No such file or directory)
00:05:28 stat("/home/sguser/.user.ini", 0x7ffc320d9020) = -1 ENOENT (No such file or directory)
00:05:28 stat("/home/sguser/public_html/.user.ini", 0x7ffc320d9020) = -1 ENOENT (No such file or directory)
00:05:28 stat("/home/sguser/public_html/public/.user.ini", 0x7ffc320d9020) = -1 ENOENT (No such file or directory)
00:05:28 rt_sigaction(SIGPROF, NULL, {SIG_DFL, [], 0}, 8) = 0
00:05:28 rt_sigaction(SIGPROF, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 rt_sigaction(SIGHUP, NULL, {SIG_DFL, [], 0}, 8) = 0
00:05:28 rt_sigaction(SIGHUP, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 rt_sigaction(SIGINT, NULL, {SIG_DFL, [], 0}, 8) = 0
00:05:28 rt_sigaction(SIGINT, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 rt_sigaction(SIGQUIT, NULL, {SIG_DFL, [], 0}, 8) = 0
00:05:28 rt_sigaction(SIGQUIT, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 rt_sigaction(SIGTERM, NULL, {SIG_DFL, [], 0}, 8) = 0
00:05:28 rt_sigaction(SIGTERM, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 rt_sigaction(SIGUSR1, NULL, {SIG_DFL, [], 0}, 8) = 0
00:05:28 rt_sigaction(SIGUSR1, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 rt_sigaction(SIGUSR2, NULL, {SIG_DFL, [], 0}, 8) = 0
00:05:28 rt_sigaction(SIGUSR2, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 setitimer(ITIMER_PROF, {it_interval={0, 0}, it_value={60, 0}}, NULL) = 0
00:05:28 rt_sigaction(SIGPROF, {0x61e670, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x7fe60b33f570}, NULL, 8) = 0
00:05:28 rt_sigprocmask(SIG_UNBLOCK, [PROF], NULL, 8) = 0
00:05:28 mmap(NULL, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e27d000
00:05:28 open("/home/sguser/public_html/public/index.php", O_RDONLY) = 4
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=68960108, st_mode=S_IFREG|0644, st_nlink=1, st_uid=504, st_gid=502, st_blksize=4096, st_blocks=8, st_size=1883, st_atime=2017/12/09-02:15:18, st_mtime=2017/12/09-02:15:18, st_ctime=2018/11/26-20:36:57}) = 0
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=68960108, st_mode=S_IFREG|0644, st_nlink=1, st_uid=504, st_gid=502, st_blksize=4096, st_blocks=8, st_size=1883, st_atime=2017/12/09-02:15:18, st_mtime=2017/12/09-02:15:18, st_ctime=2018/11/26-20:36:57}) = 0
00:05:28 fstat(4, {st_dev=makedev(145, 128), st_ino=68960108, st_mode=S_IFREG|0644, st_nlink=1, st_uid=504, st_gid=502, st_blksize=4096, st_blocks=8, st_size=1883, st_atime=2017/12/09-02:15:18, st_mtime=2017/12/09-02:15:18, st_ctime=2018/11/26-20:36:57}) = 0
00:05:28 mmap(NULL, 1883, PROT_READ, MAP_SHARED, 4, 0) = 0x7fe60e275000
00:05:28 getcwd("/home/sguser/public_html/public", 4095) = 32
00:05:28 chdir("/home/sguser/public_html/public") = 0
00:05:28 setitimer(ITIMER_PROF, {it_interval={0, 0}, it_value={30, 0}}, NULL) = 0
00:05:28 fcntl(3, F_SETLK, {type=F_RDLCK, whence=SEEK_SET, start=1, len=1}) = 0
00:05:28 stat("/home/sguser/public_html/public/index.php", {st_dev=makedev(145, 128), st_ino=68960108, st_mode=S_IFREG|0644, st_nlink=1, st_uid=504, st_gid=502, st_blksize=4096, st_blocks=8, st_size=1883, st_atime=2017/12/09-02:15:18, st_mtime=2017/12/09-02:15:18, st_ctime=2018/11/26-20:36:57}) = 0
00:05:28 fcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0
00:05:28 fcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0
00:05:28 munmap(0x7fe60e275000, 1883)   = 0
00:05:28 close(4)                       = 0
00:05:28 lstat("/home/sguser/public_html/public/../vendor/autoload.php", 0x7ffc320d38c0) = -1 ENOENT (No such file or directory)
00:05:28 lstat("/home/sguser/public_html/public/../vendor/autoload.php", 0x7ffc320d4a30) = -1 ENOENT (No such file or directory)
00:05:28 lstat("/home/sguser/public_html/public/../vendor", 0x7ffc320d4890) = -1 ENOENT (No such file or directory)
00:05:28 open("/home/sguser/public_html/vendor/autoload.php", O_RDONLY) = -1 ENOENT (No such file or directory)
00:05:28 open("error_log", O_WRONLY|O_CREAT|O_APPEND, 0644) = 4
00:05:28 open("/usr/share/zoneinfo/", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=9975918, d_off=563935990213529041, d_reclen=32, d_name="Turkey", d_type=DT_UNKNOWN} {d_ino=9975856, d_off=583292783262899033, d_reclen=24, d_name="EET", d_type=DT_UNKNOWN} {d_ino=9975860, d_off=657398629211611159, d_reclen=32, d_name="EST5EDT", d_type=DT_UNKNOWN} {d_ino=11273194, d_off=1035699197334542377, d_reclen=32, d_name="Antarctica", d_type=DT_DIR} {d_ino=9975850, d_off=1068028606208499539, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=9975862, d_off=1140896609516272655, d_reclen=32, d_name="Universal", d_type=DT_UNKNOWN} {d_ino=9975868, d_off=1186707834999656792, d_reclen=32, d_name="zone.tab", d_type=DT_UNKNOWN} {d_ino=11571684, d_off=1211311877491992597, d_reclen=24, d_name="US", d_type=DT_DIR} {d_ino=9975854, d_off=1335279192539814065, d_reclen=32, d_name="Jamaica", d_type=DT_UNKNOWN} {d_ino=12600118, d_off=1391979757930743014, d_reclen=32, d_name="Arctic", d_type=DT_DIR} {d_ino=9975916, d_off=1394391473819912568, d_reclen=32, d_name="Israel", d_type=DT_UNKNOWN} {d_ino=9975930, d_off=1399054826056426248, d_reclen=32, d_name="Egypt", d_type=DT_UNKNOWN} {d_ino=9975892, d_off=1445714652730539037, d_reclen=24, d_name="HST", d_type=DT_UNKNOWN} {d_ino=11828808, d_off=1445806028575622353, d_reclen=32, d_name="Pacific", d_type=DT_DIR} {d_ino=12600164, d_off=1509702561220726697, d_reclen=24, d_name="Eire", d_type=DT_UNKNOWN} {d_ino=9975920, d_off=1564340673258388203, d_reclen=32, d_name="Hongkong", d_type=DT_UNKNOWN} {d_ino=9975884, d_off=1640721320612641990, d_reclen=32, d_name="iso3166.tab", d_type=DT_UNKNOWN} {d_ino=9975910, d_off=1660481665462423838, d_reclen=24, d_name="ROC", d_type=DT_UNKNOWN} {d_ino=11829418, d_off=1675838012553607878, d_reclen=32, d_name="NZ-CHAT", d_type=DT_UNKNOWN} {d_ino=12600284, d_off=1917213828294775834, d_reclen=32, d_name="Indian", d_type=DT_DIR} {d_ino=11829474, d_off=2023326438319411782, d_reclen=32, d_name="posix", d_type=DT_DIR} {d_ino=9975876, d_off=2183648418221764541, d_reclen=32, d_name="Japan", d_type=DT_UNKNOWN} {d_ino=9975880, d_off=2375991377939406483, d_reclen=24, d_name="MET", d_type=DT_UNKNOWN} {d_ino=9975874, d_off=2608925070400707861, d_reclen=24, d_name="W-SU", d_type=DT_UNKNOWN} {d_ino=12600304, d_off=2628564849710735171, d_reclen=32, d_name="right", d_type=DT_DIR} {d_ino=12600122, d_off=2639801770946069540, d_reclen=24, d_name="Etc", d_type=DT_DIR} {d_ino=9975906, d_off=2754838374135966460, d_reclen=32, d_name="Greenwich", d_type=DT_UNKNOWN} {d_ino=9975864, d_off=2875450225789412389, d_reclen=24, d_name="EST", d_type=DT_UNKNOWN} {d_ino=9975890, d_off=3025703058848501709, d_reclen=32, d_name="tzdata.zi", d_type=DT_UNKNOWN} {d_ino=9975852, d_off=3231245076613287079, d_reclen=32, d_name="Iceland", d_type=DT_UNKNOWN} {d_ino=10763940, d_off=3509410566621860514, d_reclen=24, d_name="Asia", d_type=DT_DIR} {d_ino=9975882, d_off=3649364177200544122, d_reclen=24, d_name="WET", d_type=DT_UNKNOWN} {d_ino=10764200, d_off=3733929103877765553, d_reclen=32, d_name="America", d_type=DT_DIR} {d_ino=9975906, d_off=4021839746144039035, d_reclen=24, d_name="GMT0", d_type=DT_UNKNOWN} {d_ino=12600180, d_off=4181192482005558976, d_reclen=32, d_name="Europe", d_type=DT_DIR} {d_ino=9975878, d_off=4217924907647517196, d_reclen=32, d_name="MST7MDT", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=4382533241372580917, d_reclen=32, d_name="GMT-0", d_type=DT_UNKNOWN} {d_ino=9975922, d_off=4845884814699156932, d_reclen=24, d_name="PRC", d_type=DT_UNKNOWN} {d_ino=11571618, d_off=4906084257710265547, d_reclen=32, d_name="Chile", d_type=DT_DIR} {d_ino=11829740, d_off=5041104844213038458, d_reclen=32, d_name="Kwajalein", d_type=DT_UNKNOWN} {d_ino=9975928, d_off=5146162245901112796, d_reclen=32, d_name="Libya", d_type=DT_UNKNOWN} {d_ino=9975862, d_off=5239674440077264095, d_reclen=24, d_name="Zulu", d_type=DT_UNKNOWN} {d_ino=9975872, d_off=5270850230954744962, d_reclen=32, d_name="CST6CDT", d_type=DT_UNKNOWN} {d_ino=13116254, d_off=5377055442804600004, d_reclen=32, d_name="Atlantic", d_type=DT_DIR} {d_ino=9975888, d_off=5413303594407986868, d_reclen=32, d_name="zone1970.tab", d_type=DT_UNKNOWN} {d_ino=9975904, d_off=5746078618612292902, d_reclen=32, d_name="GB-Eire", d_type=DT_UNKNOWN} {d_ino=9975866, d_off=5803621480367074591, d_reclen=24, d_name="UCT", d_type=DT_UNKNOWN} {d_ino=3985252, d_off=6217278758924200745, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=9975904, d_off=6289944209474139513, d_reclen=24, d_name="GB", d_type=DT_UNKNOWN} {d_ino=9975902, d_off=6410379163813948703, d_reclen=32, d_name="Portugal", d_type=DT_UNKNOWN} {d_ino=9975914, d_off=6551482962579838883, d_reclen=24, d_name="ROK", d_type=DT_UNKNOWN} {d_ino=9975858, d_off=6616984327825635753, d_reclen=24, d_name="MST", d_type=DT_UNKNOWN} {d_ino=10763916, d_off=6705504907957301995, d_reclen=32, d_name="Brazil", d_type=DT_DIR} {d_ino=10532496, d_off=6774993947361569505, d_reclen=32, d_name="Mexico", d_type=DT_DIR} {d_ino=9975912, d_off=6875205138467639980, d_reclen=32, d_name="Singapore", d_type=DT_UNKNOWN} {d_ino=13116272, d_off=7090576735614052377, d_reclen=32, d_name="Canada", d_type=DT_DIR} {d_ino=9975894, d_off=7323706975523127812, d_reclen=32, d_name="leapseconds", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=7343973770310228989, d_reclen=24, d_name="GMT", d_type=DT_UNKNOWN} {d_ino=9975926, d_off=7651239768141527559, d_reclen=24, d_name="Cuba", d_type=DT_UNKNOWN} {d_ino=11829746, d_off=7671346389671604280, d_reclen=24, d_name="NZ", d_type=DT_UNKNOWN} {d_ino=9975908, d_off=7690989901870113181, d_reclen=24, d_name="Iran", d_type=DT_UNKNOWN} {d_ino=9975900, d_off=7710345756977173268, d_reclen=24, d_name="CET", d_type=DT_UNKNOWN} {d_ino=9975924, d_off=7852829285785411112, d_reclen=32, d_name="posixrules", d_type=DT_UNKNOWN} {d_ino=11571706, d_off=8212890617032151022, d_reclen=32, d_name="Navajo", d_type=DT_UNKNOWN} {d_ino=9975886, d_off=8532301650641555542, d_reclen=32, d_name="PST8PDT", d_type=DT_UNKNOWN} {d_ino=10532506, d_off=8808586131057427327, d_reclen=32, d_name="Australia", d_type=DT_DIR} {d_ino=9975870, d_off=8917273798407439106, d_reclen=32, d_name="Poland", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=8959824523894526533, d_reclen=32, d_name="GMT+0", d_type=DT_UNKNOWN} {d_ino=10532454, d_off=9099722621944483887, d_reclen=32, d_name="Africa", d_type=DT_DIR} {d_ino=9975862, d_off=9223372036854775807, d_reclen=24, d_name="UTC", d_type=DT_UNKNOWN}}, 32768) = 2032
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo//tzdata.zi", {st_dev=makedev(145, 128), st_ino=9975890, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=216, st_size=106681, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//leapseconds", {st_dev=makedev(145, 128), st_ino=9975894, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2416, st_atime=2018/10/06-17:12:44, st_mtime=2018/10/06-17:12:44, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//Zulu", {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//WET", {st_dev=makedev(145, 128), st_ino=9975882, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1873, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//W-SU", {st_dev=makedev(145, 128), st_ino=9975874, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1486, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Universal", {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//UTC", {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//US", {st_dev=makedev(145, 128), st_ino=11571684, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//UCT", {st_dev=makedev(145, 128), st_ino=9975866, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Turkey", {st_dev=makedev(145, 128), st_ino=9975918, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2110, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Singapore", {st_dev=makedev(145, 128), st_ino=9975912, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=384, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//ROK", {st_dev=makedev(145, 128), st_ino=9975914, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=517, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//ROC", {st_dev=makedev(145, 128), st_ino=9975910, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=748, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Portugal", {st_dev=makedev(145, 128), st_ino=9975902, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3439, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Poland", {st_dev=makedev(145, 128), st_ino=9975870, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2679, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Pacific", {st_dev=makedev(145, 128), st_ino=11828808, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//PST8PDT", {st_dev=makedev(145, 128), st_ino=9975886, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2294, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//PRC", {st_dev=makedev(145, 128), st_ino=9975922, st_mode=S_IFREG|0644, st_nlink=5, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=528, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Navajo", {st_dev=makedev(145, 128), st_ino=11571706, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2427, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//NZ-CHAT", {st_dev=makedev(145, 128), st_ino=11829418, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2047, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//NZ", {st_dev=makedev(145, 128), st_ino=11829746, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2434, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Mexico", {st_dev=makedev(145, 128), st_ino=10532496, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//MST7MDT", {st_dev=makedev(145, 128), st_ino=9975878, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2294, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//MST", {st_dev=makedev(145, 128), st_ino=9975858, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//MET", {st_dev=makedev(145, 128), st_ino=9975880, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2102, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//Libya", {st_dev=makedev(145, 128), st_ino=9975928, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=641, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Kwajalein", {st_dev=makedev(145, 128), st_ino=11829740, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=219, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Japan", {st_dev=makedev(145, 128), st_ino=9975876, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=292, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Jamaica", {st_dev=makedev(145, 128), st_ino=9975854, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=481, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Israel", {st_dev=makedev(145, 128), st_ino=9975916, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8965, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Iran", {st_dev=makedev(145, 128), st_ino=9975908, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1674, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Indian", {st_dev=makedev(145, 128), st_ino=12600284, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Iceland", {st_dev=makedev(145, 128), st_ino=9975852, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Hongkong", {st_dev=makedev(145, 128), st_ino=9975920, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//HST", {st_dev=makedev(145, 128), st_ino=9975892, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=119, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//Greenwich", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//GMT0", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//GMT-0", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//GMT+0", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//GMT", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//GB-Eire", {st_dev=makedev(145, 128), st_ino=9975904, st_mode=S_IFREG|0644, st_nlink=7, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3661, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//GB", {st_dev=makedev(145, 128), st_ino=9975904, st_mode=S_IFREG|0644, st_nlink=7, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3661, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Europe", {st_dev=makedev(145, 128), st_ino=12600180, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Etc", {st_dev=makedev(145, 128), st_ino=12600122, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Eire", {st_dev=makedev(145, 128), st_ino=12600164, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3517, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Egypt", {st_dev=makedev(145, 128), st_ino=9975930, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1946, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//EST5EDT", {st_dev=makedev(145, 128), st_ino=9975860, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2294, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//EST", {st_dev=makedev(145, 128), st_ino=9975864, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//EET", {st_dev=makedev(145, 128), st_ino=9975856, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1876, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//Cuba", {st_dev=makedev(145, 128), st_ino=9975926, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2411, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Chile", {st_dev=makedev(145, 128), st_ino=11571618, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Canada", {st_dev=makedev(145, 128), st_ino=13116272, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//CST6CDT", {st_dev=makedev(145, 128), st_ino=9975872, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2294, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//CET", {st_dev=makedev(145, 128), st_ino=9975900, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2102, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo//Brazil", {st_dev=makedev(145, 128), st_ino=10763916, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Australia", {st_dev=makedev(145, 128), st_ino=10532506, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Atlantic", {st_dev=makedev(145, 128), st_ino=13116254, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Asia", {st_dev=makedev(145, 128), st_ino=10763940, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Arctic", {st_dev=makedev(145, 128), st_ino=12600118, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Antarctica", {st_dev=makedev(145, 128), st_ino=11273194, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//America", {st_dev=makedev(145, 128), st_ino=10764200, st_mode=S_IFDIR|0755, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo//Africa", {st_dev=makedev(145, 128), st_ino=10532454, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Africa", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=13116340, d_off=343551056531169168, d_reclen=32, d_name="Timbuktu", d_type=DT_UNKNOWN} {d_ino=10532470, d_off=595681526370399141, d_reclen=32, d_name="Ceuta", d_type=DT_UNKNOWN} {d_ino=10532464, d_off=614632932830123348, d_reclen=32, d_name="Johannesburg", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=644074875616241949, d_reclen=32, d_name="Gaborone", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=670247965610435832, d_reclen=32, d_name="Brazzaville", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=825510613951956969, d_reclen=32, d_name="Kampala", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=1035699197334542377, d_reclen=32, d_name="Freetown", d_type=DT_UNKNOWN} {d_ino=10532454, d_off=1142869121522890988, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=9975928, d_off=1303882903421764563, d_reclen=32, d_name="Tripoli", d_type=DT_UNKNOWN} {d_ino=10532494, d_off=1366848108581759004, d_reclen=32, d_name="Bissau", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=1685197019887873177, d_reclen=32, d_name="Lubumbashi", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=1992413321768381148, d_reclen=32, d_name="Porto-Novo", d_type=DT_UNKNOWN} {d_ino=10532486, d_off=2231766919531295757, d_reclen=32, d_name="Algiers", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=2284044242038937426, d_reclen=32, d_name="Asmera", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=2424846831162432732, d_reclen=32, d_name="Abidjan", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=2435878292730417996, d_reclen=32, d_name="Lusaka", d_type=DT_UNKNOWN} {d_ino=10532488, d_off=2499237290374822158, d_reclen=32, d_name="Windhoek", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=2784788371985427186, d_reclen=32, d_name="Harare", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=2834210410818168352, d_reclen=32, d_name="Mogadishu", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=2888487954833969631, d_reclen=32, d_name="Luanda", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=3004002791476702506, d_reclen=32, d_name="Banjul", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=3048890735584481592, d_reclen=32, d_name="Douala", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=3148167320236597426, d_reclen=32, d_name="Malabo", d_type=DT_UNKNOWN} {d_ino=10532482, d_off=3333290695521256580, d_reclen=24, d_name="Juba", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=3354752695529462675, d_reclen=32, d_name="Nouakchott", d_type=DT_UNKNOWN} {d_ino=10532538, d_off=3371082856995764106, d_reclen=32, d_name="Accra", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=3400818593252985632, d_reclen=32, d_name="Kigali", d_type=DT_UNKNOWN} {d_ino=10532472, d_off=3423733950801384817, d_reclen=32, d_name="Ndjamena", d_type=DT_UNKNOWN} {d_ino=10532478, d_off=3891065685622773329, d_reclen=32, d_name="Sao_Tome", d_type=DT_UNKNOWN} {d_ino=10532464, d_off=3959156971956243268, d_reclen=32, d_name="Mbabane", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=4186664178677091369, d_reclen=32, d_name="Dakar", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=4225709194819786958, d_reclen=24, d_name="Lome", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=4326924679509244627, d_reclen=32, d_name="Djibouti", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=4442774931126017058, d_reclen=32, d_name="Addis_Ababa", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=4518767032751877518, d_reclen=32, d_name="Conakry", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=4541519392694706607, d_reclen=32, d_name="Blantyre", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=4614814200370681274, d_reclen=32, d_name="Libreville", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=5151114202174858505, d_reclen=40, d_name="Dar_es_Salaam", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=5803621480367074591, d_reclen=32, d_name="Ouagadougou", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=5886567620761064360, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=10532458, d_off=6296343404006672477, d_reclen=32, d_name="Lagos", d_type=DT_UNKNOWN} {d_ino=10532466, d_off=6466914334939637472, d_reclen=32, d_name="El_Aaiun", d_type=DT_UNKNOWN} {d_ino=10532480, d_off=6759065601866328284, d_reclen=32, d_name="Khartoum", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=6842237604433831431, d_reclen=32, d_name="Kinshasa", d_type=DT_UNKNOWN} {d_ino=10532492, d_off=6873269441598590482, d_reclen=32, d_name="Tunis", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=7149806085530661489, d_reclen=32, d_name="Bujumbura", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=7165427343230289759, d_reclen=32, d_name="Bangui", d_type=DT_UNKNOWN} {d_ino=10532458, d_off=7657036549489577066, d_reclen=32, d_name="Niamey", d_type=DT_UNKNOWN} {d_ino=10532474, d_off=7838835577063987838, d_reclen=32, d_name="Monrovia", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=8122973462831970592, d_reclen=32, d_name="Bamako", d_type=DT_UNKNOWN} {d_ino=10532476, d_off=8323879893867833556, d_reclen=32, d_name="Maputo", d_type=DT_UNKNOWN} {d_ino=10532464, d_off=8641787472553993368, d_reclen=32, d_name="Maseru", d_type=DT_UNKNOWN} {d_ino=10532468, d_off=8676564445276955874, d_reclen=32, d_name="Casablanca", d_type=DT_UNKNOWN} {d_ino=9975930, d_off=8844576961519835339, d_reclen=32, d_name="Cairo", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=8949527990886190282, d_reclen=32, d_name="Asmara", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=9223372036854775807, d_reclen=32, d_name="Nairobi", d_type=DT_UNKNOWN}}, 32768) = 1768
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Windhoek", {st_dev=makedev(145, 128), st_ino=10532488, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=992, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Tunis", {st_dev=makedev(145, 128), st_ino=10532492, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=684, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Tripoli", {st_dev=makedev(145, 128), st_ino=9975928, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=641, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Timbuktu", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Sao_Tome", {st_dev=makedev(145, 128), st_ino=10532478, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=212, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Porto-Novo", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Ouagadougou", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Nouakchott", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Niamey", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Ndjamena", {st_dev=makedev(145, 128), st_ino=10532472, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=211, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Nairobi", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Monrovia", {st_dev=makedev(145, 128), st_ino=10532474, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=207, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Mogadishu", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Mbabane", {st_dev=makedev(145, 128), st_ino=10532464, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=245, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Maseru", {st_dev=makedev(145, 128), st_ino=10532464, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=245, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Maputo", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Malabo", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Lusaka", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Lubumbashi", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Luanda", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Lome", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Libreville", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Lagos", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Kinshasa", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Kigali", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Khartoum", {st_dev=makedev(145, 128), st_ino=10532480, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=683, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Kampala", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Juba", {st_dev=makedev(145, 128), st_ino=10532482, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=669, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Johannesburg", {st_dev=makedev(145, 128), st_ino=10532464, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=245, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Harare", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Gaborone", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Freetown", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/El_Aaiun", {st_dev=makedev(145, 128), st_ino=10532466, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=825, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Douala", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Djibouti", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Dar_es_Salaam", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Dakar", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Conakry", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Ceuta", {st_dev=makedev(145, 128), st_ino=10532470, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2033, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Casablanca", {st_dev=makedev(145, 128), st_ino=10532468, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=955, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Cairo", {st_dev=makedev(145, 128), st_ino=9975930, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1946, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Bujumbura", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Brazzaville", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Blantyre", {st_dev=makedev(145, 128), st_ino=10532476, st_mode=S_IFREG|0644, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Bissau", {st_dev=makedev(145, 128), st_ino=10532494, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=194, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Banjul", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Bangui", {st_dev=makedev(145, 128), st_ino=10532458, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=157, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Bamako", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Asmera", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Asmara", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Algiers", {st_dev=makedev(145, 128), st_ino=10532486, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=734, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Addis_Ababa", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Accra", {st_dev=makedev(145, 128), st_ino=10532538, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=828, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Africa/Abidjan", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/America", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=10764402, d_off=95808336609349903, d_reclen=32, d_name="Metlakatla", d_type=DT_UNKNOWN} {d_ino=10764364, d_off=97594209216622543, d_reclen=32, d_name="Monterrey", d_type=DT_UNKNOWN} {d_ino=11571702, d_off=119710712357401699, d_reclen=32, d_name="Fort_Wayne", d_type=DT_UNKNOWN} {d_ino=11571710, d_off=143407577823891617, d_reclen=32, d_name="Anchorage", d_type=DT_UNKNOWN} {d_ino=10764592, d_off=181287256756061631, d_reclen=32, d_name="Creston", d_type=DT_UNKNOWN} {d_ino=11571704, d_off=200204219415644153, d_reclen=32, d_name="Detroit", d_type=DT_UNKNOWN} {d_ino=10764362, d_off=258288415785776702, d_reclen=40, d_name="Cambridge_Bay", d_type=DT_UNKNOWN} {d_ino=10764332, d_off=280733639541256368, d_reclen=40, d_name="Port-au-Prince", d_type=DT_UNKNOWN} {d_ino=10764606, d_off=306054025767165670, d_reclen=32, d_name="Santarem", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=315755186303443035, d_reclen=32, d_name="Tortola", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=335106086404106624, d_reclen=40, d_name="Port_of_Spain", d_type=DT_UNKNOWN} {d_ino=13116326, d_off=429544114710197537, d_reclen=32, d_name="Whitehorse", d_type=DT_UNKNOWN} {d_ino=10764400, d_off=445247262227885519, d_reclen=32, d_name="Juneau", d_type=DT_UNKNOWN} {d_ino=11571712, d_off=453693676134922005, d_reclen=24, d_name="Adak", d_type=DT_UNKNOWN} {d_ino=10532516, d_off=547836944541934961, d_reclen=32, d_name="Mexico_City", d_type=DT_UNKNOWN} {d_ino=11272568, d_off=549819382021284261, d_reclen=32, d_name="Argentina", d_type=DT_DIR} {d_ino=10764456, d_off=640724949543602967, d_reclen=32, d_name="Menominee", d_type=DT_UNKNOWN} {d_ino=10764180, d_off=701337231666919567, d_reclen=32, d_name="Buenos_Aires", d_type=DT_UNKNOWN} {d_ino=13116338, d_off=716770000628656654, d_reclen=32, d_name="Edmonton", d_type=DT_UNKNOWN} {d_ino=10764380, d_off=793094503362102294, d_reclen=32, d_name="Martinique", d_type=DT_UNKNOWN} {d_ino=11273154, d_off=807283047499429479, d_reclen=32, d_name="Kentucky", d_type=DT_DIR} {d_ino=10764546, d_off=1035699197334542377, d_reclen=32, d_name="El_Salvador", d_type=DT_UNKNOWN} {d_ino=10764200, d_off=1211311877491992597, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=9975854, d_off=1234641315834512514, d_reclen=32, d_name="Jamaica", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=1245377220935253798, d_reclen=32, d_name="Dominica", d_type=DT_UNKNOWN} {d_ino=13116328, d_off=1317389952910691858, d_reclen=32, d_name="Vancouver", d_type=DT_UNKNOWN} {d_ino=10763932, d_off=1383361089040186933, d_reclen=32, d_name="Noronha", d_type=DT_UNKNOWN} {d_ino=10764518, d_off=1403899117200464170, d_reclen=32, d_name="Managua", d_type=DT_UNKNOWN} {d_ino=10764382, d_off=1466580904448547600, d_reclen=32, d_name="Bogota", d_type=DT_UNKNOWN} {d_ino=10532502, d_off=1473328376248710848, d_reclen=32, d_name="Santa_Isabel", d_type=DT_UNKNOWN} {d_ino=10764370, d_off=1512824691689043340, d_reclen=32, d_name="Fortaleza", d_type=DT_UNKNOWN} {d_ino=11571700, d_off=1585061057469508125, d_reclen=32, d_name="Knox_IN", d_type=DT_UNKNOWN} {d_ino=10764392, d_off=1590913750945999881, d_reclen=32, d_name="Campo_Grande", d_type=DT_UNKNOWN} {d_ino=10764206, d_off=1801689789941073587, d_reclen=32, d_name="Thunder_Bay", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=1877283358611444636, d_reclen=32, d_name="Guadeloupe", d_type=DT_UNKNOWN} {d_ino=10764574, d_off=1917442829539098269, d_reclen=32, d_name="Thule", d_type=DT_UNKNOWN} {d_ino=10764410, d_off=2265488993682733721, d_reclen=32, d_name="Yellowknife", d_type=DT_UNKNOWN} {d_ino=10764310, d_off=2412857142282332229, d_reclen=32, d_name="Fort_Nelson", d_type=DT_UNKNOWN} {d_ino=10764154, d_off=2426387182929316899, d_reclen=32, d_name="Curacao", d_type=DT_UNKNOWN} {d_ino=10763920, d_off=2484941785316916105, d_reclen=32, d_name="Manaus", d_type=DT_UNKNOWN} {d_ino=10764220, d_off=2527417870707813669, d_reclen=32, d_name="Resolute", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=2626941730916680988, d_reclen=32, d_name="St_Vincent", d_type=DT_UNKNOWN} {d_ino=10764512, d_off=2637601795436164601, d_reclen=32, d_name="Barbados", d_type=DT_UNKNOWN} {d_ino=10764348, d_off=2701279657796611448, d_reclen=32, d_name="Sitka", d_type=DT_UNKNOWN} {d_ino=10764228, d_off=2749271664040005231, d_reclen=32, d_name="Puerto_Rico", d_type=DT_UNKNOWN} {d_ino=10764224, d_off=2796322681619766018, d_reclen=32, d_name="Yakutat", d_type=DT_UNKNOWN} {d_ino=10764172, d_off=2882459514453165140, d_reclen=32, d_name="Cordoba", d_type=DT_UNKNOWN} {d_ino=10764368, d_off=2917419139766391101, d_reclen=32, d_name="Boise", d_type=DT_UNKNOWN} {d_ino=10764342, d_off=2934417012280538417, d_reclen=32, d_name="Scoresbysund", d_type=DT_UNKNOWN} {d_ino=9975924, d_off=2961456080100957096, d_reclen=32, d_name="New_York", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=3018597564339859061, d_reclen=32, d_name="Anguilla", d_type=DT_UNKNOWN} {d_ino=10764350, d_off=3101666783020196962, d_reclen=32, d_name="Inuvik", d_type=DT_UNKNOWN} {d_ino=13116330, d_off=3215340188372535251, d_reclen=32, d_name="St_Johns", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=3374136320402920846, d_reclen=32, d_name="Virgin", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=3433757462522986162, d_reclen=32, d_name="Marigot", d_type=DT_UNKNOWN} {d_ino=10764304, d_off=3436768226532640051, d_reclen=32, d_name="Caracas", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=3444185200042588444, d_reclen=40, d_name="St_Barthelemy", d_type=DT_UNKNOWN} {d_ino=10764384, d_off=3595058980858424331, d_reclen=24, d_name="Nome", d_type=DT_UNKNOWN} {d_ino=10764336, d_off=3869342680720398421, d_reclen=32, d_name="Asuncion", d_type=DT_UNKNOWN} {d_ino=10764406, d_off=3890746978861843774, d_reclen=32, d_name="Dawson_Creek", d_type=DT_UNKNOWN} {d_ino=10764656, d_off=4010578911368255052, d_reclen=32, d_name="Araguaina", d_type=DT_UNKNOWN} {d_ino=11010134, d_off=4046950468636069130, d_reclen=32, d_name="Indiana", d_type=DT_DIR} {d_ino=10764190, d_off=4091405777120177508, d_reclen=32, d_name="Montserrat", d_type=DT_UNKNOWN} {d_ino=10764358, d_off=4216020472542812006, d_reclen=32, d_name="Boa_Vista", d_type=DT_UNKNOWN} {d_ino=13116336, d_off=4309807564576010979, d_reclen=32, d_name="Halifax", d_type=DT_UNKNOWN} {d_ino=10764412, d_off=4384805229741099706, d_reclen=32, d_name="Rainy_River", d_type=DT_UNKNOWN} {d_ino=10764360, d_off=4662447511173486795, d_reclen=32, d_name="Nipigon", d_type=DT_UNKNOWN} {d_ino=10764152, d_off=4727333560761942767, d_reclen=32, d_name="Atikokan", d_type=DT_UNKNOWN} {d_ino=10764524, d_off=4766016408609908529, d_reclen=32, d_name="Iqaluit", d_type=DT_UNKNOWN} {d_ino=10764154, d_off=4913993056556409639, d_reclen=32, d_name="Aruba", d_type=DT_UNKNOWN} {d_ino=10764594, d_off=4929289511875434557, d_reclen=32, d_name="Miquelon", d_type=DT_UNKNOWN} {d_ino=10764374, d_off=4969633089623853080, d_reclen=32, d_name="Maceio", d_type=DT_UNKNOWN} {d_ino=10764306, d_off=5039783958634674063, d_reclen=32, d_name="Matamoros", d_type=DT_UNKNOWN} {d_ino=10764396, d_off=5128142766110308926, d_reclen=32, d_name="La_Paz", d_type=DT_UNKNOWN} {d_ino=10764418, d_off=5128651021725241946, d_reclen=32, d_name="Ojinaga", d_type=DT_UNKNOWN} {d_ino=10764498, d_off=5213398632488764186, d_reclen=32, d_name="Guayaquil", d_type=DT_UNKNOWN} {d_ino=10764284, d_off=5235850483450826872, d_reclen=24, d_name="Lima", d_type=DT_UNKNOWN} {d_ino=10764152, d_off=5285763679635331245, d_reclen=40, d_name="Coral_Harbour", d_type=DT_UNKNOWN} {d_ino=11571682, d_off=5317998783902352334, d_reclen=32, d_name="Santiago", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=5326016136355156721, d_reclen=32, d_name="Antigua", d_type=DT_UNKNOWN} {d_ino=10764154, d_off=5369881250813433728, d_reclen=32, d_name="Kralendijk", d_type=DT_UNKNOWN} {d_ino=10532502, d_off=5575905109185015856, d_reclen=32, d_name="Tijuana", d_type=DT_UNKNOWN} {d_ino=10764464, d_off=5578610141092483049, d_reclen=32, d_name="Tegucigalpa", d_type=DT_UNKNOWN} {d_ino=10764320, d_off=5711908898027905839, d_reclen=32, d_name="Chihuahua", d_type=DT_UNKNOWN} {d_ino=10764366, d_off=5716134390748177721, d_reclen=32, d_name="Moncton", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=5764980265007701261, d_reclen=32, d_name="St_Lucia", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=5772838432664643251, d_reclen=32, d_name="St_Thomas", d_type=DT_UNKNOWN} {d_ino=9975926, d_off=5786118436967142898, d_reclen=32, d_name="Havana", d_type=DT_UNKNOWN} {d_ino=13116334, d_off=5803621480367074591, d_reclen=32, d_name="Montreal", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=5894132872218557828, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=10764316, d_off=6053838902113465215, d_reclen=40, d_name="Bahia_Banderas", d_type=DT_UNKNOWN} {d_ino=10764528, d_off=6110009023022635006, d_reclen=32, d_name="Nassau", d_type=DT_UNKNOWN} {d_ino=10764556, d_off=6117330874339658902, d_reclen=32, d_name="Grand_Turk", d_type=DT_UNKNOWN} {d_ino=10764330, d_off=6121563137177010547, d_reclen=32, d_name="Cayenne", d_type=DT_UNKNOWN} {d_ino=10764118, d_off=6184531578023175752, d_reclen=32, d_name="Panama", d_type=DT_UNKNOWN} {d_ino=11571706, d_off=6285482130409426112, d_reclen=32, d_name="Shiprock", d_type=DT_UNKNOWN} {d_ino=10764496, d_off=6299455379154513668, d_reclen=32, d_name="Cuiaba", d_type=DT_UNKNOWN} {d_ino=10532504, d_off=6375696736212934946, d_reclen=32, d_name="Mazatlan", d_type=DT_UNKNOWN} {d_ino=10763980, d_off=6406131731600809998, d_reclen=32, d_name="Sao_Paulo", d_type=DT_UNKNOWN} {d_ino=10764530, d_off=6410635639730171662, d_reclen=32, d_name="Belem", d_type=DT_UNKNOWN} {d_ino=10764176, d_off=6449003043699914652, d_reclen=32, d_name="Catamarca", d_type=DT_UNKNOWN} {d_ino=11571706, d_off=6482454370403393907, d_reclen=32, d_name="Denver", d_type=DT_UNKNOWN} {d_ino=10764376, d_off=6514785041541902566, d_reclen=32, d_name="Paramaribo", d_type=DT_UNKNOWN} {d_ino=10764322, d_off=6589425026457714704, d_reclen=32, d_name="Rankin_Inlet", d_type=DT_UNKNOWN} {d_ino=10763926, d_off=6668249810834414262, d_reclen=32, d_name="Porto_Acre", d_type=DT_UNKNOWN} {d_ino=10764340, d_off=6681446725456951552, d_reclen=32, d_name="Costa_Rica", d_type=DT_UNKNOWN} {d_ino=10764314, d_off=6805277322627785298, d_reclen=32, d_name="Guyana", d_type=DT_UNKNOWN} {d_ino=10764212, d_off=6806692724205384051, d_reclen=40, d_name="Swift_Current", d_type=DT_UNKNOWN} {d_ino=10764446, d_off=6836906381603864140, d_reclen=32, d_name="Recife", d_type=DT_UNKNOWN} {d_ino=11571712, d_off=6889467744682218467, d_reclen=24, d_name="Atka", d_type=DT_UNKNOWN} {d_ino=11571698, d_off=6960000211476866061, d_reclen=32, d_name="Los_Angeles", d_type=DT_UNKNOWN} {d_ino=10764172, d_off=6982420979087586908, d_reclen=32, d_name="Rosario", d_type=DT_UNKNOWN} {d_ino=10764522, d_off=7097356942295721868, d_reclen=32, d_name="Punta_Arenas", d_type=DT_UNKNOWN} {d_ino=13116334, d_off=7275804775009388020, d_reclen=32, d_name="Toronto", d_type=DT_UNKNOWN} {d_ino=10764162, d_off=7305535540968911865, d_reclen=32, d_name="Jujuy", d_type=DT_UNKNOWN} {d_ino=10764414, d_off=7353712500707922781, d_reclen=32, d_name="Godthab", d_type=DT_UNKNOWN} {d_ino=10764386, d_off=7427987450259372042, d_reclen=32, d_name="Porto_Velho", d_type=DT_UNKNOWN} {d_ino=10764632, d_off=7428200768387622472, d_reclen=32, d_name="Pangnirtung", d_type=DT_UNKNOWN} {d_ino=11571708, d_off=7458532090230294668, d_reclen=32, d_name="Chicago", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=7515505721752367884, d_reclen=32, d_name="St_Kitts", d_type=DT_UNKNOWN} {d_ino=10764204, d_off=7676831756258642126, d_reclen=32, d_name="Danmarkshavn", d_type=DT_UNKNOWN} {d_ino=10764154, d_off=7737935466854486079, d_reclen=40, d_name="Lower_Princes", d_type=DT_UNKNOWN} {d_ino=13116262, d_off=7789953842697330049, d_reclen=32, d_name="Winnipeg", d_type=DT_UNKNOWN} {d_ino=10764318, d_off=7848003410895311224, d_reclen=32, d_name="Glace_Bay", d_type=DT_UNKNOWN} {d_ino=10764300, d_off=7869396075183529372, d_reclen=32, d_name="Bahia", d_type=DT_UNKNOWN} {d_ino=10764610, d_off=7908321496710598737, d_reclen=40, d_name="Santo_Domingo", d_type=DT_UNKNOWN} {d_ino=10764216, d_off=7931392158622497820, d_reclen=32, d_name="Dawson", d_type=DT_UNKNOWN} {d_ino=11571690, d_off=8053266557350811829, d_reclen=32, d_name="Phoenix", d_type=DT_UNKNOWN} {d_ino=11571702, d_off=8097170495562735335, d_reclen=32, d_name="Indianapolis", d_type=DT_UNKNOWN} {d_ino=10764158, d_off=8132199044962868004, d_reclen=32, d_name="Mendoza", d_type=DT_UNKNOWN} {d_ino=10764334, d_off=8156577935820679234, d_reclen=32, d_name="Guatemala", d_type=DT_UNKNOWN} {d_ino=10764288, d_off=8222012388026121146, d_reclen=32, d_name="Montevideo", d_type=DT_UNKNOWN} {d_ino=10763938, d_off=8304790956711828809, d_reclen=32, d_name="Louisville", d_type=DT_UNKNOWN} {d_ino=10532502, d_off=8362076883757991912, d_reclen=32, d_name="Ensenada", d_type=DT_UNKNOWN} {d_ino=11016352, d_off=8428853176170484240, d_reclen=32, d_name="North_Dakota", d_type=DT_DIR} {d_ino=10764118, d_off=8505169502014590305, d_reclen=32, d_name="Cayman", d_type=DT_UNKNOWN} {d_ino=10763926, d_off=8594013503446064848, d_reclen=32, d_name="Rio_Branco", d_type=DT_UNKNOWN} {d_ino=10764242, d_off=8598024684052935506, d_reclen=32, d_name="Merida", d_type=DT_UNKNOWN} {d_ino=10764460, d_off=8768321986950722718, d_reclen=32, d_name="Blanc-Sablon", d_type=DT_UNKNOWN} {d_ino=10764190, d_off=8881063728700536700, d_reclen=32, d_name="Grenada", d_type=DT_UNKNOWN} {d_ino=13116332, d_off=8934627557952943005, d_reclen=32, d_name="Regina", d_type=DT_UNKNOWN} {d_ino=10764346, d_off=9054748868764806199, d_reclen=32, d_name="Hermosillo", d_type=DT_UNKNOWN} {d_ino=10764354, d_off=9066068866903808311, d_reclen=32, d_name="Eirunepe", d_type=DT_UNKNOWN} {d_ino=10764394, d_off=9141102808270590421, d_reclen=32, d_name="Belize", d_type=DT_UNKNOWN} {d_ino=10764302, d_off=9174541261900280570, d_reclen=32, d_name="Cancun", d_type=DT_UNKNOWN} {d_ino=10764390, d_off=9223372036854775807, d_reclen=32, d_name="Goose_Bay", d_type=DT_UNKNOWN}}, 32768) = 4696
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 open("/proc/meminfo", O_RDONLY|O_CLOEXEC) = 6
00:05:28 fstat(6, {st_dev=makedev(145, 132), st_ino=4026532043, st_mode=S_IFREG|0444, st_nlink=1, st_uid=0, st_gid=0, st_blksize=1024, st_blocks=0, st_size=0, st_atime=2018/11/27-00:05:28, st_mtime=2018/11/27-00:05:28, st_ctime=2018/11/27-00:05:28}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e27c000
00:05:28 read(6, "MemTotal:        4194304 kB\nMemFree:         2316240 kB\nCached:          1180940 kB\nBuffers:               0 kB\nActive:           266500 kB\nInactive:        1423856 kB\nActive(anon):     204588 kB\nInactive(anon):   304828 kB\nActive(file):      61912 kB\nInactive(file):  1119028 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nSwapTotal:             0 kB\nSwapFree:              0 kB\nDirty:             13952 kB\nWriteback:             0 kB\nAnonPages:        509416 kB\nShmem:            140288 kB\nSlab:              47276 kB\nSReclaimable:      25596 kB\nSUnreclaim:        21680 kB\n", 1024) = 588
00:05:28 close(6)                       = 0
00:05:28 munmap(0x7fe60e27c000, 4096)   = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/America/Yellowknife", {st_dev=makedev(145, 128), st_ino=10764410, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1966, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Yakutat", {st_dev=makedev(145, 128), st_ino=10764224, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2288, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Winnipeg", {st_dev=makedev(145, 128), st_ino=13116262, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2865, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Whitehorse", {st_dev=makedev(145, 128), st_ino=13116326, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2067, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Virgin", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Vancouver", {st_dev=makedev(145, 128), st_ino=13116328, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2875, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Tortola", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Toronto", {st_dev=makedev(145, 128), st_ino=13116334, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3477, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Tijuana", {st_dev=makedev(145, 128), st_ino=10532502, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2342, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Thunder_Bay", {st_dev=makedev(145, 128), st_ino=10764206, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2185, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Thule", {st_dev=makedev(145, 128), st_ino=10764574, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1514, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Tegucigalpa", {st_dev=makedev(145, 128), st_ino=10764464, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=264, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Swift_Current", {st_dev=makedev(145, 128), st_ino=10764212, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=560, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/St_Vincent", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/St_Thomas", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/St_Lucia", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/St_Kitts", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/St_Johns", {st_dev=makedev(145, 128), st_ino=13116330, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3622, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/St_Barthelemy", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Sitka", {st_dev=makedev(145, 128), st_ino=10764348, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2324, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Shiprock", {st_dev=makedev(145, 128), st_ino=11571706, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2427, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Scoresbysund", {st_dev=makedev(145, 128), st_ino=10764342, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1902, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Sao_Paulo", {st_dev=makedev(145, 128), st_ino=10763980, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2002, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Santo_Domingo", {st_dev=makedev(145, 128), st_ino=10764610, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=465, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Santiago", {st_dev=makedev(145, 128), st_ino=11571682, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9343, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Santarem", {st_dev=makedev(145, 128), st_ino=10764606, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=604, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Santa_Isabel", {st_dev=makedev(145, 128), st_ino=10532502, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2342, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Rosario", {st_dev=makedev(145, 128), st_ino=10764172, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Rio_Branco", {st_dev=makedev(145, 128), st_ino=10763926, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=618, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Resolute", {st_dev=makedev(145, 128), st_ino=10764220, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1900, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Regina", {st_dev=makedev(145, 128), st_ino=13116332, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=980, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Recife", {st_dev=makedev(145, 128), st_ino=10764446, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=714, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Rankin_Inlet", {st_dev=makedev(145, 128), st_ino=10764322, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1900, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Rainy_River", {st_dev=makedev(145, 128), st_ino=10764412, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2105, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Punta_Arenas", {st_dev=makedev(145, 128), st_ino=10764522, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1871, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Puerto_Rico", {st_dev=makedev(145, 128), st_ino=10764228, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=229, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Porto_Velho", {st_dev=makedev(145, 128), st_ino=10764386, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=574, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Porto_Acre", {st_dev=makedev(145, 128), st_ino=10763926, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=618, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Port_of_Spain", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Port-au-Prince", {st_dev=makedev(145, 128), st_ino=10764332, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1429, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Phoenix", {st_dev=makedev(145, 128), st_ino=11571690, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=327, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Paramaribo", {st_dev=makedev(145, 128), st_ino=10764376, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=268, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Pangnirtung", {st_dev=makedev(145, 128), st_ino=10764632, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2062, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Panama", {st_dev=makedev(145, 128), st_ino=10764118, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=177, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Ojinaga", {st_dev=makedev(145, 128), st_ino=10764418, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1492, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/North_Dakota", {st_dev=makedev(145, 128), st_ino=11016352, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:32, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Noronha", {st_dev=makedev(145, 128), st_ino=10763932, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=714, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Nome", {st_dev=makedev(145, 128), st_ino=10764384, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2350, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Nipigon", {st_dev=makedev(145, 128), st_ino=10764360, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2105, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/New_York", {st_dev=makedev(145, 128), st_ino=9975924, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3519, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Nassau", {st_dev=makedev(145, 128), st_ino=10764528, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2270, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Montserrat", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Montreal", {st_dev=makedev(145, 128), st_ino=13116334, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3477, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Montevideo", {st_dev=makedev(145, 128), st_ino=10764288, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1520, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Monterrey", {st_dev=makedev(145, 128), st_ino=10764364, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1402, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Moncton", {st_dev=makedev(145, 128), st_ino=10764366, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3137, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Miquelon", {st_dev=makedev(145, 128), st_ino=10764594, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1668, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Mexico_City", {st_dev=makedev(145, 128), st_ino=10532516, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1604, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Metlakatla", {st_dev=makedev(145, 128), st_ino=10764402, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1392, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Merida", {st_dev=makedev(145, 128), st_ino=10764242, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1426, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Menominee", {st_dev=makedev(145, 128), st_ino=10764456, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2241, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Mendoza", {st_dev=makedev(145, 128), st_ino=10764158, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Mazatlan", {st_dev=makedev(145, 128), st_ino=10532504, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1534, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Matamoros", {st_dev=makedev(145, 128), st_ino=10764306, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1402, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Martinique", {st_dev=makedev(145, 128), st_ino=10764380, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=231, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Marigot", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Manaus", {st_dev=makedev(145, 128), st_ino=10763920, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=602, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Managua", {st_dev=makedev(145, 128), st_ino=10764518, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=421, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Maceio", {st_dev=makedev(145, 128), st_ino=10764374, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=742, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Lower_Princes", {st_dev=makedev(145, 128), st_ino=10764154, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=198, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Louisville", {st_dev=makedev(145, 128), st_ino=10763938, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2755, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Los_Angeles", {st_dev=makedev(145, 128), st_ino=11571698, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2819, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Lima", {st_dev=makedev(145, 128), st_ino=10764284, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=395, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/La_Paz", {st_dev=makedev(145, 128), st_ino=10764396, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=217, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Kralendijk", {st_dev=makedev(145, 128), st_ino=10764154, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=198, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Knox_IN", {st_dev=makedev(145, 128), st_ino=11571700, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2395, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Kentucky", {st_dev=makedev(145, 128), st_ino=11273154, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Juneau", {st_dev=makedev(145, 128), st_ino=10764400, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2336, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Jujuy", {st_dev=makedev(145, 128), st_ino=10764162, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1041, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Jamaica", {st_dev=makedev(145, 128), st_ino=9975854, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=481, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Iqaluit", {st_dev=makedev(145, 128), st_ino=10764524, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2000, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Inuvik", {st_dev=makedev(145, 128), st_ino=10764350, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1914, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indianapolis", {st_dev=makedev(145, 128), st_ino=11571702, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1649, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana", {st_dev=makedev(145, 128), st_ino=11010134, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Hermosillo", {st_dev=makedev(145, 128), st_ino=10764346, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=424, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Havana", {st_dev=makedev(145, 128), st_ino=9975926, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2411, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Halifax", {st_dev=makedev(145, 128), st_ino=13116336, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3424, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Guyana", {st_dev=makedev(145, 128), st_ino=10764314, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=238, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Guayaquil", {st_dev=makedev(145, 128), st_ino=10764498, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=231, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Guatemala", {st_dev=makedev(145, 128), st_ino=10764334, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=292, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Guadeloupe", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Grenada", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Grand_Turk", {st_dev=makedev(145, 128), st_ino=10764556, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1839, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Goose_Bay", {st_dev=makedev(145, 128), st_ino=10764390, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3177, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Godthab", {st_dev=makedev(145, 128), st_ino=10764414, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8294, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Glace_Bay", {st_dev=makedev(145, 128), st_ino=10764318, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2192, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Fortaleza", {st_dev=makedev(145, 128), st_ino=10764370, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=714, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Fort_Wayne", {st_dev=makedev(145, 128), st_ino=11571702, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1649, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Fort_Nelson", {st_dev=makedev(145, 128), st_ino=10764310, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2223, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Ensenada", {st_dev=makedev(145, 128), st_ino=10532502, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2342, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/El_Salvador", {st_dev=makedev(145, 128), st_ino=10764546, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=236, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Eirunepe", {st_dev=makedev(145, 128), st_ino=10764354, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=646, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Edmonton", {st_dev=makedev(145, 128), st_ino=13116338, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2388, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Dominica", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Detroit", {st_dev=makedev(145, 128), st_ino=11571704, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Denver", {st_dev=makedev(145, 128), st_ino=11571706, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2427, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Dawson_Creek", {st_dev=makedev(145, 128), st_ino=10764406, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1033, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Dawson", {st_dev=makedev(145, 128), st_ino=10764216, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2067, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Danmarkshavn", {st_dev=makedev(145, 128), st_ino=10764204, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=698, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Curacao", {st_dev=makedev(145, 128), st_ino=10764154, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=198, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Cuiaba", {st_dev=makedev(145, 128), st_ino=10764496, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1974, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Creston", {st_dev=makedev(145, 128), st_ino=10764592, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=191, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Costa_Rica", {st_dev=makedev(145, 128), st_ino=10764340, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=315, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Cordoba", {st_dev=makedev(145, 128), st_ino=10764172, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Coral_Harbour", {st_dev=makedev(145, 128), st_ino=10764152, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=319, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Chihuahua", {st_dev=makedev(145, 128), st_ino=10764320, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1492, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Chicago", {st_dev=makedev(145, 128), st_ino=11571708, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3543, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Cayman", {st_dev=makedev(145, 128), st_ino=10764118, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=177, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Cayenne", {st_dev=makedev(145, 128), st_ino=10764330, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=196, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Catamarca", {st_dev=makedev(145, 128), st_ino=10764176, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Caracas", {st_dev=makedev(145, 128), st_ino=10764304, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=249, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Cancun", {st_dev=makedev(145, 128), st_ino=10764302, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=802, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Campo_Grande", {st_dev=makedev(145, 128), st_ino=10764392, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2002, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Cambridge_Bay", {st_dev=makedev(145, 128), st_ino=10764362, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2052, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Buenos_Aires", {st_dev=makedev(145, 128), st_ino=10764180, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Boise", {st_dev=makedev(145, 128), st_ino=10764368, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2377, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Bogota", {st_dev=makedev(145, 128), st_ino=10764382, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=231, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Boa_Vista", {st_dev=makedev(145, 128), st_ino=10764358, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=630, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Blanc-Sablon", {st_dev=makedev(145, 128), st_ino=10764460, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=281, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Belize", {st_dev=makedev(145, 128), st_ino=10764394, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=964, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Belem", {st_dev=makedev(145, 128), st_ino=10764530, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=574, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Barbados", {st_dev=makedev(145, 128), st_ino=10764512, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=330, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Bahia_Banderas", {st_dev=makedev(145, 128), st_ino=10764316, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1558, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Bahia", {st_dev=makedev(145, 128), st_ino=10764300, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1022, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Atka", {st_dev=makedev(145, 128), st_ino=11571712, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2339, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Atikokan", {st_dev=makedev(145, 128), st_ino=10764152, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=319, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Asuncion", {st_dev=makedev(145, 128), st_ino=10764336, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2021, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Aruba", {st_dev=makedev(145, 128), st_ino=10764154, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=198, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina", {st_dev=makedev(145, 128), st_ino=11272568, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/25-16:54:33, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Araguaina", {st_dev=makedev(145, 128), st_ino=10764656, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=882, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Antigua", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Anguilla", {st_dev=makedev(145, 128), st_ino=10764190, st_mode=S_IFREG|0644, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Anchorage", {st_dev=makedev(145, 128), st_ino=11571710, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2354, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Adak", {st_dev=makedev(145, 128), st_ino=11571712, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2339, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/America/Argentina", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=10764180, d_off=1035699197334542377, d_reclen=32, d_name="Buenos_Aires", d_type=DT_UNKNOWN} {d_ino=11272568, d_off=1268416010502140258, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=11273084, d_off=2746051647011477395, d_reclen=32, d_name="San_Luis", d_type=DT_UNKNOWN} {d_ino=11273098, d_off=2796322681619766018, d_reclen=32, d_name="Tucuman", d_type=DT_UNKNOWN} {d_ino=10764172, d_off=3434541221040543097, d_reclen=32, d_name="Cordoba", d_type=DT_UNKNOWN} {d_ino=11274764, d_off=4991999111503510319, d_reclen=32, d_name="La_Rioja", d_type=DT_UNKNOWN} {d_ino=11273012, d_off=5219028540391023960, d_reclen=32, d_name="Ushuaia", d_type=DT_UNKNOWN} {d_ino=11273032, d_off=5618081637586312637, d_reclen=32, d_name="Rio_Gallegos", d_type=DT_UNKNOWN} {d_ino=10764176, d_off=5803621480367074591, d_reclen=40, d_name="ComodRivadavia", d_type=DT_UNKNOWN} {d_ino=10764200, d_off=6410635639730171662, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=10764176, d_off=6448212249487940136, d_reclen=32, d_name="Catamarca", d_type=DT_UNKNOWN} {d_ino=11273090, d_off=7275804775009388020, d_reclen=32, d_name="Salta", d_type=DT_UNKNOWN} {d_ino=10764162, d_off=8097170495562735335, d_reclen=32, d_name="Jujuy", d_type=DT_UNKNOWN} {d_ino=10764158, d_off=8524879359091248540, d_reclen=32, d_name="Mendoza", d_type=DT_UNKNOWN} {d_ino=11273018, d_off=9223372036854775807, d_reclen=32, d_name="San_Juan", d_type=DT_UNKNOWN}}, 32768) = 472
00:05:28 brk(0x1a62000)                 = 0x1a62000
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Ushuaia", {st_dev=makedev(145, 128), st_ino=11273012, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Tucuman", {st_dev=makedev(145, 128), st_ino=11273098, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1097, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/San_Luis", {st_dev=makedev(145, 128), st_ino=11273084, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1083, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/San_Juan", {st_dev=makedev(145, 128), st_ino=11273018, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1083, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Salta", {st_dev=makedev(145, 128), st_ino=11273090, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1041, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Rio_Gallegos", {st_dev=makedev(145, 128), st_ino=11273032, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Mendoza", {st_dev=makedev(145, 128), st_ino=10764158, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/La_Rioja", {st_dev=makedev(145, 128), st_ino=11274764, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1083, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Jujuy", {st_dev=makedev(145, 128), st_ino=10764162, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1041, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Cordoba", {st_dev=makedev(145, 128), st_ino=10764172, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/ComodRivadavia", {st_dev=makedev(145, 128), st_ino=10764176, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Catamarca", {st_dev=makedev(145, 128), st_ino=10764176, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Argentina/Buenos_Aires", {st_dev=makedev(145, 128), st_ino=10764180, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1069, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/America/Indiana", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=11571700, d_off=688661106448470999, d_reclen=24, d_name="Knox", d_type=DT_UNKNOWN} {d_ino=11016344, d_off=1035699197334542377, d_reclen=32, d_name="Petersburg", d_type=DT_UNKNOWN} {d_ino=11010134, d_off=1164955107645379088, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=11016360, d_off=2611832811716379453, d_reclen=32, d_name="Marengo", d_type=DT_UNKNOWN} {d_ino=11016342, d_off=5803621480367074591, d_reclen=32, d_name="Vincennes", d_type=DT_UNKNOWN} {d_ino=10764200, d_off=6308667940117530039, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=11016346, d_off=6589752114001070245, d_reclen=32, d_name="Tell_City", d_type=DT_UNKNOWN} {d_ino=11016350, d_off=7418874831874817412, d_reclen=32, d_name="Winamac", d_type=DT_UNKNOWN} {d_ino=11016348, d_off=8053266557350811829, d_reclen=32, d_name="Vevay", d_type=DT_UNKNOWN} {d_ino=11571702, d_off=9223372036854775807, d_reclen=32, d_name="Indianapolis", d_type=DT_UNKNOWN}}, 32768) = 296
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Winamac", {st_dev=makedev(145, 128), st_ino=11016350, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1761, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Vincennes", {st_dev=makedev(145, 128), st_ino=11016342, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1677, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Vevay", {st_dev=makedev(145, 128), st_ino=11016348, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1397, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Tell_City", {st_dev=makedev(145, 128), st_ino=11016346, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1677, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Petersburg", {st_dev=makedev(145, 128), st_ino=11016344, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1887, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Marengo", {st_dev=makedev(145, 128), st_ino=11016360, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1705, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Knox", {st_dev=makedev(145, 128), st_ino=11571700, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2395, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Indiana/Indianapolis", {st_dev=makedev(145, 128), st_ino=11571702, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1649, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/America/Kentucky", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=11273154, d_off=5803621480367074591, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=10764200, d_off=8076272387021734486, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=11273148, d_off=8222012388026121146, d_reclen=32, d_name="Monticello", d_type=DT_UNKNOWN} {d_ino=10763938, d_off=9223372036854775807, d_reclen=32, d_name="Louisville", d_type=DT_UNKNOWN}}, 32768) = 112
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/America/Kentucky/Monticello", {st_dev=makedev(145, 128), st_ino=11273148, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2335, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/Kentucky/Louisville", {st_dev=makedev(145, 128), st_ino=10763938, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2755, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/America/North_Dakota", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=11016352, d_off=2123715370993187830, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=11016336, d_off=4287527849894037891, d_reclen=32, d_name="New_Salem", d_type=DT_UNKNOWN} {d_ino=11016364, d_off=5803621480367074591, d_reclen=32, d_name="Center", d_type=DT_UNKNOWN} {d_ino=10764200, d_off=6701051342064003242, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=11016366, d_off=9223372036854775807, d_reclen=32, d_name="Beulah", d_type=DT_UNKNOWN}}, 32768) = 144
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/America/North_Dakota/New_Salem", {st_dev=makedev(145, 128), st_ino=11016336, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2363, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/North_Dakota/Center", {st_dev=makedev(145, 128), st_ino=11016364, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2363, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/America/North_Dakota/Beulah", {st_dev=makedev(145, 128), st_ino=11016366, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2363, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 open("/usr/share/zoneinfo/Antarctica", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=11274590, d_off=503374325989943946, d_reclen=32, d_name="Vostok", d_type=DT_UNKNOWN} {d_ino=11274756, d_off=626097812009223112, d_reclen=32, d_name="Davis", d_type=DT_UNKNOWN} {d_ino=11274744, d_off=712344364406614962, d_reclen=32, d_name="Troll", d_type=DT_UNKNOWN} {d_ino=11829746, d_off=1035699197334542377, d_reclen=32, d_name="South_Pole", d_type=DT_UNKNOWN} {d_ino=11273194, d_off=1288706011450749473, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=11273406, d_off=2300166115179797248, d_reclen=32, d_name="Mawson", d_type=DT_UNKNOWN} {d_ino=11829746, d_off=2777954234184600999, d_reclen=32, d_name="McMurdo", d_type=DT_UNKNOWN} {d_ino=11274758, d_off=2988525959218342260, d_reclen=32, d_name="Syowa", d_type=DT_UNKNOWN} {d_ino=11273418, d_off=3518068675909930602, d_reclen=32, d_name="Rothera", d_type=DT_UNKNOWN} {d_ino=11274582, d_off=5518769234283186036, d_reclen=32, d_name="Palmer", d_type=DT_UNKNOWN} {d_ino=11274642, d_off=5803621480367074591, d_reclen=32, d_name="Macquarie", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=8228968643728611823, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=11273184, d_off=8261234963876885694, d_reclen=32, d_name="Casey", d_type=DT_UNKNOWN} {d_ino=11273410, d_off=9223372036854775807, d_reclen=40, d_name="DumontDUrville", d_type=DT_UNKNOWN}}, 32768) = 440
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Vostok", {st_dev=makedev(145, 128), st_ino=11274590, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Troll", {st_dev=makedev(145, 128), st_ino=11274744, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1148, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Syowa", {st_dev=makedev(145, 128), st_ino=11274758, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/South_Pole", {st_dev=makedev(145, 128), st_ino=11829746, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2434, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Rothera", {st_dev=makedev(145, 128), st_ino=11273418, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=158, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Palmer", {st_dev=makedev(145, 128), st_ino=11274582, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1388, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/McMurdo", {st_dev=makedev(145, 128), st_ino=11829746, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2434, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Mawson", {st_dev=makedev(145, 128), st_ino=11273406, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Macquarie", {st_dev=makedev(145, 128), st_ino=11274642, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1507, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/DumontDUrville", {st_dev=makedev(145, 128), st_ino=11273410, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=188, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Davis", {st_dev=makedev(145, 128), st_ino=11274756, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=283, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Antarctica/Casey", {st_dev=makedev(145, 128), st_ino=11273184, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=283, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 open("/usr/share/zoneinfo/Arctic", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=12600118, d_off=5803621480367074591, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=9975850, d_off=7465145177843517366, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=12600240, d_off=9223372036854775807, d_reclen=32, d_name="Longyearbyen", d_type=DT_UNKNOWN}}, 32768) = 80
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Arctic/Longyearbyen", {st_dev=makedev(145, 128), st_ino=12600240, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2225, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Asia", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=10763958, d_off=122903431660518170, d_reclen=32, d_name="Damascus", d_type=DT_UNKNOWN} {d_ino=10764066, d_off=145205065666169544, d_reclen=32, d_name="Dubai", d_type=DT_UNKNOWN} {d_ino=10763970, d_off=336211447468229507, d_reclen=32, d_name="Chita", d_type=DT_UNKNOWN} {d_ino=10764080, d_off=445139799497132038, d_reclen=24, d_name="Aden", d_type=DT_UNKNOWN} {d_ino=10763950, d_off=503223742609056936, d_reclen=32, d_name="Bangkok", d_type=DT_UNKNOWN} {d_ino=10763948, d_off=637863613053459583, d_reclen=32, d_name="Calcutta", d_type=DT_UNKNOWN} {d_ino=10764078, d_off=662535678310846217, d_reclen=32, d_name="Kashgar", d_type=DT_UNKNOWN} {d_ino=9975916, d_off=724561694844148770, d_reclen=32, d_name="Jerusalem", d_type=DT_UNKNOWN} {d_ino=10764078, d_off=928224385457632477, d_reclen=32, d_name="Urumqi", d_type=DT_UNKNOWN} {d_ino=10763988, d_off=934302189560878517, d_reclen=32, d_name="Jayapura", d_type=DT_UNKNOWN} {d_ino=9975914, d_off=967652208815515092, d_reclen=32, d_name="Seoul", d_type=DT_UNKNOWN} {d_ino=10764070, d_off=1035699197334542377, d_reclen=32, d_name="Tbilisi", d_type=DT_UNKNOWN} {d_ino=10763940, d_off=1140806099350102538, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=10763964, d_off=1158647275168716289, d_reclen=32, d_name="Pontianak", d_type=DT_UNKNOWN} {d_ino=9975876, d_off=1365135091763727380, d_reclen=32, d_name="Tokyo", d_type=DT_UNKNOWN} {d_ino=10763982, d_off=1634275041936766595, d_reclen=32, d_name="Yerevan", d_type=DT_UNKNOWN} {d_ino=10764090, d_off=1642662074054504582, d_reclen=24, d_name="Oral", d_type=DT_UNKNOWN} {d_ino=10764080, d_off=1662514649313721981, d_reclen=32, d_name="Riyadh", d_type=DT_UNKNOWN} {d_ino=10764000, d_off=1776620984466350874, d_reclen=32, d_name="Makassar", d_type=DT_UNKNOWN} {d_ino=9975918, d_off=1861284608144810161, d_reclen=32, d_name="Istanbul", d_type=DT_UNKNOWN} {d_ino=10763942, d_off=1863566492576098823, d_reclen=32, d_name="Manila", d_type=DT_UNKNOWN} {d_ino=9975922, d_off=1868284046368219086, d_reclen=32, d_name="Shanghai", d_type=DT_UNKNOWN} {d_ino=10764198, d_off=1883846676432408252, d_reclen=32, d_name="Kuching", d_type=DT_UNKNOWN} {d_ino=10763966, d_off=1885963587933738050, d_reclen=32, d_name="Dhaka", d_type=DT_UNKNOWN} {d_ino=10764160, d_off=1918018363343235204, d_reclen=32, d_name="Dushanbe", d_type=DT_UNKNOWN} {d_ino=10764072, d_off=1931615627786559823, d_reclen=24, d_name="Hovd", d_type=DT_UNKNOWN} {d_ino=10763950, d_off=1973041697695532768, d_reclen=32, d_name="Vientiane", d_type=DT_UNKNOWN} {d_ino=10764088, d_off=1998433802597463744, d_reclen=32, d_name="Tashkent", d_type=DT_UNKNOWN} {d_ino=10764086, d_off=2001307530126924530, d_reclen=24, d_name="Omsk", d_type=DT_UNKNOWN} {d_ino=10763968, d_off=2136043352215832066, d_reclen=32, d_name="Samarkand", d_type=DT_UNKNOWN} {d_ino=12600202, d_off=2203871375603764396, d_reclen=32, d_name="Nicosia", d_type=DT_UNKNOWN} {d_ino=10763954, d_off=2274767097714547452, d_reclen=32, d_name="Barnaul", d_type=DT_UNKNOWN} {d_ino=10764166, d_off=2276313946027361019, d_reclen=32, d_name="Novosibirsk", d_type=DT_UNKNOWN} {d_ino=10764058, d_off=2288109538224288926, d_reclen=32, d_name="Sakhalin", d_type=DT_UNKNOWN} {d_ino=10764004, d_off=2415088894547681460, d_reclen=32, d_name="Kathmandu", d_type=DT_UNKNOWN} {d_ino=10764128, d_off=2537473868374826232, d_reclen=32, d_name="Aqtobe", d_type=DT_UNKNOWN} {d_ino=10764018, d_off=2788965770710255574, d_reclen=32, d_name="Bahrain", d_type=DT_UNKNOWN} {d_ino=10764024, d_off=2807204846641926563, d_reclen=32, d_name="Krasnoyarsk", d_type=DT_UNKNOWN} {d_ino=10764170, d_off=2866215384159512565, d_reclen=32, d_name="Atyrau", d_type=DT_UNKNOWN} {d_ino=10764042, d_off=3034082444460109336, d_reclen=32, d_name="Macao", d_type=DT_UNKNOWN} {d_ino=9975910, d_off=3173822352111299366, d_reclen=32, d_name="Taipei", d_type=DT_UNKNOWN} {d_ino=10764168, d_off=3242316348950384119, d_reclen=32, d_name="Vladivostok", d_type=DT_UNKNOWN} {d_ino=10764182, d_off=3314696043616040797, d_reclen=32, d_name="Kuala_Lumpur", d_type=DT_UNKNOWN} {d_ino=10764028, d_off=3332672716030181586, d_reclen=32, d_name="Yangon", d_type=DT_UNKNOWN} {d_ino=10764028, d_off=3360494912213922132, d_reclen=32, d_name="Rangoon", d_type=DT_UNKNOWN} {d_ino=10764042, d_off=3369954666849189081, d_reclen=32, d_name="Macau", d_type=DT_UNKNOWN} {d_ino=10763966, d_off=3485892374243142112, d_reclen=32, d_name="Dacca", d_type=DT_UNKNOWN} {d_ino=9975922, d_off=3497795262336532014, d_reclen=32, d_name="Harbin", d_type=DT_UNKNOWN} {d_ino=10764016, d_off=3605345546268884455, d_reclen=32, d_name="Thimbu", d_type=DT_UNKNOWN} {d_ino=10764082, d_off=3669756489977741203, d_reclen=32, d_name="Ulan_Bator", d_type=DT_UNKNOWN} {d_ino=10764184, d_off=3842162013889863314, d_reclen=40, d_name="Srednekolymsk", d_type=DT_UNKNOWN} {d_ino=10764064, d_off=3937041490778886621, d_reclen=32, d_name="Famagusta", d_type=DT_UNKNOWN} {d_ino=10764068, d_off=4095510213303962092, d_reclen=32, d_name="Irkutsk", d_type=DT_UNKNOWN} {d_ino=10764018, d_off=4246969693030271476, d_reclen=32, d_name="Qatar", d_type=DT_UNKNOWN} {d_ino=10764026, d_off=4393968380835497249, d_reclen=40, d_name="Yekaterinburg", d_type=DT_UNKNOWN} {d_ino=10764192, d_off=4407576863272704565, d_reclen=32, d_name="Hebron", d_type=DT_UNKNOWN} {d_ino=10764156, d_off=4459896728251497182, d_reclen=32, d_name="Bishkek", d_type=DT_UNKNOWN} {d_ino=10764378, d_off=4698472734271878326, d_reclen=32, d_name="Almaty", d_type=DT_UNKNOWN} {d_ino=9975916, d_off=4750868461778853167, d_reclen=32, d_name="Tel_Aviv", d_type=DT_UNKNOWN} {d_ino=10764082, d_off=4953432506852638578, d_reclen=32, d_name="Ulaanbaatar", d_type=DT_UNKNOWN} {d_ino=10763946, d_off=5039920167783181741, d_reclen=32, d_name="Aqtau", d_type=DT_UNKNOWN} {d_ino=10764016, d_off=5125471714993650096, d_reclen=32, d_name="Thimphu", d_type=DT_UNKNOWN} {d_ino=10764040, d_off=5401369260697150680, d_reclen=32, d_name="Ust-Nera", d_type=DT_UNKNOWN} {d_ino=10764074, d_off=5679025260927081496, d_reclen=32, d_name="Novokuznetsk", d_type=DT_UNKNOWN} {d_ino=9975908, d_off=5714411583334451413, d_reclen=32, d_name="Tehran", d_type=DT_UNKNOWN} {d_ino=10764084, d_off=5778183280742313518, d_reclen=32, d_name="Jakarta", d_type=DT_UNKNOWN} {d_ino=10763974, d_off=5803621480367074591, d_reclen=24, d_name="Baku", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=5807167013706259578, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=10764164, d_off=5998525105402207443, d_reclen=32, d_name="Kamchatka", d_type=DT_UNKNOWN} {d_ino=10764096, d_off=6085610218761421924, d_reclen=32, d_name="Ashgabat", d_type=DT_UNKNOWN} {d_ino=10764188, d_off=6098997726907351563, d_reclen=32, d_name="Yakutsk", d_type=DT_UNKNOWN} {d_ino=10763986, d_off=6379296524305449334, d_reclen=32, d_name="Khandyga", d_type=DT_UNKNOWN} {d_ino=10764008, d_off=6549378904808947974, d_reclen=32, d_name="Choibalsan", d_type=DT_UNKNOWN} {d_ino=10764076, d_off=6611164338582238380, d_reclen=32, d_name="Magadan", d_type=DT_UNKNOWN} {d_ino=9975922, d_off=6773023980037483881, d_reclen=32, d_name="Chungking", d_type=DT_UNKNOWN} {d_ino=10764186, d_off=6774993947361569505, d_reclen=32, d_name="Amman", d_type=DT_UNKNOWN} {d_ino=9975912, d_off=6879647905614587256, d_reclen=32, d_name="Singapore", d_type=DT_UNKNOWN} {d_ino=10763948, d_off=7126013883298721806, d_reclen=32, d_name="Kolkata", d_type=DT_UNKNOWN} {d_ino=10764062, d_off=7162900280394734039, d_reclen=32, d_name="Tomsk", d_type=DT_UNKNOWN} {d_ino=10764096, d_off=7693900299494267491, d_reclen=32, d_name="Ashkhabad", d_type=DT_UNKNOWN} {d_ino=9975922, d_off=7763726044847643430, d_reclen=32, d_name="Chongqing", d_type=DT_UNKNOWN} {d_ino=10763978, d_off=7885830772766109654, d_reclen=32, d_name="Ho_Chi_Minh", d_type=DT_UNKNOWN} {d_ino=10764174, d_off=7985248328337429472, d_reclen=24, d_name="Dili", d_type=DT_UNKNOWN} {d_ino=10764080, d_off=8265658267168932302, d_reclen=32, d_name="Kuwait", d_type=DT_UNKNOWN} {d_ino=10764134, d_off=8301111009765135598, d_reclen=32, d_name="Pyongyang", d_type=DT_UNKNOWN} {d_ino=10764178, d_off=8396580914671971436, d_reclen=32, d_name="Kabul", d_type=DT_UNKNOWN} {d_ino=10764196, d_off=8412383065815885224, d_reclen=24, d_name="Gaza", d_type=DT_UNKNOWN} {d_ino=10764030, d_off=8494494009762010550, d_reclen=32, d_name="Karachi", d_type=DT_UNKNOWN} {d_ino=10764012, d_off=8679905153244918719, d_reclen=32, d_name="Brunei", d_type=DT_UNKNOWN} {d_ino=10764102, d_off=8698791652532965905, d_reclen=32, d_name="Qyzylorda", d_type=DT_UNKNOWN} {d_ino=10764004, d_off=8714924999268197314, d_reclen=32, d_name="Katmandu", d_type=DT_UNKNOWN} {d_ino=10763960, d_off=8752213596546699936, d_reclen=32, d_name="Baghdad", d_type=DT_UNKNOWN} {d_ino=10763962, d_off=8757190263102770854, d_reclen=32, d_name="Beirut", d_type=DT_UNKNOWN} {d_ino=10763950, d_off=8792496250002654549, d_reclen=32, d_name="Phnom_Penh", d_type=DT_UNKNOWN} {d_ino=10764066, d_off=8815440010174786885, d_reclen=32, d_name="Muscat", d_type=DT_UNKNOWN} {d_ino=10764000, d_off=8921444927307012048, d_reclen=40, d_name="Ujung_Pandang", d_type=DT_UNKNOWN} {d_ino=10764014, d_off=8996801000812838969, d_reclen=32, d_name="Anadyr", d_type=DT_UNKNOWN} {d_ino=10763984, d_off=9090662079350342967, d_reclen=32, d_name="Colombo", d_type=DT_UNKNOWN} {d_ino=10763978, d_off=9183318049944746134, d_reclen=32, d_name="Saigon", d_type=DT_UNKNOWN} {d_ino=9975920, d_off=9223372036854775807, d_reclen=32, d_name="Hong_Kong", d_type=DT_UNKNOWN}}, 32768) = 3152
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Yerevan", {st_dev=makedev(145, 128), st_ino=10763982, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1153, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Yekaterinburg", {st_dev=makedev(145, 128), st_ino=10764026, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1221, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Yangon", {st_dev=makedev(145, 128), st_ino=10764028, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=241, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Yakutsk", {st_dev=makedev(145, 128), st_ino=10764188, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1183, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Vladivostok", {st_dev=makedev(145, 128), st_ino=10764168, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1184, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Vientiane", {st_dev=makedev(145, 128), st_ino=10763950, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=180, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Ust-Nera", {st_dev=makedev(145, 128), st_ino=10764040, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1230, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Urumqi", {st_dev=makedev(145, 128), st_ino=10764078, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Ulan_Bator", {st_dev=makedev(145, 128), st_ino=10764082, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=893, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Ulaanbaatar", {st_dev=makedev(145, 128), st_ino=10764082, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=893, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Ujung_Pandang", {st_dev=makedev(145, 128), st_ino=10764000, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=274, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Tomsk", {st_dev=makedev(145, 128), st_ino=10764062, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1211, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Tokyo", {st_dev=makedev(145, 128), st_ino=9975876, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=292, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Thimphu", {st_dev=makedev(145, 128), st_ino=10764016, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=201, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Thimbu", {st_dev=makedev(145, 128), st_ino=10764016, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=201, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Tel_Aviv", {st_dev=makedev(145, 128), st_ino=9975916, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8965, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Tehran", {st_dev=makedev(145, 128), st_ino=9975908, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1674, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Tbilisi", {st_dev=makedev(145, 128), st_ino=10764070, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1024, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Tashkent", {st_dev=makedev(145, 128), st_ino=10764088, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=607, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Taipei", {st_dev=makedev(145, 128), st_ino=9975910, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=748, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Srednekolymsk", {st_dev=makedev(145, 128), st_ino=10764184, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1184, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Singapore", {st_dev=makedev(145, 128), st_ino=9975912, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=384, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Shanghai", {st_dev=makedev(145, 128), st_ino=9975922, st_mode=S_IFREG|0644, st_nlink=5, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=528, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Seoul", {st_dev=makedev(145, 128), st_ino=9975914, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=517, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Samarkand", {st_dev=makedev(145, 128), st_ino=10763968, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=591, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Sakhalin", {st_dev=makedev(145, 128), st_ino=10764058, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1190, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Saigon", {st_dev=makedev(145, 128), st_ino=10763978, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=345, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Riyadh", {st_dev=makedev(145, 128), st_ino=10764080, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Rangoon", {st_dev=makedev(145, 128), st_ino=10764028, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=241, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Qyzylorda", {st_dev=makedev(145, 128), st_ino=10764102, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1003, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Qatar", {st_dev=makedev(145, 128), st_ino=10764018, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Pyongyang", {st_dev=makedev(145, 128), st_ino=10764134, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=253, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Pontianak", {st_dev=makedev(145, 128), st_ino=10763964, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=381, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Phnom_Penh", {st_dev=makedev(145, 128), st_ino=10763950, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=180, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Oral", {st_dev=makedev(145, 128), st_ino=10764090, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=995, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Omsk", {st_dev=makedev(145, 128), st_ino=10764086, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1183, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Novosibirsk", {st_dev=makedev(145, 128), st_ino=10764166, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1211, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Novokuznetsk", {st_dev=makedev(145, 128), st_ino=10764074, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1153, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Nicosia", {st_dev=makedev(145, 128), st_ino=12600202, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2002, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Muscat", {st_dev=makedev(145, 128), st_ino=10764066, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Manila", {st_dev=makedev(145, 128), st_ino=10763942, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=317, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Makassar", {st_dev=makedev(145, 128), st_ino=10764000, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=274, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Magadan", {st_dev=makedev(145, 128), st_ino=10764076, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1198, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Macau", {st_dev=makedev(145, 128), st_ino=10764042, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1241, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Macao", {st_dev=makedev(145, 128), st_ino=10764042, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1241, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kuwait", {st_dev=makedev(145, 128), st_ino=10764080, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kuching", {st_dev=makedev(145, 128), st_ino=10764198, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=477, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kuala_Lumpur", {st_dev=makedev(145, 128), st_ino=10764182, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=384, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Krasnoyarsk", {st_dev=makedev(145, 128), st_ino=10764024, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1183, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kolkata", {st_dev=makedev(145, 128), st_ino=10763948, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=286, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Khandyga", {st_dev=makedev(145, 128), st_ino=10763986, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1267, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Katmandu", {st_dev=makedev(145, 128), st_ino=10764004, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=210, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kathmandu", {st_dev=makedev(145, 128), st_ino=10764004, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=210, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kashgar", {st_dev=makedev(145, 128), st_ino=10764078, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Karachi", {st_dev=makedev(145, 128), st_ino=10764030, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=403, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kamchatka", {st_dev=makedev(145, 128), st_ino=10764164, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1154, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Kabul", {st_dev=makedev(145, 128), st_ino=10764178, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=189, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Jerusalem", {st_dev=makedev(145, 128), st_ino=9975916, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8965, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Jayapura", {st_dev=makedev(145, 128), st_ino=10763988, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=237, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Jakarta", {st_dev=makedev(145, 128), st_ino=10764084, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=366, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Istanbul", {st_dev=makedev(145, 128), st_ino=9975918, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2110, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Irkutsk", {st_dev=makedev(145, 128), st_ino=10764068, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1204, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Hovd", {st_dev=makedev(145, 128), st_ino=10764072, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=893, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Hong_Kong", {st_dev=makedev(145, 128), st_ino=9975920, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Ho_Chi_Minh", {st_dev=makedev(145, 128), st_ino=10763978, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=345, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Hebron", {st_dev=makedev(145, 128), st_ino=10764192, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2297, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Harbin", {st_dev=makedev(145, 128), st_ino=9975922, st_mode=S_IFREG|0644, st_nlink=5, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=528, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Gaza", {st_dev=makedev(145, 128), st_ino=10764196, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2269, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Famagusta", {st_dev=makedev(145, 128), st_ino=10764064, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2012, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Dushanbe", {st_dev=makedev(145, 128), st_ino=10764160, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=593, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Dubai", {st_dev=makedev(145, 128), st_ino=10764066, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Dili", {st_dev=makedev(145, 128), st_ino=10764174, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=225, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Dhaka", {st_dev=makedev(145, 128), st_ino=10763966, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=330, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Damascus", {st_dev=makedev(145, 128), st_ino=10763958, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2306, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Dacca", {st_dev=makedev(145, 128), st_ino=10763966, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=330, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Colombo", {st_dev=makedev(145, 128), st_ino=10763984, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=357, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Chungking", {st_dev=makedev(145, 128), st_ino=9975922, st_mode=S_IFREG|0644, st_nlink=5, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=528, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Chongqing", {st_dev=makedev(145, 128), st_ino=9975922, st_mode=S_IFREG|0644, st_nlink=5, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=528, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Choibalsan", {st_dev=makedev(145, 128), st_ino=10764008, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=947, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Chita", {st_dev=makedev(145, 128), st_ino=10763970, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Calcutta", {st_dev=makedev(145, 128), st_ino=10763948, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=286, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Brunei", {st_dev=makedev(145, 128), st_ino=10764012, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=201, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Bishkek", {st_dev=makedev(145, 128), st_ino=10764156, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1001, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Beirut", {st_dev=makedev(145, 128), st_ino=10763962, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2149, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Barnaul", {st_dev=makedev(145, 128), st_ino=10763954, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1211, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Bangkok", {st_dev=makedev(145, 128), st_ino=10763950, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=180, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Baku", {st_dev=makedev(145, 128), st_ino=10763974, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1241, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Bahrain", {st_dev=makedev(145, 128), st_ino=10764018, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Baghdad", {st_dev=makedev(145, 128), st_ino=10763960, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=964, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Atyrau", {st_dev=makedev(145, 128), st_ino=10764170, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=981, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Ashkhabad", {st_dev=makedev(145, 128), st_ino=10764096, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=607, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Ashgabat", {st_dev=makedev(145, 128), st_ino=10764096, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=607, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Aqtobe", {st_dev=makedev(145, 128), st_ino=10764128, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=987, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Aqtau", {st_dev=makedev(145, 128), st_ino=10763946, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=973, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Anadyr", {st_dev=makedev(145, 128), st_ino=10764014, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1178, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Amman", {st_dev=makedev(145, 128), st_ino=10764186, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8620, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Almaty", {st_dev=makedev(145, 128), st_ino=10764378, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=971, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Asia/Aden", {st_dev=makedev(145, 128), st_ino=10764080, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Atlantic", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=13116258, d_off=645251906471219987, d_reclen=32, d_name="Canary", d_type=DT_UNKNOWN} {d_ino=13116324, d_off=1035699197334542377, d_reclen=32, d_name="Faeroe", d_type=DT_UNKNOWN} {d_ino=13116254, d_off=1798693526510450568, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=9975852, d_off=3630146654742145191, d_reclen=32, d_name="Reykjavik", d_type=DT_UNKNOWN} {d_ino=13116256, d_off=4455093167512904957, d_reclen=32, d_name="Madeira", d_type=DT_UNKNOWN} {d_ino=13116264, d_off=4552917283959653286, d_reclen=32, d_name="Stanley", d_type=DT_UNKNOWN} {d_ino=13109334, d_off=5024523976895739025, d_reclen=32, d_name="Azores", d_type=DT_UNKNOWN} {d_ino=13116266, d_off=5608880605301450802, d_reclen=40, d_name="South_Georgia", d_type=DT_UNKNOWN} {d_ino=13116340, d_off=5803621480367074591, d_reclen=32, d_name="St_Helena", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=5905922730394682239, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=13116270, d_off=6136706581525147405, d_reclen=32, d_name="Cape_Verde", d_type=DT_UNKNOWN} {d_ino=12600240, d_off=6495257053984744444, d_reclen=32, d_name="Jan_Mayen", d_type=DT_UNKNOWN} {d_ino=13116324, d_off=9210891147666645648, d_reclen=32, d_name="Faroe", d_type=DT_UNKNOWN} {d_ino=13116268, d_off=9223372036854775807, d_reclen=32, d_name="Bermuda", d_type=DT_UNKNOWN}}, 32768) = 440
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Stanley", {st_dev=makedev(145, 128), st_ino=13116264, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1195, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/St_Helena", {st_dev=makedev(145, 128), st_ino=13116340, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=156, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/South_Georgia", {st_dev=makedev(145, 128), st_ino=13116266, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=141, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Reykjavik", {st_dev=makedev(145, 128), st_ino=9975852, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Madeira", {st_dev=makedev(145, 128), st_ino=13116256, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3458, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Jan_Mayen", {st_dev=makedev(145, 128), st_ino=12600240, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2225, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Faroe", {st_dev=makedev(145, 128), st_ino=13116324, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1815, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Faeroe", {st_dev=makedev(145, 128), st_ino=13116324, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1815, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Cape_Verde", {st_dev=makedev(145, 128), st_ino=13116270, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=256, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Canary", {st_dev=makedev(145, 128), st_ino=13116258, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1897, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Bermuda", {st_dev=makedev(145, 128), st_ino=13116268, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1990, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Atlantic/Azores", {st_dev=makedev(145, 128), st_ino=13109334, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3453, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 open("/usr/share/zoneinfo/Australia", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=10532506, d_off=1211876729572066297, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=10532528, d_off=1690255305847334632, d_reclen=24, d_name="West", d_type=DT_UNKNOWN} {d_ino=10532530, d_off=1704893328719740313, d_reclen=32, d_name="Brisbane", d_type=DT_UNKNOWN} {d_ino=10532526, d_off=1750133444995729066, d_reclen=32, d_name="Yancowinna", d_type=DT_UNKNOWN} {d_ino=10532490, d_off=1780286217660284965, d_reclen=32, d_name="Currie", d_type=DT_UNKNOWN} {d_ino=10532514, d_off=2311531533400713019, d_reclen=32, d_name="Sydney", d_type=DT_UNKNOWN} {d_ino=10532512, d_off=2541965562169305746, d_reclen=32, d_name="Darwin", d_type=DT_UNKNOWN} {d_ino=10532520, d_off=2716030758022620727, d_reclen=32, d_name="Lord_Howe", d_type=DT_UNKNOWN} {d_ino=10532524, d_off=2919052337633999420, d_reclen=32, d_name="Melbourne", d_type=DT_UNKNOWN} {d_ino=10532514, d_off=3250963231898634107, d_reclen=32, d_name="Canberra", d_type=DT_UNKNOWN} {d_ino=10532520, d_off=4505311133534619626, d_reclen=24, d_name="LHI", d_type=DT_UNKNOWN} {d_ino=10532514, d_off=4699010308286644786, d_reclen=24, d_name="NSW", d_type=DT_UNKNOWN} {d_ino=10532510, d_off=5803621480367074591, d_reclen=32, d_name="South", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6082152883189873950, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=10532530, d_off=6332653007091836100, d_reclen=32, d_name="Queensland", d_type=DT_UNKNOWN} {d_ino=10532528, d_off=7069492967916550898, d_reclen=32, d_name="Perth", d_type=DT_UNKNOWN} {d_ino=10532512, d_off=7292736636656166702, d_reclen=32, d_name="North", d_type=DT_UNKNOWN} {d_ino=10532508, d_off=7437711182751129193, d_reclen=32, d_name="Hobart", d_type=DT_UNKNOWN} {d_ino=10532522, d_off=7923633447057049967, d_reclen=32, d_name="Lindeman", d_type=DT_UNKNOWN} {d_ino=10532524, d_off=7995733759828756129, d_reclen=32, d_name="Victoria", d_type=DT_UNKNOWN} {d_ino=10532514, d_off=8210712247200294322, d_reclen=24, d_name="ACT", d_type=DT_UNKNOWN} {d_ino=10532510, d_off=8563329677990154081, d_reclen=32, d_name="Adelaide", d_type=DT_UNKNOWN} {d_ino=10532526, d_off=8805384732899905162, d_reclen=32, d_name="Broken_Hill", d_type=DT_UNKNOWN} {d_ino=10532532, d_off=9163444499928953614, d_reclen=32, d_name="Eucla", d_type=DT_UNKNOWN} {d_ino=10532508, d_off=9223372036854775807, d_reclen=32, d_name="Tasmania", d_type=DT_UNKNOWN}}, 32768) = 752
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Yancowinna", {st_dev=makedev(145, 128), st_ino=10532526, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2252, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/West", {st_dev=makedev(145, 128), st_ino=10532528, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=453, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Victoria", {st_dev=makedev(145, 128), st_ino=10532524, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Tasmania", {st_dev=makedev(145, 128), st_ino=10532508, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2309, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Sydney", {st_dev=makedev(145, 128), st_ino=10532514, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/South", {st_dev=makedev(145, 128), st_ino=10532510, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2216, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Queensland", {st_dev=makedev(145, 128), st_ino=10532530, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=426, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Perth", {st_dev=makedev(145, 128), st_ino=10532528, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=453, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/North", {st_dev=makedev(145, 128), st_ino=10532512, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=301, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/NSW", {st_dev=makedev(145, 128), st_ino=10532514, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Melbourne", {st_dev=makedev(145, 128), st_ino=10532524, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Lord_Howe", {st_dev=makedev(145, 128), st_ino=10532520, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1849, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Lindeman", {st_dev=makedev(145, 128), st_ino=10532522, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=496, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/LHI", {st_dev=makedev(145, 128), st_ino=10532520, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1849, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Hobart", {st_dev=makedev(145, 128), st_ino=10532508, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2309, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Eucla", {st_dev=makedev(145, 128), st_ino=10532532, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=463, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Darwin", {st_dev=makedev(145, 128), st_ino=10532512, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=301, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Currie", {st_dev=makedev(145, 128), st_ino=10532490, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Canberra", {st_dev=makedev(145, 128), st_ino=10532514, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Broken_Hill", {st_dev=makedev(145, 128), st_ino=10532526, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2252, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Brisbane", {st_dev=makedev(145, 128), st_ino=10532530, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=426, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/Adelaide", {st_dev=makedev(145, 128), st_ino=10532510, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2216, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Australia/ACT", {st_dev=makedev(145, 128), st_ino=10532514, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Brazil", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=10763916, d_off=1211876729572066297, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=10763920, d_off=5178613797038087978, d_reclen=24, d_name="West", d_type=DT_UNKNOWN} {d_ino=10763980, d_off=5803621480367074591, d_reclen=24, d_name="East", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6362136508957596981, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=10763932, d_off=8830581386619973357, d_reclen=32, d_name="DeNoronha", d_type=DT_UNKNOWN} {d_ino=10763926, d_off=9223372036854775807, d_reclen=24, d_name="Acre", d_type=DT_UNKNOWN}}, 32768) = 152
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Brazil/West", {st_dev=makedev(145, 128), st_ino=10763920, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=602, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Brazil/East", {st_dev=makedev(145, 128), st_ino=10763980, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2002, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Brazil/DeNoronha", {st_dev=makedev(145, 128), st_ino=10763932, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=714, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Brazil/Acre", {st_dev=makedev(145, 128), st_ino=10763926, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=618, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Canada", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=13116272, d_off=1445714652730539037, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=13116328, d_off=1454808623987029374, d_reclen=32, d_name="Pacific", d_type=DT_UNKNOWN} {d_ino=13116334, d_off=2076716777866258021, d_reclen=32, d_name="Eastern", d_type=DT_UNKNOWN} {d_ino=13116332, d_off=2268958924306679038, d_reclen=32, d_name="Saskatchewan", d_type=DT_UNKNOWN} {d_ino=13116338, d_off=2877058801505780465, d_reclen=32, d_name="Mountain", d_type=DT_UNKNOWN} {d_ino=13116262, d_off=5270850230954744962, d_reclen=32, d_name="Central", d_type=DT_UNKNOWN} {d_ino=13116336, d_off=5285396093863701044, d_reclen=32, d_name="Atlantic", d_type=DT_UNKNOWN} {d_ino=13116326, d_off=5803621480367074591, d_reclen=32, d_name="Yukon", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6559140790887806312, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=13116330, d_off=9223372036854775807, d_reclen=32, d_name="Newfoundland", d_type=DT_UNKNOWN}}, 32768) = 304
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Yukon", {st_dev=makedev(145, 128), st_ino=13116326, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2067, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Saskatchewan", {st_dev=makedev(145, 128), st_ino=13116332, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=980, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Pacific", {st_dev=makedev(145, 128), st_ino=13116328, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2875, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Newfoundland", {st_dev=makedev(145, 128), st_ino=13116330, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3622, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Mountain", {st_dev=makedev(145, 128), st_ino=13116338, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2388, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Eastern", {st_dev=makedev(145, 128), st_ino=13116334, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3477, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Central", {st_dev=makedev(145, 128), st_ino=13116262, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2865, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Canada/Atlantic", {st_dev=makedev(145, 128), st_ino=13116336, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3424, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Chile", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=11571618, d_off=5152823064178895678, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=11571682, d_off=5803621480367074591, d_reclen=32, d_name="Continental", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=7423719896538638727, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=11829426, d_off=9223372036854775807, d_reclen=32, d_name="EasterIsland", d_type=DT_UNKNOWN}}, 32768) = 112
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Chile/EasterIsland", {st_dev=makedev(145, 128), st_ino=11829426, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9047, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Chile/Continental", {st_dev=makedev(145, 128), st_ino=11571682, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9343, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Etc", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=12600144, d_off=338969345173238307, d_reclen=32, d_name="GMT+9", d_type=DT_UNKNOWN} {d_ino=12600176, d_off=663475737372721008, d_reclen=32, d_name="GMT+11", d_type=DT_UNKNOWN} {d_ino=12600174, d_off=948178589485485626, d_reclen=32, d_name="GMT-14", d_type=DT_UNKNOWN} {d_ino=12600166, d_off=1035699197334542377, d_reclen=32, d_name="GMT+6", d_type=DT_UNKNOWN} {d_ino=12600122, d_off=1068028606208499539, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=9975862, d_off=1258060632113514390, d_reclen=32, d_name="Universal", d_type=DT_UNKNOWN} {d_ino=12600394, d_off=1311542710489557815, d_reclen=32, d_name="GMT+1", d_type=DT_UNKNOWN} {d_ino=12600146, d_off=1903238523353914701, d_reclen=32, d_name="GMT+7", d_type=DT_UNKNOWN} {d_ino=12600126, d_off=2541133180338067422, d_reclen=32, d_name="GMT-12", d_type=DT_UNKNOWN} {d_ino=12600132, d_off=2639801770946069540, d_reclen=32, d_name="GMT+8", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=2871117497364429346, d_reclen=32, d_name="Greenwich", d_type=DT_UNKNOWN} {d_ino=12600150, d_off=3235167058356513610, d_reclen=32, d_name="GMT-3", d_type=DT_UNKNOWN} {d_ino=12600124, d_off=3652456177034678346, d_reclen=32, d_name="GMT-11", d_type=DT_UNKNOWN} {d_ino=12600148, d_off=3733929103877765553, d_reclen=32, d_name="GMT+2", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=3856898467905654883, d_reclen=24, d_name="GMT0", d_type=DT_UNKNOWN} {d_ino=12600160, d_off=3904841131790646663, d_reclen=32, d_name="GMT-4", d_type=DT_UNKNOWN} {d_ino=12600172, d_off=4217924907647517196, d_reclen=32, d_name="GMT+10", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=4482882257678541543, d_reclen=32, d_name="GMT-0", d_type=DT_UNKNOWN} {d_ino=12600128, d_off=4512597772616862937, d_reclen=32, d_name="GMT-13", d_type=DT_UNKNOWN} {d_ino=12600156, d_off=5146162245901112796, d_reclen=32, d_name="GMT+4", d_type=DT_UNKNOWN} {d_ino=9975862, d_off=5346697764201915336, d_reclen=24, d_name="Zulu", d_type=DT_UNKNOWN} {d_ino=12600136, d_off=5646142898411240071, d_reclen=32, d_name="GMT-10", d_type=DT_UNKNOWN} {d_ino=12600168, d_off=5746078618612292902, d_reclen=32, d_name="GMT+5", d_type=DT_UNKNOWN} {d_ino=9975866, d_off=5803621480367074591, d_reclen=24, d_name="UCT", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6154123618147295640, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=12600142, d_off=6627004103702498257, d_reclen=32, d_name="GMT-9", d_type=DT_UNKNOWN} {d_ino=12600138, d_off=6649270491405418604, d_reclen=32, d_name="GMT+3", d_type=DT_UNKNOWN} {d_ino=12600178, d_off=6680331810048071912, d_reclen=32, d_name="GMT-5", d_type=DT_UNKNOWN} {d_ino=12600130, d_off=7323706975523127812, d_reclen=32, d_name="GMT-1", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=7750597040332325068, d_reclen=24, d_name="GMT", d_type=DT_UNKNOWN} {d_ino=12600154, d_off=7795531788383404835, d_reclen=32, d_name="GMT+12", d_type=DT_UNKNOWN} {d_ino=12600162, d_off=7811216075612944581, d_reclen=32, d_name="GMT-2", d_type=DT_UNKNOWN} {d_ino=12600152, d_off=8246803328810746979, d_reclen=32, d_name="GMT-6", d_type=DT_UNKNOWN} {d_ino=12600170, d_off=8917273798407439106, d_reclen=32, d_name="GMT-8", d_type=DT_UNKNOWN} {d_ino=9975906, d_off=9054333470044407010, d_reclen=32, d_name="GMT+0", d_type=DT_UNKNOWN} {d_ino=12600158, d_off=9099722621944483887, d_reclen=32, d_name="GMT-7", d_type=DT_UNKNOWN} {d_ino=9975862, d_off=9223372036854775807, d_reclen=24, d_name="UTC", d_type=DT_UNKNOWN}}, 32768) = 1128
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/Zulu", {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/Universal", {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/UTC", {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/UCT", {st_dev=makedev(145, 128), st_ino=9975866, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/Greenwich", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT0", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-9", {st_dev=makedev(145, 128), st_ino=12600142, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-8", {st_dev=makedev(145, 128), st_ino=12600170, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-7", {st_dev=makedev(145, 128), st_ino=12600158, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-6", {st_dev=makedev(145, 128), st_ino=12600152, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-5", {st_dev=makedev(145, 128), st_ino=12600178, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-4", {st_dev=makedev(145, 128), st_ino=12600160, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-3", {st_dev=makedev(145, 128), st_ino=12600150, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-2", {st_dev=makedev(145, 128), st_ino=12600162, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-14", {st_dev=makedev(145, 128), st_ino=12600174, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=122, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-13", {st_dev=makedev(145, 128), st_ino=12600128, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=122, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-12", {st_dev=makedev(145, 128), st_ino=12600126, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=122, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-11", {st_dev=makedev(145, 128), st_ino=12600124, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=122, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-10", {st_dev=makedev(145, 128), st_ino=12600136, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=122, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-1", {st_dev=makedev(145, 128), st_ino=12600130, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT-0", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+9", {st_dev=makedev(145, 128), st_ino=12600144, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+8", {st_dev=makedev(145, 128), st_ino=12600132, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+7", {st_dev=makedev(145, 128), st_ino=12600146, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+6", {st_dev=makedev(145, 128), st_ino=12600166, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+5", {st_dev=makedev(145, 128), st_ino=12600168, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+4", {st_dev=makedev(145, 128), st_ino=12600156, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+3", {st_dev=makedev(145, 128), st_ino=12600138, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+2", {st_dev=makedev(145, 128), st_ino=12600148, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+12", {st_dev=makedev(145, 128), st_ino=12600154, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+11", {st_dev=makedev(145, 128), st_ino=12600176, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+10", {st_dev=makedev(145, 128), st_ino=12600172, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=121, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+1", {st_dev=makedev(145, 128), st_ino=12600394, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=120, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT+0", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Etc/GMT", {st_dev=makedev(145, 128), st_ino=9975906, st_mode=S_IFREG|0644, st_nlink=10, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Europe", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=12600262, d_off=135264222916314668, d_reclen=32, d_name="Ulyanovsk", d_type=DT_UNKNOWN} {d_ino=12600256, d_off=170867767252641011, d_reclen=32, d_name="Simferopol", d_type=DT_UNKNOWN} {d_ino=12600208, d_off=176821677216981874, d_reclen=32, d_name="Madrid", d_type=DT_UNKNOWN} {d_ino=12600278, d_off=282536317690604028, d_reclen=32, d_name="Tirane", d_type=DT_UNKNOWN} {d_ino=12600200, d_off=324575650931392215, d_reclen=32, d_name="Budapest", d_type=DT_UNKNOWN} {d_ino=12600220, d_off=437778160748440560, d_reclen=32, d_name="Podgorica", d_type=DT_UNKNOWN} {d_ino=12600236, d_off=1035699197334542377, d_reclen=32, d_name="Zurich", d_type=DT_UNKNOWN} {d_ino=12600180, d_off=1080265793234578341, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=12600272, d_off=1439192263346849391, d_reclen=32, d_name="Copenhagen", d_type=DT_UNKNOWN} {d_ino=12600220, d_off=1632132395860005425, d_reclen=32, d_name="Skopje", d_type=DT_UNKNOWN} {d_ino=12600274, d_off=1776620984466350874, d_reclen=32, d_name="Volgograd", d_type=DT_UNKNOWN} {d_ino=9975918, d_off=2070475417563400067, d_reclen=32, d_name="Istanbul", d_type=DT_UNKNOWN} {d_ino=12600220, d_off=2119062006361264540, d_reclen=32, d_name="Sarajevo", d_type=DT_UNKNOWN} {d_ino=12600212, d_off=2136043352215832066, d_reclen=32, d_name="Stockholm", d_type=DT_UNKNOWN} {d_ino=12600202, d_off=2278414949153320978, d_reclen=32, d_name="Nicosia", d_type=DT_UNKNOWN} {d_ino=12600230, d_off=2279817101917083450, d_reclen=32, d_name="Helsinki", d_type=DT_UNKNOWN} {d_ino=9975904, d_off=2285518442734867658, d_reclen=32, d_name="Jersey", d_type=DT_UNKNOWN} {d_ino=12600270, d_off=2425815281638239183, d_reclen=32, d_name="Athens", d_type=DT_UNKNOWN} {d_ino=12600232, d_off=2733511974419633403, d_reclen=32, d_name="Malta", d_type=DT_UNKNOWN} {d_ino=12600226, d_off=2788994109739811664, d_reclen=32, d_name="Chisinau", d_type=DT_UNKNOWN} {d_ino=12600216, d_off=3030008157168427220, d_reclen=32, d_name="Paris", d_type=DT_UNKNOWN} {d_ino=12600276, d_off=3130673019619216596, d_reclen=32, d_name="Saratov", d_type=DT_UNKNOWN} {d_ino=12600266, d_off=3400715851272134761, d_reclen=32, d_name="Zaporozhye", d_type=DT_UNKNOWN} {d_ino=12600210, d_off=3484693293273885200, d_reclen=32, d_name="Berlin", d_type=DT_UNKNOWN} {d_ino=12600198, d_off=3693089527953256315, d_reclen=32, d_name="Gibraltar", d_type=DT_UNKNOWN} {d_ino=12600204, d_off=3827724417369978441, d_reclen=32, d_name="Kirov", d_type=DT_UNKNOWN} {d_ino=9975902, d_off=3883460449258605534, d_reclen=32, d_name="Lisbon", d_type=DT_UNKNOWN} {d_ino=12600236, d_off=4037230713526731867, d_reclen=32, d_name="Vaduz", d_type=DT_UNKNOWN} {d_ino=12600218, d_off=4090616863219182463, d_reclen=32, d_name="Bratislava", d_type=DT_UNKNOWN} {d_ino=12600228, d_off=4186689738443082437, d_reclen=32, d_name="San_Marino", d_type=DT_UNKNOWN} {d_ino=12600258, d_off=4311341549228098006, d_reclen=32, d_name="Andorra", d_type=DT_UNKNOWN} {d_ino=12600280, d_off=4467395537592848835, d_reclen=32, d_name="Monaco", d_type=DT_UNKNOWN} {d_ino=12600242, d_off=4720511863514679314, d_reclen=32, d_name="Kaliningrad", d_type=DT_UNKNOWN} {d_ino=9975874, d_off=4750429464495159305, d_reclen=32, d_name="Moscow", d_type=DT_UNKNOWN} {d_ino=12600268, d_off=4763753195228370306, d_reclen=32, d_name="Vienna", d_type=DT_UNKNOWN} {d_ino=12600222, d_off=4890198685149079517, d_reclen=32, d_name="Vilnius", d_type=DT_UNKNOWN} {d_ino=12600230, d_off=5133547294654392698, d_reclen=32, d_name="Mariehamn", d_type=DT_UNKNOWN} {d_ino=12600228, d_off=5259615624342969508, d_reclen=24, d_name="Rome", d_type=DT_UNKNOWN} {d_ino=12600250, d_off=5357379969736135799, d_reclen=32, d_name="Sofia", d_type=DT_UNKNOWN} {d_ino=12600248, d_off=5416314272450271169, d_reclen=32, d_name="Astrakhan", d_type=DT_UNKNOWN} {d_ino=12600244, d_off=5803621480367074591, d_reclen=24, d_name="Riga", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6354601338862469726, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=12600226, d_off=6438954907270126632, d_reclen=32, d_name="Tiraspol", d_type=DT_UNKNOWN} {d_ino=9975904, d_off=6541934535444884175, d_reclen=32, d_name="Belfast", d_type=DT_UNKNOWN} {d_ino=9975904, d_off=6603125639093925178, d_reclen=32, d_name="Isle_of_Man", d_type=DT_UNKNOWN} {d_ino=12600220, d_off=7289394782307070267, d_reclen=32, d_name="Belgrade", d_type=DT_UNKNOWN} {d_ino=12600260, d_off=7354497974903600908, d_reclen=32, d_name="Minsk", d_type=DT_UNKNOWN} {d_ino=12600224, d_off=7545033260301963356, d_reclen=32, d_name="Uzhgorod", d_type=DT_UNKNOWN} {d_ino=12600236, d_off=7682718130163672865, d_reclen=32, d_name="Busingen", d_type=DT_UNKNOWN} {d_ino=9975904, d_off=8013725005624776855, d_reclen=32, d_name="London", d_type=DT_UNKNOWN} {d_ino=12600164, d_off=8188929324359029694, d_reclen=32, d_name="Dublin", d_type=DT_UNKNOWN} {d_ino=12600254, d_off=8190840020134709275, d_reclen=32, d_name="Bucharest", d_type=DT_UNKNOWN} {d_ino=12600218, d_off=8261551918543383744, d_reclen=32, d_name="Prague", d_type=DT_UNKNOWN} {d_ino=9975870, d_off=8271228153792648071, d_reclen=32, d_name="Warsaw", d_type=DT_UNKNOWN} {d_ino=12600206, d_off=8359330583825450003, d_reclen=32, d_name="Luxembourg", d_type=DT_UNKNOWN} {d_ino=12600228, d_off=8518602153414361438, d_reclen=32, d_name="Vatican", d_type=DT_UNKNOWN} {d_ino=9975904, d_off=8651343193673068686, d_reclen=32, d_name="Guernsey", d_type=DT_UNKNOWN} {d_ino=12600220, d_off=8669744525870442797, d_reclen=32, d_name="Ljubljana", d_type=DT_UNKNOWN} {d_ino=12600238, d_off=8675498736192498932, d_reclen=32, d_name="Brussels", d_type=DT_UNKNOWN} {d_ino=12600282, d_off=8837009869594520894, d_reclen=24, d_name="Kiev", d_type=DT_UNKNOWN} {d_ino=12600240, d_off=8876994576790812216, d_reclen=24, d_name="Oslo", d_type=DT_UNKNOWN} {d_ino=12600214, d_off=8878128477621351494, d_reclen=32, d_name="Tallinn", d_type=DT_UNKNOWN} {d_ino=12600140, d_off=8894216935309921749, d_reclen=32, d_name="Amsterdam", d_type=DT_UNKNOWN} {d_ino=12600246, d_off=8928105879413985502, d_reclen=32, d_name="Samara", d_type=DT_UNKNOWN} {d_ino=12600220, d_off=9223372036854775807, d_reclen=32, d_name="Zagreb", d_type=DT_UNKNOWN}}, 32768) = 2032
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Zurich", {st_dev=makedev(145, 128), st_ino=12600236, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1892, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Zaporozhye", {st_dev=makedev(145, 128), st_ino=12600266, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2089, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Zagreb", {st_dev=makedev(145, 128), st_ino=12600220, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1931, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Warsaw", {st_dev=makedev(145, 128), st_ino=9975870, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2679, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Volgograd", {st_dev=makedev(145, 128), st_ino=12600274, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1153, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Vilnius", {st_dev=makedev(145, 128), st_ino=12600222, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2173, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Vienna", {st_dev=makedev(145, 128), st_ino=12600268, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2211, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Vatican", {st_dev=makedev(145, 128), st_ino=12600228, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2666, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Vaduz", {st_dev=makedev(145, 128), st_ino=12600236, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1892, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Uzhgorod", {st_dev=makedev(145, 128), st_ino=12600224, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2077, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Ulyanovsk", {st_dev=makedev(145, 128), st_ino=12600262, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1221, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Tiraspol", {st_dev=makedev(145, 128), st_ino=12600226, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2387, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Tirane", {st_dev=makedev(145, 128), st_ino=12600278, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2084, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Tallinn", {st_dev=makedev(145, 128), st_ino=12600214, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2161, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Stockholm", {st_dev=makedev(145, 128), st_ino=12600212, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1892, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Sofia", {st_dev=makedev(145, 128), st_ino=12600250, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2104, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Skopje", {st_dev=makedev(145, 128), st_ino=12600220, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1931, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Simferopol", {st_dev=makedev(145, 128), st_ino=12600256, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1448, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Saratov", {st_dev=makedev(145, 128), st_ino=12600276, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1153, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Sarajevo", {st_dev=makedev(145, 128), st_ino=12600220, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1931, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/San_Marino", {st_dev=makedev(145, 128), st_ino=12600228, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2666, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Samara", {st_dev=makedev(145, 128), st_ino=12600246, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1193, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Rome", {st_dev=makedev(145, 128), st_ino=12600228, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2666, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Riga", {st_dev=makedev(145, 128), st_ino=12600244, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2209, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Prague", {st_dev=makedev(145, 128), st_ino=12600218, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2312, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Podgorica", {st_dev=makedev(145, 128), st_ino=12600220, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1931, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Paris", {st_dev=makedev(145, 128), st_ino=12600216, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2945, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Oslo", {st_dev=makedev(145, 128), st_ino=12600240, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2225, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Nicosia", {st_dev=makedev(145, 128), st_ino=12600202, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2002, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Moscow", {st_dev=makedev(145, 128), st_ino=9975874, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1486, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Monaco", {st_dev=makedev(145, 128), st_ino=12600280, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2927, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Minsk", {st_dev=makedev(145, 128), st_ino=12600260, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1330, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Mariehamn", {st_dev=makedev(145, 128), st_ino=12600230, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1883, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Malta", {st_dev=makedev(145, 128), st_ino=12600232, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2603, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Madrid", {st_dev=makedev(145, 128), st_ino=12600208, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2611, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Luxembourg", {st_dev=makedev(145, 128), st_ino=12600206, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2960, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/London", {st_dev=makedev(145, 128), st_ino=9975904, st_mode=S_IFREG|0644, st_nlink=7, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3661, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Ljubljana", {st_dev=makedev(145, 128), st_ino=12600220, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1931, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Lisbon", {st_dev=makedev(145, 128), st_ino=9975902, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3439, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Kirov", {st_dev=makedev(145, 128), st_ino=12600204, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1139, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Kiev", {st_dev=makedev(145, 128), st_ino=12600282, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2071, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Kaliningrad", {st_dev=makedev(145, 128), st_ino=12600242, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1476, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Jersey", {st_dev=makedev(145, 128), st_ino=9975904, st_mode=S_IFREG|0644, st_nlink=7, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3661, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Istanbul", {st_dev=makedev(145, 128), st_ino=9975918, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2110, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Isle_of_Man", {st_dev=makedev(145, 128), st_ino=9975904, st_mode=S_IFREG|0644, st_nlink=7, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3661, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Helsinki", {st_dev=makedev(145, 128), st_ino=12600230, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1883, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Guernsey", {st_dev=makedev(145, 128), st_ino=9975904, st_mode=S_IFREG|0644, st_nlink=7, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3661, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Gibraltar", {st_dev=makedev(145, 128), st_ino=12600198, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3035, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Dublin", {st_dev=makedev(145, 128), st_ino=12600164, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3517, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Copenhagen", {st_dev=makedev(145, 128), st_ino=12600272, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2134, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Chisinau", {st_dev=makedev(145, 128), st_ino=12600226, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2387, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Busingen", {st_dev=makedev(145, 128), st_ino=12600236, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1892, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Budapest", {st_dev=makedev(145, 128), st_ino=12600200, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2379, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Bucharest", {st_dev=makedev(145, 128), st_ino=12600254, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2195, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Brussels", {st_dev=makedev(145, 128), st_ino=12600238, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2944, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Bratislava", {st_dev=makedev(145, 128), st_ino=12600218, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2312, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Berlin", {st_dev=makedev(145, 128), st_ino=12600210, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2309, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Belgrade", {st_dev=makedev(145, 128), st_ino=12600220, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1931, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Belfast", {st_dev=makedev(145, 128), st_ino=9975904, st_mode=S_IFREG|0644, st_nlink=7, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3661, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Athens", {st_dev=makedev(145, 128), st_ino=12600270, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2245, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Astrakhan", {st_dev=makedev(145, 128), st_ino=12600248, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1153, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Andorra", {st_dev=makedev(145, 128), st_ino=12600258, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1725, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Europe/Amsterdam", {st_dev=makedev(145, 128), st_ino=12600140, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2923, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 open("/usr/share/zoneinfo/Indian", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=12600284, d_off=2599450809020270544, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=12600286, d_off=3118452792183303436, d_reclen=32, d_name="Mauritius", d_type=DT_UNKNOWN} {d_ino=12600234, d_off=3376023384695592200, d_reclen=32, d_name="Chagos", d_type=DT_UNKNOWN} {d_ino=12600300, d_off=4463489256529193139, d_reclen=32, d_name="Reunion", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=5004663732935649104, d_reclen=32, d_name="Comoro", d_type=DT_UNKNOWN} {d_ino=12600292, d_off=5042826122395031431, d_reclen=32, d_name="Cocos", d_type=DT_UNKNOWN} {d_ino=12600296, d_off=5084103276174177814, d_reclen=24, d_name="Mahe", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=5229909979786923364, d_reclen=32, d_name="Mayotte", d_type=DT_UNKNOWN} {d_ino=12600290, d_off=5369829717413872443, d_reclen=32, d_name="Maldives", d_type=DT_UNKNOWN} {d_ino=12600302, d_off=5803621480367074591, d_reclen=32, d_name="Christmas", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6781111928497527315, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=12600294, d_off=8364149897382347475, d_reclen=32, d_name="Kerguelen", d_type=DT_UNKNOWN} {d_ino=12600120, d_off=9223372036854775807, d_reclen=32, d_name="Antananarivo", d_type=DT_UNKNOWN}}, 32768) = 392
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Reunion", {st_dev=makedev(145, 128), st_ino=12600300, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Mayotte", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Mauritius", {st_dev=makedev(145, 128), st_ino=12600286, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=239, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Maldives", {st_dev=makedev(145, 128), st_ino=12600290, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=180, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Mahe", {st_dev=makedev(145, 128), st_ino=12600296, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Kerguelen", {st_dev=makedev(145, 128), st_ino=12600294, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Comoro", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Cocos", {st_dev=makedev(145, 128), st_ino=12600292, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=151, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Christmas", {st_dev=makedev(145, 128), st_ino=12600302, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=142, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Chagos", {st_dev=makedev(145, 128), st_ino=12600234, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=197, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Indian/Antananarivo", {st_dev=makedev(145, 128), st_ino=12600120, st_mode=S_IFREG|0644, st_nlink=11, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Mexico", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=10532496, d_off=2400645438268436643, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=10532516, d_off=5803621480367074591, d_reclen=32, d_name="General", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6973884317290813403, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=10532504, d_off=8106661290932640953, d_reclen=32, d_name="BajaSur", d_type=DT_UNKNOWN} {d_ino=10532502, d_off=9223372036854775807, d_reclen=32, d_name="BajaNorte", d_type=DT_UNKNOWN}}, 32768) = 144
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Mexico/General", {st_dev=makedev(145, 128), st_ino=10532516, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1604, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Mexico/BajaSur", {st_dev=makedev(145, 128), st_ino=10532504, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1534, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Mexico/BajaNorte", {st_dev=makedev(145, 128), st_ino=10532502, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2342, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/Pacific", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=11829378, d_off=232036745513767991, d_reclen=32, d_name="Norfolk", d_type=DT_UNKNOWN} {d_ino=11829428, d_off=375975949494695472, d_reclen=24, d_name="Wake", d_type=DT_UNKNOWN} {d_ino=11829454, d_off=440886939039099825, d_reclen=24, d_name="Fiji", d_type=DT_UNKNOWN} {d_ino=11829470, d_off=557155288295811626, d_reclen=32, d_name="Port_Moresby", d_type=DT_UNKNOWN} {d_ino=11829438, d_off=1035699197334542377, d_reclen=32, d_name="Enderbury", d_type=DT_UNKNOWN} {d_ino=11828808, d_off=1169735993133327856, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=11829418, d_off=1187487066442482204, d_reclen=32, d_name="Chatham", d_type=DT_UNKNOWN} {d_ino=11829448, d_off=1512936504456066941, d_reclen=32, d_name="Kosrae", d_type=DT_UNKNOWN} {d_ino=11829420, d_off=1595513426846143036, d_reclen=32, d_name="Saipan", d_type=DT_UNKNOWN} {d_ino=11829458, d_off=2069023115574811287, d_reclen=32, d_name="Tarawa", d_type=DT_UNKNOWN} {d_ino=11571128, d_off=2255064908144663324, d_reclen=32, d_name="Pago_Pago", d_type=DT_UNKNOWN} {d_ino=11571128, d_off=2585033894699479903, d_reclen=32, d_name="Midway", d_type=DT_UNKNOWN} {d_ino=11829464, d_off=2696129698674007228, d_reclen=24, d_name="Truk", d_type=DT_UNKNOWN} {d_ino=11829414, d_off=2898415119685367488, d_reclen=32, d_name="Fakaofo", d_type=DT_UNKNOWN} {d_ino=11829738, d_off=3070709557318907870, d_reclen=32, d_name="Ponape", d_type=DT_UNKNOWN} {d_ino=11829372, d_off=3551353611517780174, d_reclen=32, d_name="Marquesas", d_type=DT_UNKNOWN} {d_ino=11829436, d_off=3778446875102819862, d_reclen=32, d_name="Kiritimati", d_type=DT_UNKNOWN} {d_ino=11829434, d_off=3808253866353608212, d_reclen=32, d_name="Tahiti", d_type=DT_UNKNOWN} {d_ino=11571128, d_off=3922648110049705730, d_reclen=32, d_name="Samoa", d_type=DT_UNKNOWN} {d_ino=11829462, d_off=3964363377653837032, d_reclen=32, d_name="Gambier", d_type=DT_UNKNOWN} {d_ino=11829468, d_off=4185349215668602485, d_reclen=24, d_name="Niue", d_type=DT_UNKNOWN} {d_ino=11571688, d_off=4234576985578349011, d_reclen=32, d_name="Honolulu", d_type=DT_UNKNOWN} {d_ino=11829416, d_off=4353190516288095193, d_reclen=32, d_name="Guadalcanal", d_type=DT_UNKNOWN} {d_ino=11829746, d_off=4526150853195803747, d_reclen=32, d_name="Auckland", d_type=DT_UNKNOWN} {d_ino=11829460, d_off=4725923432654857949, d_reclen=32, d_name="Pitcairn", d_type=DT_UNKNOWN} {d_ino=11829514, d_off=4906084257710265547, d_reclen=24, d_name="Apia", d_type=DT_UNKNOWN} {d_ino=11829740, d_off=5307062437736964126, d_reclen=32, d_name="Kwajalein", d_type=DT_UNKNOWN} {d_ino=11829452, d_off=5567180779685831108, d_reclen=32, d_name="Majuro", d_type=DT_UNKNOWN} {d_ino=11829738, d_off=5570123009619679211, d_reclen=32, d_name="Pohnpei", d_type=DT_UNKNOWN} {d_ino=11829472, d_off=5803621480367074591, d_reclen=32, d_name="Tongatapu", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6322874443379511668, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=11829466, d_off=6413617081869290655, d_reclen=32, d_name="Efate", d_type=DT_UNKNOWN} {d_ino=11829446, d_off=6531310772924158534, d_reclen=32, d_name="Galapagos", d_type=DT_UNKNOWN} {d_ino=11829440, d_off=6595546014822391725, d_reclen=32, d_name="Funafuti", d_type=DT_UNKNOWN} {d_ino=11829426, d_off=7031556582891587777, d_reclen=32, d_name="Easter", d_type=DT_UNKNOWN} {d_ino=11829420, d_off=7335505504742015534, d_reclen=24, d_name="Guam", d_type=DT_UNKNOWN} {d_ino=11829456, d_off=7811326490160891208, d_reclen=32, d_name="Rarotonga", d_type=DT_UNKNOWN} {d_ino=11571688, d_off=7817359430395240095, d_reclen=32, d_name="Johnston", d_type=DT_UNKNOWN} {d_ino=11829432, d_off=7887829032467989974, d_reclen=32, d_name="Palau", d_type=DT_UNKNOWN} {d_ino=11829464, d_off=8040198342967549681, d_reclen=24, d_name="Yap", d_type=DT_UNKNOWN} {d_ino=11829450, d_off=8238009204225782502, d_reclen=32, d_name="Nauru", d_type=DT_UNKNOWN} {d_ino=11829442, d_off=8690827660419811338, d_reclen=32, d_name="Noumea", d_type=DT_UNKNOWN} {d_ino=11829422, d_off=8716388001167680627, d_reclen=32, d_name="Bougainville", d_type=DT_UNKNOWN} {d_ino=11829464, d_off=8787991917394495293, d_reclen=32, d_name="Chuuk", d_type=DT_UNKNOWN} {d_ino=11829424, d_off=9223372036854775807, d_reclen=32, d_name="Wallis", d_type=DT_UNKNOWN}}, 32768) = 1368
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Yap", {st_dev=makedev(145, 128), st_ino=11829464, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Wallis", {st_dev=makedev(145, 128), st_ino=11829424, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Wake", {st_dev=makedev(145, 128), st_ino=11829428, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Truk", {st_dev=makedev(145, 128), st_ino=11829464, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Tongatapu", {st_dev=makedev(145, 128), st_ino=11829472, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=353, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Tarawa", {st_dev=makedev(145, 128), st_ino=11829458, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Tahiti", {st_dev=makedev(145, 128), st_ino=11829434, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=159, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Samoa", {st_dev=makedev(145, 128), st_ino=11571128, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Saipan", {st_dev=makedev(145, 128), st_ino=11829420, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=199, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Rarotonga", {st_dev=makedev(145, 128), st_ino=11829456, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=562, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Port_Moresby", {st_dev=makedev(145, 128), st_ino=11829470, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=165, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Ponape", {st_dev=makedev(145, 128), st_ino=11829738, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Pohnpei", {st_dev=makedev(145, 128), st_ino=11829738, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Pitcairn", {st_dev=makedev(145, 128), st_ino=11829460, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=183, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Palau", {st_dev=makedev(145, 128), st_ino=11829432, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=142, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Pago_Pago", {st_dev=makedev(145, 128), st_ino=11571128, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Noumea", {st_dev=makedev(145, 128), st_ino=11829442, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=300, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Norfolk", {st_dev=makedev(145, 128), st_ino=11829378, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=283, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Niue", {st_dev=makedev(145, 128), st_ino=11829468, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=226, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Nauru", {st_dev=makedev(145, 128), st_ino=11829450, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=254, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Midway", {st_dev=makedev(145, 128), st_ino=11571128, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Marquesas", {st_dev=makedev(145, 128), st_ino=11829372, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=167, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Majuro", {st_dev=makedev(145, 128), st_ino=11829452, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=181, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Kwajalein", {st_dev=makedev(145, 128), st_ino=11829740, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=219, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Kosrae", {st_dev=makedev(145, 128), st_ino=11829448, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=195, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Kiritimati", {st_dev=makedev(145, 128), st_ino=11829436, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=223, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Johnston", {st_dev=makedev(145, 128), st_ino=11571688, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=312, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Honolulu", {st_dev=makedev(145, 128), st_ino=11571688, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=312, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Guam", {st_dev=makedev(145, 128), st_ino=11829420, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=199, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Guadalcanal", {st_dev=makedev(145, 128), st_ino=11829416, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=160, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Gambier", {st_dev=makedev(145, 128), st_ino=11829462, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=158, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Galapagos", {st_dev=makedev(145, 128), st_ino=11829446, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=240, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Funafuti", {st_dev=makedev(145, 128), st_ino=11829440, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Fiji", {st_dev=makedev(145, 128), st_ino=11829454, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7839, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Fakaofo", {st_dev=makedev(145, 128), st_ino=11829414, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=181, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Enderbury", {st_dev=makedev(145, 128), st_ino=11829438, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=219, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Efate", {st_dev=makedev(145, 128), st_ino=11829466, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=464, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Easter", {st_dev=makedev(145, 128), st_ino=11829426, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9047, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Chuuk", {st_dev=makedev(145, 128), st_ino=11829464, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=143, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Chatham", {st_dev=makedev(145, 128), st_ino=11829418, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2047, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Bougainville", {st_dev=makedev(145, 128), st_ino=11829422, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=255, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Auckland", {st_dev=makedev(145, 128), st_ino=11829746, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2434, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/Pacific/Apia", {st_dev=makedev(145, 128), st_ino=11829514, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1098, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:32}) = 0
00:05:28 open("/usr/share/zoneinfo/US", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 5
00:05:28 getdents(5, {{d_ino=11571712, d_off=1035699197334542377, d_reclen=32, d_name="Aleutian", d_type=DT_UNKNOWN} {d_ino=11571684, d_off=1445714652730539037, d_reclen=24, d_name=".", d_type=DT_DIR} {d_ino=11571698, d_off=1454808623987029374, d_reclen=32, d_name="Pacific", d_type=DT_UNKNOWN} {d_ino=9975924, d_off=1636444425120395122, d_reclen=32, d_name="Eastern", d_type=DT_UNKNOWN} {d_ino=11571710, d_off=2211936147489015365, d_reclen=32, d_name="Alaska", d_type=DT_UNKNOWN} {d_ino=11571702, d_off=2266966266087278962, d_reclen=32, d_name="East-Indiana", d_type=DT_UNKNOWN} {d_ino=11571704, d_off=2268958924306679038, d_reclen=32, d_name="Michigan", d_type=DT_UNKNOWN} {d_ino=11571706, d_off=2877058801505780465, d_reclen=32, d_name="Mountain", d_type=DT_UNKNOWN} {d_ino=11571708, d_off=3191303092793716238, d_reclen=32, d_name="Central", d_type=DT_UNKNOWN} {d_ino=11571700, d_off=3808253866353608212, d_reclen=40, d_name="Indiana-Starke", d_type=DT_UNKNOWN} {d_ino=11571128, d_off=5803621480367074591, d_reclen=32, d_name="Samoa", d_type=DT_UNKNOWN} {d_ino=9975850, d_off=6020765027302729250, d_reclen=24, d_name="..", d_type=DT_DIR} {d_ino=11571698, d_off=6264205492441461475, d_reclen=32, d_name="Pacific-New", d_type=DT_UNKNOWN} {d_ino=11571690, d_off=6350338955455245834, d_reclen=32, d_name="Arizona", d_type=DT_UNKNOWN} {d_ino=11571688, d_off=9223372036854775807, d_reclen=32, d_name="Hawaii", d_type=DT_UNKNOWN}}, 32768) = 472
00:05:28 getdents(5, {}, 32768)         = 0
00:05:28 close(5)                       = 0
00:05:28 stat("/usr/share/zoneinfo/US/Samoa", {st_dev=makedev(145, 128), st_ino=11571128, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Pacific-New", {st_dev=makedev(145, 128), st_ino=11571698, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2819, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Pacific", {st_dev=makedev(145, 128), st_ino=11571698, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2819, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Mountain", {st_dev=makedev(145, 128), st_ino=11571706, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2427, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Michigan", {st_dev=makedev(145, 128), st_ino=11571704, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2174, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Indiana-Starke", {st_dev=makedev(145, 128), st_ino=11571700, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2395, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Hawaii", {st_dev=makedev(145, 128), st_ino=11571688, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=312, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Eastern", {st_dev=makedev(145, 128), st_ino=9975924, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3519, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/East-Indiana", {st_dev=makedev(145, 128), st_ino=11571702, st_mode=S_IFREG|0644, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1649, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Central", {st_dev=makedev(145, 128), st_ino=11571708, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3543, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Arizona", {st_dev=makedev(145, 128), st_ino=11571690, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=327, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Aleutian", {st_dev=makedev(145, 128), st_ino=11571712, st_mode=S_IFREG|0644, st_nlink=3, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2339, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 stat("/usr/share/zoneinfo/US/Alaska", {st_dev=makedev(145, 128), st_ino=11571710, st_mode=S_IFREG|0644, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2354, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/zone.tab", O_RDONLY) = 5
00:05:28 fstat(5, {st_dev=makedev(145, 128), st_ino=9975868, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19166, st_atime=2018/06/27-18:24:09, st_mtime=2018/06/27-18:24:09, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe60e27c000
00:05:28 read(5, "# tzdb timezone descriptions (deprecated version)\n#\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n#\n# From Paul Eggert (2018-06-27):\n# This file is intended as a backward-compatibility aid for older programs.\n# New programs should use zone1970.tab.  This file is like zone1970.tab (see\n# zone1970.tab's comments), but with the following additional restrictions:\n#\n# 1.  This file contains only ASCII characters.\n# 2.  The first data column contains exactly one country code.\n#\n# Because of (2), each row stands for an area that is the intersection\n# of a region identified by a country code and of a timezone where civil\n# clocks have agreed since 1970; this is a narrower definition than\n# that of zone1970.tab.\n#\n# This table is intended as an aid for users, to help them select timezones\n# appropriate for their practical needs.  It is not intended to take or\n# endorse any position on legal or territorial claims.\n#\n#country-\n#code\tcoordinates\tTZ\t\t\tc"..., 4096) = 4096
00:05:28 read(5, "32-04637\tAmerica/Sao_Paulo\tBrazil (southeast: GO, DF, MG, ES, RJ, SP, PR, SC, RS)\nBR\t-2027-05437\tAmerica/Campo_Grande\tMato Grosso do Sul\nBR\t-1535-05605\tAmerica/Cuiaba\tMato Grosso\nBR\t-0226-05452\tAmerica/Santarem\tPara (west)\nBR\t-0846-06354\tAmerica/Porto_Velho\tRondonia\nBR\t+0249-06040\tAmerica/Boa_Vista\tRoraima\nBR\t-0308-06001\tAmerica/Manaus\tAmazonas (east)\nBR\t-0640-06952\tAmerica/Eirunepe\tAmazonas (west)\nBR\t-0958-06748\tAmerica/Rio_Branco\tAcre\nBS\t+2505-07721\tAmerica/Nassau\nBT\t+2728+08939\tAsia/Thimphu\nBW\t-2439+02555\tAfrica/Gaborone\nBY\t+5354+02734\tEurope/Minsk\nBZ\t+1730-08812\tAmerica/Belize\nCA\t+4734-05243\tAmerica/St_Johns\tNewfoundland; Labrador (southeast)\nCA\t+4439-06336\tAmerica/Halifax\tAtlantic - NS (most areas); PE\nCA\t+4612-05957\tAmerica/Glace_Bay\tAtlantic - NS (Cape Breton)\nCA\t+4606-06447\tAmerica/Moncton\tAtlantic - New Brunswick\nCA\t+5320-06025\tAmerica/Goose_Bay\tAtlantic - Labrador (most areas)\nCA\t+5125-05707\tAmerica/Blanc-Sablon\tAST - QC (Lower North Shore)\nCA\t+4339-07923\tAmerica/Toronto\tEast"..., 4096) = 4096
00:05:28 read(5, "0023+00927\tAfrica/Libreville\nGB\t+513030-0000731\tEurope/London\nGD\t+1203-06145\tAmerica/Grenada\nGE\t+4143+04449\tAsia/Tbilisi\nGF\t+0456-05220\tAmerica/Cayenne\nGG\t+492717-0023210\tEurope/Guernsey\nGH\t+0533-00013\tAfrica/Accra\nGI\t+3608-00521\tEurope/Gibraltar\nGL\t+6411-05144\tAmerica/Godthab\tGreenland (most areas)\nGL\t+7646-01840\tAmerica/Danmarkshavn\tNational Park (east coast)\nGL\t+7029-02158\tAmerica/Scoresbysund\tScoresbysund/Ittoqqortoormiit\nGL\t+7634-06847\tAmerica/Thule\tThule/Pituffik\nGM\t+1328-01639\tAfrica/Banjul\nGN\t+0931-01343\tAfrica/Conakry\nGP\t+1614-06132\tAmerica/Guadeloupe\nGQ\t+0345+00847\tAfrica/Malabo\nGR\t+3758+02343\tEurope/Athens\nGS\t-5416-03632\tAtlantic/South_Georgia\nGT\t+1438-09031\tAmerica/Guatemala\nGU\t+1328+14445\tPacific/Guam\nGW\t+1151-01535\tAfrica/Bissau\nGY\t+0648-05810\tAmerica/Guyana\nHK\t+2217+11409\tAsia/Hong_Kong\nHN\t+1406-08713\tAmerica/Tegucigalpa\nHR\t+4548+01558\tEurope/Zagreb\nHT\t+1832-07220\tAmerica/Port-au-Prince\nHU\t+4730+01905\tEurope/Budapest\nID\t-0610+10648\tAsia/Jakarta\tJava, Sumatra\nID\t-0002+109"..., 4096) = 4096
00:05:28 read(5, "58\tAmerica/Hermosillo\tMountain Standard Time - Sonora\nMX\t+3232-11701\tAmerica/Tijuana\tPacific Time US - Baja California\nMX\t+2048-10515\tAmerica/Bahia_Banderas\tCentral Time - Bahia de Banderas\nMY\t+0310+10142\tAsia/Kuala_Lumpur\tMalaysia (peninsula)\nMY\t+0133+11020\tAsia/Kuching\tSabah, Sarawak\nMZ\t-2558+03235\tAfrica/Maputo\nNA\t-2234+01706\tAfrica/Windhoek\nNC\t-2216+16627\tPacific/Noumea\nNE\t+1331+00207\tAfrica/Niamey\nNF\t-2903+16758\tPacific/Norfolk\nNG\t+0627+00324\tAfrica/Lagos\nNI\t+1209-08617\tAmerica/Managua\nNL\t+5222+00454\tEurope/Amsterdam\nNO\t+5955+01045\tEurope/Oslo\nNP\t+2743+08519\tAsia/Kathmandu\nNR\t-0031+16655\tPacific/Nauru\nNU\t-1901-16955\tPacific/Niue\nNZ\t-3652+17446\tPacific/Auckland\tNew Zealand (most areas)\nNZ\t-4357-17633\tPacific/Chatham\tChatham Islands\nOM\t+2336+05835\tAsia/Muscat\nPA\t+0858-07932\tAmerica/Panama\nPE\t-1203-07703\tAmerica/Lima\nPF\t-1732-14934\tPacific/Tahiti\tSociety Islands\nPF\t-0900-13930\tPacific/Marquesas\tMarquesas Islands\nPF\t-2308-13457\tPacific/Gambier\tGambier Islands\nPG\t-0930+14710\tPacific/Po"..., 4096) = 4096
00:05:28 read(5, "nbul\nTT\t+1039-06131\tAmerica/Port_of_Spain\nTV\t-0831+17913\tPacific/Funafuti\nTW\t+2503+12130\tAsia/Taipei\nTZ\t-0648+03917\tAfrica/Dar_es_Salaam\nUA\t+5026+03031\tEurope/Kiev\tUkraine (most areas)\nUA\t+4837+02218\tEurope/Uzhgorod\tRuthenia\nUA\t+4750+03510\tEurope/Zaporozhye\tZaporozh'ye/Zaporizhia; Lugansk/Luhansk (east)\nUG\t+0019+03225\tAfrica/Kampala\nUM\t+2813-17722\tPacific/Midway\tMidway Islands\nUM\t+1917+16637\tPacific/Wake\tWake Island\nUS\t+404251-0740023\tAmerica/New_York\tEastern (most areas)\nUS\t+421953-0830245\tAmerica/Detroit\tEastern - MI (most areas)\nUS\t+381515-0854534\tAmerica/Kentucky/Louisville\tEastern - KY (Louisville area)\nUS\t+364947-0845057\tAmerica/Kentucky/Monticello\tEastern - KY (Wayne)\nUS\t+394606-0860929\tAmerica/Indiana/Indianapolis\tEastern - IN (most areas)\nUS\t+384038-0873143\tAmerica/Indiana/Vincennes\tEastern - IN (Da, Du, K, Mn)\nUS\t+410305-0863611\tAmerica/Indiana/Winamac\tEastern - IN (Pulaski)\nUS\t+382232-0862041\tAmerica/Indiana/Marengo\tEastern - IN (Crawford)\nUS\t+382931-0871643\tAmerica/Indiana/"..., 4096) = 2782
00:05:28 read(5, "", 4096)              = 0
00:05:28 close(5)                       = 0
00:05:28 munmap(0x7fe60e27c000, 4096)   = 0
00:05:28 stat("/usr/share/zoneinfo/UTC", {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 open("/usr/share/zoneinfo/UTC", O_RDONLY) = 5
00:05:28 fstat(5, {st_dev=makedev(145, 128), st_ino=9975862, st_mode=S_IFREG|0644, st_nlink=6, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=118, st_atime=2018/11/05-14:40:40, st_mtime=2018/11/05-14:40:40, st_ctime=2018/11/25-16:54:33}) = 0
00:05:28 mmap(NULL, 118, PROT_READ, MAP_SHARED, 5, 0) = 0x7fe60e275000
00:05:28 close(5)                       = 0
00:05:28 munmap(0x7fe60e275000, 118)    = 0
00:05:28 write(4, "[27-Nov-2018 00:05:28 UTC] PHP Warning:  require(/home/sguser/public_html/public/../vendor/autoload.php): failed to open stream: No such file or directory in /home/sguser/public_html/public/index.php on line 24\n", 211) = 211
00:05:28 close(4)                       = 0
00:05:28 open("error_log", O_WRONLY|O_CREAT|O_APPEND, 0644) = 4
00:05:28 write(4, "[27-Nov-2018 00:05:28 UTC] PHP Fatal error:  require(): Failed opening required '/home/sguser/public_html/public/../vendor/autoload.php' (include_path='.:/opt/cpanel/ea-php71/root/usr/share/pear') in /home/sguser/public_html/public/index.php on line 24\n", 253) = 253
00:05:28 close(4)                       = 0
00:05:28 chdir("/home/sguser/public_html/public") = 0
00:05:28 setitimer(ITIMER_PROF, {it_interval={0, 0}, it_value={0, 0}}, NULL) = 0
00:05:28 write(1, "Status: 500 Internal Server Error\r\n", 35) = 35
00:05:28 write(1, "Content-type: text/html; charset=UTF-8", 38) = 38
00:05:28 write(1, "\r\n", 2)            = 2
00:05:28 write(1, "\r\n", 2)            = 2
00:05:28 fcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}) = 0
00:05:28 setitimer(ITIMER_PROF, {it_interval={0, 0}, it_value={0, 0}}, NULL) = 0
00:05:28 munmap(0x7fe5f20e5000, 134217728) = 0
00:05:28 close(3)                       = 0
00:05:28 munmap(0x7fe5fa0e5000, 2174936) = 0
00:05:28 munmap(0x7fe5fa2fd000, 2125696) = 0
00:05:28 munmap(0x7fe5fa50d000, 2124512) = 0
00:05:28 munmap(0x7fe5fa71d000, 2120328) = 0
00:05:28 munmap(0x7fe5fa925000, 2136488) = 0
00:05:28 munmap(0x7fe5fab35000, 2119376) = 0
00:05:28 munmap(0x7fe5fad3d000, 2121360) = 0
00:05:28 munmap(0x7fe5faf45000, 2226448) = 0
00:05:28 munmap(0x7fe5fb16d000, 2225624) = 0
00:05:28 munmap(0x7fe5fbc6d000, 2124936) = 0
00:05:28 munmap(0x7fe5fba55000, 2176864) = 0
00:05:28 munmap(0x7fe5fb815000, 2343352) = 0
00:05:28 munmap(0x7fe5fb59d000, 2574912) = 0
00:05:28 munmap(0x7fe5fb395000, 2109528) = 0
00:05:28 munmap(0x7fe5fbe7d000, 2139752) = 0
00:05:28 munmap(0x7fe5fc08d000, 2143704) = 0
00:05:28 munmap(0x7fe5fc29d000, 2112248) = 0
00:05:28 munmap(0x7fe5fc765000, 2143280) = 0
00:05:28 munmap(0x7fe5fc4a5000, 2870992) = 0
00:05:28 munmap(0x7fe5fc975000, 2107152) = 0
00:05:28 munmap(0x7fe5fcb7d000, 2103904) = 0
00:05:28 munmap(0x7fe5fcd85000, 2109120) = 0
00:05:28 munmap(0x7fe5fd225000, 2143744) = 0
00:05:28 munmap(0x7fe5fcf8d000, 2679408) = 0
00:05:28 munmap(0x7fe5fd435000, 2178512) = 0
00:05:28 munmap(0x7fe5fd64d000, 2403880) = 0
00:05:28 munmap(0x7fe5fdb7d000, 2146128) = 0
00:05:28 munmap(0x7fe5fd89d000, 2990592) = 0
00:05:28 munmap(0x7fe5fdd8d000, 2144520) = 0
00:05:28 munmap(0x7fe5fdf9d000, 2106944) = 0
00:05:28 munmap(0x7fe5fe675000, 2117120) = 0
00:05:28 munmap(0x7fe5fe1a5000, 2099376) = 0
00:05:28 munmap(0x7fe5fe3ad000, 2885912) = 0
00:05:28 munmap(0x7fe5fe87d000, 2123832) = 0
00:05:28 munmap(0x7fe5fea8d000, 2370648) = 0
00:05:28 munmap(0x7fe5ff165000, 2222560) = 0
00:05:28 munmap(0x7fe5fef35000, 2258168) = 0
00:05:28 munmap(0x7fe5fecd5000, 2465000) = 0
00:05:28 munmap(0x7fe5ff38d000, 2198592) = 0
00:05:28 munmap(0x7fe5ff81d000, 2160640) = 0
00:05:28 munmap(0x7fe5ff5ad000, 2516128) = 0
00:05:28 munmap(0x7fe5ffa35000, 2354784) = 0
00:05:28 munmap(0x7fe6000c5000, 2135456) = 0
00:05:28 munmap(0x7fe5ffe8d000, 2301280) = 0
00:05:28 munmap(0x7fe5ffc7d000, 2132136) = 0
00:05:28 munmap(0x7fe606a25000, 2156432) = 0
00:05:28 munmap(0x7fe601d2d000, 2158208) = 0
00:05:28 munmap(0x7fe6018b5000, 2426160) = 0
00:05:28 munmap(0x7fe601b0d000, 2201520) = 0
00:05:28 munmap(0x7fe60169d000, 2155816) = 0
00:05:28 munmap(0x7fe601445000, 2434568) = 0
00:05:28 munmap(0x7fe601215000, 2280672) = 0
00:05:28 munmap(0x7fe600ec5000, 3438440) = 0
00:05:28 munmap(0x7fe600c8d000, 2288592) = 0
00:05:28 munmap(0x7fe600a85000, 2109704) = 0
00:05:28 munmap(0x7fe60087d000, 2113912) = 0
00:05:28 munmap(0x7fe600635000, 2354368) = 0
00:05:28 munmap(0x7fe601f45000, 2133168) = 0
00:05:28 munmap(0x7fe603ba5000, 2539264) = 0
00:05:28 munmap(0x7fe602155000, 2144528) = 0
00:05:28 munmap(0x7fe60380d000, 3758208) = 0
00:05:28 munmap(0x7fe6034b5000, 3479584) = 0
00:05:28 munmap(0x7fe602365000, 18130504) = 0
00:05:28 munmap(0x7fe604565000, 2182368) = 0
00:05:28 munmap(0x7fe60424d000, 3218408) = 0
00:05:28 munmap(0x7fe60403d000, 2150944) = 0
00:05:28 munmap(0x7fe603e15000, 2241080) = 0
00:05:28 munmap(0x7fe60477d000, 2137048) = 0
00:05:28 munmap(0x7fe604bed000, 2149584) = 0
00:05:28 munmap(0x7fe60498d000, 2469632) = 0
00:05:28 munmap(0x7fe604dfd000, 2107736) = 0
00:05:28 munmap(0x7fe6060ad000, 2479968) = 0
00:05:28 munmap(0x7fe605b55000, 2165496) = 0
00:05:28 munmap(0x7fe605d6d000, 3394952) = 0
00:05:28 munmap(0x7fe60592d000, 2250552) = 0
00:05:28 munmap(0x7fe6056d5000, 2423648) = 0
00:05:28 munmap(0x7fe605435000, 2739312) = 0
00:05:28 munmap(0x7fe60520d000, 2246440) = 0
00:05:28 munmap(0x7fe605005000, 2106112) = 0
00:05:28 munmap(0x7fe60630d000, 2148352) = 0
00:05:28 munmap(0x7fe60651d000, 5256256) = 0
00:05:28 munmap(0x7fe6002d5000, 3516128) = 0
00:05:28 munmap(0x7fe60736d000, 2116512) = 0
00:05:28 munmap(0x7fe60715d000, 2139552) = 0
00:05:28 munmap(0x7fe606f55000, 2107224) = 0
00:05:28 munmap(0x7fe606c3d000, 3237912) = 0
00:05:28 munmap(0x7fe607575000, 2268472) = 0
00:05:28 munmap(0x7fe607d9d000, 2147120) = 0
00:05:28 munmap(0x7fe607a25000, 3621696) = 0
00:05:28 munmap(0x7fe6077a5000, 2610712) = 0
00:05:28 munmap(0x7fe609135000, 2181264) = 0
00:05:28 munmap(0x7fe608ead000, 2645320) = 0
00:05:28 munmap(0x7fe608c85000, 2246552) = 0
00:05:28 munmap(0x7fe608a55000, 2257376) = 0
00:05:28 munmap(0x7fe60882d000, 2235440) = 0
00:05:28 munmap(0x7fe6085bd000, 2538792) = 0
00:05:28 munmap(0x7fe6081d5000, 4083672) = 0
00:05:28 munmap(0x7fe607fad000, 2222432) = 0
00:05:28 munmap(0x7fe60934d000, 2108600) = 0
00:05:28 munmap(0x7fe609555000, 2126208) = 0
00:05:28 munmap(0x7fe60997d000, 2117144) = 0
00:05:28 munmap(0x7fe609765000, 2162768) = 0
00:05:28 munmap(0x7fe609b85000, 2124576) = 0
00:05:28 munmap(0x7fe60e27d000, 65536)  = 0
00:05:28 munmap(0x7fe60e243000, 151552) = 0
00:05:28 munmap(0x7fe609d95000, 2505880) = 0
00:05:28 munmap(0x7fe60e1e0000, 151552) = 0
00:05:28 munmap(0x7fe60e197000, 299008) = 0
00:05:28 munmap(0x7fe60a000000, 2097152) = 0
00:05:28 munmap(0x7fe60e28d000, 323584) = 0
00:05:28 exit_group(255)                = ?
00:05:28 +++ exited with 255 +++
